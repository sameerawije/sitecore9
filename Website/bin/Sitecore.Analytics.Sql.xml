<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sitecore.Analytics.Sql</name>
    </assembly>
    <members>
        <member name="T:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProviderFactory">
            <summary>
             The factory, responsible for creation of the <see cref="T:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider"/> instances.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProviderFactory.#ctor(System.String,System.Int32,System.Int32,Sitecore.Xdb.Sql.Common.IRetryManager)">
            <summary>
              Creates a new instance of<see cref="T:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProviderFactory"/> class.
            </summary>
            <param name="connectionStringName">
              Name of the connection string used to establish connection with database.
            </param>
            <param name="commandTimeout">
              The wait time before the execution attempt of a database command is terminated and an error is generated.
            </param>
            <param name="ownershipTimeoutMs">
              The timeout in milliseconds during which each agent have to update <see cref="P:Sitecore.Analytics.Processing.Cursor.Accessed" /> in the database. 
              If it didn't happen, cursor is considered abandoned.
            </param>
            <param name="retryManager">
              The retry manager.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="connectionStringName"/> or <paramref name="retryManager"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.ArgumentException"><paramref name="ownershipTimeoutMs"/> is less than one millisecond. </exception>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProviderFactory.Create(System.Guid)">
            <summary>
              Creates an instance of the <see cref="T:Sitecore.Analytics.Processing.ICursorDataProvider"/> for specific task.
            </summary>
            <param name="taskId">The unique identifier of the task to create <see cref="T:Sitecore.Analytics.Processing.ICursorDataProvider"/> instance for.</param>
            <returns>
              The instance of the <see cref="T:Sitecore.Analytics.Processing.ICursorDataProvider"/> that can manage <see cref="T:Sitecore.Analytics.Processing.Cursor"/> 
              instances for task, specified in <paramref name="taskId"/>
            </returns>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider">
            <summary>
            Represents a data provider to work with <see cref="T:Sitecore.Analytics.Processing.Cursor"/> instances in the SQL database.
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.SchemaName">
            <summary>
            Gets the name database schema.
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.ColumnId">
            <summary>
            Gets the name of the Id column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.ColumnTaskId">
            <summary>
            Gets the name of the TaskId column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.ColumnCreated">
            <summary>
            Gets the name of the Created column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.ColumnAccessed">
            <summary>
            Gets the name of the Accessed column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.ColumnComputer">
            <summary>
            Gets the name of the Computer column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.ColumnProcess">
            <summary>
            Gets the name of the Process column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.ColumnAgent">
            <summary>
            Gets the name of the Agent column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.ColumnPriority">
            <summary>
            Gets the name of the Priority column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.ColumnSize">
            <summary>
            Gets the name of the Size column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.ColumnBookmark">
            <summary>
            Gets the name of the Bookmark column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.ColumnConsumed">
            <summary>
            Gets the name of the Consumed column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.ColumnIsDescending">
            <summary>
            Gets the name of the IsDescending column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.ColumnIsSplitRequested">
            <summary>
            Gets the name of the IsSplitRequested column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.ColumnIsCompleted">
            <summary>
            Gets the name of the IsCompleted column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.RoutineAddCursor">
            <summary>
            Gets the name of the AddCursor routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.RoutineDeleteCursorsByTaskId">
            <summary>
            Gets the name of the DeleteCursorsByTaskId routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.RoutineMarkCursorCompleted">
            <summary>
            Gets the name of the MarkCursorCompleted routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.RoutineTryAcquireCursor">
            <summary>
            Gets the name of the TryAcquireCursor routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.RoutineTryRegisterCursorSplitRequest">
            <summary>
            Gets the name of the TryRegisterCursorSplitRequest routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.RoutineUpdateCursorProgress">
            <summary>
            Gets the name of the UpdateCursorProgress routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.RoutineUpdateCursor">
            <summary>
            Gets the name of the UpdateCursor routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.RoutineGetCursorsCountByTaskId">
            <summary>
            Gets the name of the GetCursorsCountByTaskId routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.RoutineGetTotalNumberOfConsumedItemsByTaskId">
            <summary>
            Gets the name of the GetTotalNumberOfConsumedItemsByTaskId routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.RoutineAreAllCursorsCompleted">
            <summary>
            Gets the name of the AreAllCursorsCompleted routine
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProvider.#ctor(System.Guid,System.String,System.Int32,System.Int32,Sitecore.Xdb.Sql.Common.IRetryManager)">
            <summary>
              Creates a new instance of<see cref="T:Sitecore.Analytics.SqlCursorDataProvider"/> class.
            </summary>
            <param name="taskId">
              The <see cref="P:Sitecore.Analytics.Aggregation.History.HistoryTask.Id"/> associated with all the operations on <see cref="T:Sitecore.Analytics.Processing.Cursor"/> instances.
            </param>
            <param name="connectionStringName">
              Name of the connection string used to establish connection with database.
            </param>
            <param name="commandTimeout">
              The wait time before the execution attempt of a database command is terminated and an error is generated.
            </param>
            <param name="ownershipTimeoutMs">
              The timeout in milliseconds during which each agent have to update <see cref="P:Sitecore.Analytics.Processing.Cursor.Accessed" /> in the database. 
              If it didn't happen, cursor is considered abandoned.
            </param>
            <param name="retryManager">
              The retry manager.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="connectionStringName"/> or <paramref name="retryManager"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.ArgumentException"><paramref name="ownershipTimeoutMs"/> is less than one millisecond. </exception>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.History.SqlRebuildProcessStateDataProvider">
            <summary>
              Stores and retrieves state information about a rebuild process in a Microsoft SQL Server database.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlRebuildProcessStateDataProvider.#ctor(System.String,System.Int32,Sitecore.Xdb.Sql.Common.IRetryManager)">
            <summary>
              Creates a new instance of <see cref="T:Sitecore.Analytics.SqlDataProvider"/> class.
            </summary>
            <param name="connectionStringName">
              Name of the connection string used to establish connection with database.
            </param>
            <param name="commandTimeout">
              The wait time before the execution attempt of a database command is terminated and an error is generated.
            </param>
            <param name="retryManager">
              The retry manager.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="connectionStringName"/> or <paramref name="retryManager"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlRebuildProcessStateDataProvider.AddStateAsync(System.Guid,Sitecore.Analytics.Aggregation.History.RebuildStatus)">
            <summary>
              Adds a new status record for the rebuild process with the specified identifier.
            </summary>
            <param name="id">
              The unique identifier of the rebuild process.
            </param>
            <param name="state">
              The initial state of the rebuild process.
            </param>
            <returns>
              A <see cref="T:System.Threading.Tasks.Task"/> that represents the async task scheduled to be executed.
            </returns>
            <exception cref="T:System.InvalidOperationException">
              A state record for the rebuild process already exists.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlRebuildProcessStateDataProvider.GetStateAsync(System.Guid)">
            <summary>
              Gets the last recorded state of a rebuild process.
            </summary>
            <param name="id">
              The unique identifier of the rebuild process.
            </param>
            <returns>
              A <see cref="T:System.Threading.Tasks.Task`1"/> of <see cref="T:Sitecore.Analytics.Aggregation.History.RebuildStatus"/> object that represents the async task scheduled
              to be executed. The returned <see cref="T:Sitecore.Analytics.Aggregation.History.RebuildStatus"/> object reflects the last recorded state of the
              rebuild process; or <b>null</b> if the rebuild process has not been initialzed yet.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlRebuildProcessStateDataProvider.SetStateAsync(System.Guid,Sitecore.Analytics.Aggregation.History.RebuildStep,System.Collections.Generic.IReadOnlyCollection{Sitecore.Analytics.Aggregation.History.HistoryAggregationStatus})">
            <summary>
              Updates the state of a rebuild process.
            </summary>
            <param name="id">
              The unique identifier of the rebuild process to update.
            </param>
            <param name="state">
              A <see cref="T:Sitecore.Analytics.Aggregation.History.RebuildStep"/> value that indicates the current state of the rebuild process.
            </param>
            <param name="rebuildTargetStates">
              A read-only collection of <see cref="T:Sitecore.Analytics.Aggregation.History.HistoryAggregationStatus"/> objects that contains a state record for
              each rebuild target in the rebuild process.
            </param>
            <returns>
              A <see cref="T:System.Threading.Tasks.Task"/> that represents the async task scheduled to be executed.
            </returns>
            <exception cref="T:System.InvalidOperationException">
              When there is no existing rebuild task.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlRebuildProcessStateDataProvider.SetFailureAsync(System.Guid,System.String,System.Collections.Generic.IReadOnlyCollection{Sitecore.Analytics.Aggregation.History.HistoryAggregationStatus})">
            <summary>
              Marks a rebuild process as failed.
            </summary>
            <param name="id">
              The unique identifier of the rebuild process to update.
            </param>
            <param name="description">
              The human-readable description of the condition that caused the rebuild process to fail.
            </param>
            <param name="rebuildTargetStates">
              A read-only collection of <see cref="T:Sitecore.Analytics.Aggregation.History.HistoryAggregationStatus"/> objects that contains a state record for
              each rebuild target in the rebuild process.
            </param>
            <returns>
              A <see cref="T:System.Threading.Tasks.Task"/> that represents the async task scheduled to be executed.
            </returns>
            <exception cref="T:System.InvalidOperationException">
              When there is no existing rebuild task.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlRebuildProcessStateDataProvider.DeleteStateAsync(System.Guid)">
            <summary>
              Deletes the rebuild process state with the specified unique identifier.
            </summary>
            <param name="id">
              The unique identifier of the rebuild process to delete.
            </param>
            <returns>
              A <see cref="T:System.Threading.Tasks.Task"/> that represents the async task scheduled to be executed.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlRebuildProcessStateDataProvider.ReadRebuildState(System.Data.SqlClient.SqlDataReader)">
            <summary>
              Restores a <see cref="T:Sitecore.Analytics.Aggregation.History.RebuildStatus"/> object from the current position of a data reader object.
            </summary>
            <param name="reader">
              A <see cref="T:System.Data.SqlClient.SqlDataReader"/> to read persisted values from.
            </param>
            <returns>
              The <see cref="T:Sitecore.Analytics.Aggregation.History.RebuildStatus"/> object restored from the specified data reader.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlRebuildProcessStateDataProvider.ReadRebuildTargetStatesAsync(System.Data.SqlClient.SqlDataReader)">
            <summary>
              Restores multiple <see cref="T:Sitecore.Analytics.Aggregation.History.HistoryAggregationStatus"/> objects from the specified data reader.
            </summary>
            <param name="reader">
              A <see cref="T:System.Data.SqlClient.SqlDataReader"/> to read persisted values from.
            </param>
            <returns>
              A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:Sitecore.Analytics.Aggregation.History.HistoryAggregationStatus"/> objects restored from the specified
              data reader.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlRebuildProcessStateDataProvider.ReaderRebuildTargetState(System.Data.SqlClient.SqlDataReader)">
            <summary>
              Restores a <see cref="T:Sitecore.Analytics.Aggregation.History.HistoryAggregationStatus"/> object from the current position of a data reader
              object.
            </summary>
            <param name="reader">
              A <see cref="T:System.Data.SqlClient.SqlDataReader"/> to read persisted values from.
            </param>
            <returns>
              The <see cref="T:Sitecore.Analytics.Aggregation.History.HistoryAggregationStatus"/> object restored from the specified data reader.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlRebuildProcessStateDataProvider.CreateParametersForAdd(System.Guid,Sitecore.Analytics.Aggregation.History.RebuildStatus)">
            <summary>
              Returns a read-only collection of <see cref="T:System.Data.SqlClient.SqlParameter"/> objects that can be passed to the
              <b>History_AddTaskState</b> stored procedure.
            </summary>
            <param name="id">
              The unique identifier of the rebuild process.
            </param>
            <param name="state">
              The state of the rebuild process.
            </param>
            <returns>
              The read-only collection of <see cref="T:System.Data.SqlClient.SqlParameter"/> objects that can be passed to the
              <b>History_AddTaskState</b> stored procedure.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlRebuildProcessStateDataProvider.CreateParametersForAdd(System.Guid,Sitecore.Analytics.Aggregation.History.HistoryAggregationStatus)">
            <summary>
              Returns a read-only collection of <see cref="T:System.Data.SqlClient.SqlParameter"/> objects that can be passed to the
              <b>History_AddTaskState</b> stored procedure.
            </summary>
            <param name="id">
              The unique identifier of the rebuild process.
            </param>
            <param name="state">
              The state of the rebuild process.
            </param>
            <returns>
              The read-only collection of <see cref="T:System.Data.SqlClient.SqlParameter"/> objects that can be passed to the
              <b>History_AddTaskState</b> stored procedure.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlRebuildProcessStateDataProvider.CreateParametersForGetById(System.Guid)">
            <summary>
              Returns a read-only collection of <see cref="T:System.Data.SqlClient.SqlParameter"/> objects that can be passed to the
              <b>History_GetTaskStateById</b> stored procedure.
            </summary>
            <param name="id">
              The unique identifier of the rebuild process.
            </param>
            <returns>
              The read-only collection of <see cref="T:System.Data.SqlClient.SqlParameter"/> objects that can be passed to the
              <b>History_GetTaskStateById</b> stored procedure.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlRebuildProcessStateDataProvider.CreateParametersForUpdate(System.Guid,Sitecore.Analytics.Aggregation.History.RebuildStep,System.String)">
            <summary>
              Returns a read-only collection of <see cref="T:System.Data.SqlClient.SqlParameter"/> objects that can be passed to the
              <b>History_UpdateTaskState</b> stored procedure.
            </summary>
            <param name="id">
              The unique identifier of the rebuild process.
            </param>
            <param name="step">
              The most recent step executed in the rebuild process.
            </param>
            <param name="description">
              The description of the state if available.
            </param>
            <returns>
              The read-only collection of <see cref="T:System.Data.SqlClient.SqlParameter"/> objects that can be passed to the
              <b>History_UpdateTaskState</b> stored procedure.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlRebuildProcessStateDataProvider.CreateParametersForClearTargetStates(System.Guid)">
            <summary>
              Returns a read-only collection of <see cref="T:System.Data.SqlClient.SqlParameter"/> objects that can be passed to the
              <b>History_DeleteTargetStatesByTaskStateId</b> stored procedure.
            </summary>
            <param name="id">
              The unique identifier of the rebuild process.
            </param>
            <returns>
              The read-only collection of <see cref="T:System.Data.SqlClient.SqlParameter"/> objects that can be passed to the
              <b>History_DeleteTargetStatesByTaskStateId</b> stored procedure.
            </returns>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.History.SqlHistoryTaskDataProvider">
            <summary>
            Represents a data provider to work with historical reaggregation task in the SQL database.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlHistoryTaskDataProvider.#ctor(System.String,System.Int32,Sitecore.Xdb.Sql.Common.IRetryManager)">
            <summary>
              Creates a new instance of <see cref="T:Sitecore.Analytics.Aggregation.History.SqlHistoryTaskDataProvider"/> class.
            </summary>
            <param name="connectionStringName">
              Name of the connection string used to establish connection with database.
            </param>
            <param name="commandTimeout">
              The wait time before the execution attempt of a database command is terminated and an error is generated.
            </param>
            <param name="retryManager">
              The retry manager.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="connectionStringName"/> or <paramref name="retryManager"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlHistoryTaskDataProvider.AddHistoryTaskAsync(Sitecore.Analytics.Aggregation.History.HistoryTask)">
            <summary>
            Asynchronously creates new <see cref="T:Sitecore.Analytics.Aggregation.History.HistoryTask"/> in the data store.
            </summary>
            <param name="task">The <see cref="T:Sitecore.Analytics.Aggregation.History.HistoryTask"/> that should be saved to the data store.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task"/> representing asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="task"/> is null.</exception>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlHistoryTaskDataProvider.TryGetHistoryTaskAsync(System.Guid)">
            <summary>
            Asynchronously attempts to get a <see cref="T:Sitecore.Analytics.Aggregation.History.HistoryTask"/> created by <see cref="M:Sitecore.Analytics.Aggregation.History.SqlHistoryTaskDataProvider.AddHistoryTaskAsync(Sitecore.Analytics.Aggregation.History.HistoryTask)"/>.
            </summary>
            <param name="taskId">The id of task that should be retrieved from the data store.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1"/> with the <see cref="T:Sitecore.Analytics.Aggregation.History.HistoryTask"/> instance if task exists. 
            Otherwise returns <c>null</c>.</returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlHistoryTaskDataProvider.EnsureHistoryTaskDeletedAsync(System.Guid)">
            <summary>
            Asynchronously deletes a <see cref="T:Sitecore.Analytics.Aggregation.History.HistoryTask"/> if there is one with specified <paramref name="taskId"/>.
            </summary>
            <param name="taskId">The id of task that should be deleted from the data store.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task"/> representing asynchronous operation.</returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlHistoryTaskDataProvider.UpdateHistoryTaskAsync(Sitecore.Analytics.Aggregation.History.HistoryTask)">
            <summary>
            Updates existing <see cref="T:Sitecore.Analytics.Aggregation.History.HistoryTask"/> using <see cref="P:Sitecore.Analytics.Aggregation.History.HistoryTask.Id"/> as a search criteria.
            </summary>
            <param name="task">A <see cref="T:Sitecore.Analytics.Aggregation.History.HistoryTask"/> instance with values that should be saved.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task"/> representing asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="task"/> is null.</exception>
            <exception cref="T:Sitecore.Analytics.Aggregation.History.HistoryTaskDoesNotExistException"><see cref="T:Sitecore.Analytics.Aggregation.History.HistoryTask"/> does not exist.</exception>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlHistoryTaskDataProvider.CreateParametersForHistoryTask(Sitecore.Analytics.Aggregation.History.HistoryTask)">
            <summary>
            Creates an <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Data.SqlClient.SqlParameter"/> passed for execution to <see cref="F:Sitecore.Analytics.Aggregation.History.SqlHistoryTaskDataProvider.RoutineAddTask"/> and <see cref="F:Sitecore.Analytics.Aggregation.History.SqlHistoryTaskDataProvider.RoutineTryUpdateTaskById"/>stored procedures.
            </summary>
            <param name="task">The <see cref="T:Sitecore.Analytics.Aggregation.History.HistoryTask"/> that contains values to save in the database.</param>
            <returns>The <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Data.SqlClient.SqlParameter"/> passed for execution to <see cref="F:Sitecore.Analytics.Aggregation.History.SqlHistoryTaskDataProvider.RoutineAddTask"/> and <see cref="F:Sitecore.Analytics.Aggregation.History.SqlHistoryTaskDataProvider.RoutineTryUpdateTaskById"/>stored procedures.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="task"/> is null.</exception>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlHistoryTaskDataProvider.CreateIdParameter(System.Guid)">
            <summary>
            Creates a<see cref="T:System.Data.SqlClient.SqlParameter"/> passed for execution to <see cref="F:Sitecore.Analytics.Aggregation.History.SqlHistoryTaskDataProvider.RoutineTryDeleteTaskById"/> and <see cref="F:Sitecore.Analytics.Aggregation.History.SqlHistoryTaskDataProvider.RoutineGetTaskBy"/>stored procedures.
            </summary>
            <param name="id">The id of the <see cref="T:Sitecore.Analytics.Aggregation.History.HistoryTask"/> that should be retrieved from database.</param>
            <returns>The <see cref="T:System.Data.SqlClient.SqlParameter"/> passed for execution to <see cref="F:Sitecore.Analytics.Aggregation.History.SqlHistoryTaskDataProvider.RoutineTryDeleteTaskById"/> and <see cref="F:Sitecore.Analytics.Aggregation.History.SqlHistoryTaskDataProvider.RoutineGetTaskBy"/>stored procedures.</returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.History.SqlHistoryTaskDataProvider.ReadHistoryTaskAsync(System.Data.Common.DbDataReader)">
            <summary>
              Creates a <see cref="T:Sitecore.Analytics.Aggregation.History.HistoryTask"/> object using data read from the specified <see cref="T:System.Data.Common.DbDataReader"/> object.
            </summary>
            <param name="reader">
              The <see cref="T:System.Data.Common.DbDataReader"/> object to read data from.
            </param>
            <returns>
              The <see cref="T:Sitecore.Analytics.Aggregation.History.HistoryTask"/> initialized with the values read from <paramref name="reader"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="reader"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.IColumnOrderProvider">
            <summary>
              Allows a class to implement a provider that determines the expected order of columns in a data table.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.IColumnOrderProvider.GetColumnOrder(System.String,System.String)">
            <summary>
              Returns an array of <see cref="T:System.String"/> values containing the names of the columns in the expected order.
            </summary>
            <param name="schemaName">
              The name of the schema containing the table.
            </param>
            <param name="tableName">
              The name of the table for which to determine the column order.
            </param>
            <returns>
              An array of <see cref="T:System.String"/> values containing the names of the columns in the expected order.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="schemaName"/> or <paramref name="tableName"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.Scripting.Builders.AccountMutableDimensionUpsertStatementBuilder">
            <summary>
            Builds the UPSERT SQL for the Accounts dimension table.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.Builders.AccountMutableDimensionUpsertStatementBuilder.Build(Sitecore.Analytics.Scripting.IScriptWriter,System.Data.DataRow)">
            <summary>
              Builds the SQL statement for inserting or updating the specified
              <see cref="T:System.Data.DataRow"/>.
            </summary>
            <param name="writer">
              A <see cref="T:Sitecore.Analytics.Scripting.IScriptWriter"/> that receives the generated script and
              parameters.
            </param>
            <param name="row">
              The <see cref="T:System.Data.DataRow"/> object that represents the data for which
              to generate an SQL statement.
            </param>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.Scripting.Builders.TypeBasedStatementBuilder">
            <summary>
              An SQL statement builder to create statements for objects inheriting form <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.Table"/>. Statements
              will execute a stored procedure with a name defined by the type and name of each table object. Stored
              procedure name are on the form [table type-specific prefix][table type name].
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Aggregation.Scripting.Builders.TypeBasedStatementBuilder.prefixes">
            <summary>
            A collection of mappings from table types to prefix names.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.Builders.TypeBasedStatementBuilder.AddPrefix(Sitecore.Analytics.Aggregation.SqlRoutineTypeMap)">
            <summary>
            Adds the mapping between a table and stored procedure prefix.
            </summary>
            <param name="sqlRoutinePrefix">
            A mapping between a table .
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.Builders.TypeBasedStatementBuilder.Build(Sitecore.Analytics.Scripting.IScriptWriter,Sitecore.Analytics.Aggregation.Data.Model.Table)">
            <summary>
            Builds the SQL statement for inserting or updating the content of a <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.Table"/> object.
            </summary>
            <param name="writer">
            An <see cref="T:Sitecore.Analytics.Scripting.IScriptWriter"/> to receive the generated script and parameters.
            </param>
            <param name="table">
            The <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.Table"/> object that represents the data for which to generate an SQL statement.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.Builders.TypeBasedStatementBuilder.IsMapped(Sitecore.Analytics.Aggregation.Data.Model.Table)">
            <summary>
            Determines whether the specified table type is mapped to a stored procedure prefix.
            </summary>
            <param name="table">
            <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.Table"/> object for which to look up a mapping.
            </param>
            <returns>
            A value indicating whether a mapping exists.
            </returns>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.Scripting.Builders.GenericUpsertStatementBuilder">
            <summary>
              Allows a class to implement a generic <c>UPSERT</c> statement builder.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.Builders.GenericUpsertStatementBuilder.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:Sitecore.Analytics.Aggregation.Scripting.Builders.GenericUpsertStatementBuilder"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.Scripting.Builders.SqlGenericDimensionUpsertStatementBuilder">
            <summary>
            Generic SQL <c>UPSERT</c> statement builder for dimension tables.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Aggregation.Scripting.Builders.SqlGenericDimensionUpsertStatementBuilder.LIST_SEPARATOR">
            <summary>
            The lis t_ separator.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Aggregation.Scripting.Builders.SqlGenericDimensionUpsertStatementBuilder.VARIABLE_NAME_PREFIX">
            <summary>
            The variabl e_ nam e_ prefix.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.Builders.SqlGenericDimensionUpsertStatementBuilder.Build(Sitecore.Analytics.Scripting.IScriptWriter,System.Data.DataRow)">
            <summary>
            Builds the SQL statement for inserting or updating the specified
              <see cref="T:System.Data.DataRow"/>.
            </summary>
            <param name="writer">
            A <see cref="T:Sitecore.Analytics.Scripting.IScriptWriter"/> that receives the generated script and
              parameters.
            </param>
            <param name="row">
            The <see cref="T:System.Data.DataRow"/> object that represents the data for which
              to generate an SQL statement.
            </param>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.Scripting.Builders.SqlGenericFactUpsertStatementBuilder">
            <summary>
              Generic SQL <c>UPSERT</c> statement builder for fact tables.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.Builders.SqlGenericFactUpsertStatementBuilder.Build(Sitecore.Analytics.Scripting.IScriptWriter,System.Data.DataRow)">
            <summary>
              Builds the SQL statement for inserting or updating the specified
              <see cref="T:System.Data.DataRow"/>.
            </summary>
            <param name="writer">
              A <see cref="T:Sitecore.Analytics.Scripting.IScriptWriter"/> that receives the generated script and
              parameters.
            </param>
            <param name="row">
              The <see cref="T:System.Data.DataRow"/> object that represents the data for which
              to generate an SQL statement.
            </param>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.Scripting.Builders.ExecRoutineStatementBuilder">
            <summary>
              Implements an SQL statement builder that writes a stored procedure call to the script writer.
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.Scripting.Builders.ExecRoutineStatementBuilder.ColumnOrderProvider">
            <summary>
              Gets or sets the <see cref="T:Sitecore.Analytics.Aggregation.IColumnOrderProvider"/> that can be used to determine the expected order of
              columns in the data table.
            </summary>
            <value>
              The <see cref="T:Sitecore.Analytics.Aggregation.IColumnOrderProvider"/> that can be used to determine the expected order of columns in the
              data table; or <b>null</b> if not available.
            </value>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.Builders.ExecRoutineStatementBuilder.AddMapping(Sitecore.Analytics.Aggregation.SqlMappingEntity)">
            <summary>
              Registers a new table name to store procedure name mapping with the current statement builder.
            </summary>
            <param name="entry">
              A <see cref="T:Sitecore.Analytics.Aggregation.SqlMappingEntity"/> that contains the mapping information.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.Builders.ExecRoutineStatementBuilder.Build(Sitecore.Analytics.Scripting.IScriptWriter,System.Data.DataTable)">
            <summary>
              Builds the SQL statement for inserting or updating for each row in
              the specified <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.Table"/> into a database.
            </summary>
            <param name="writer">
              A <see cref="T:Sitecore.Analytics.Scripting.IScriptWriter"/> that receives the generated script and
              parameters.
            </param>
            <param name="table">
              A <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.Table"/> oject that contains the data for which to
              generate SQL statements.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.Builders.ExecRoutineStatementBuilder.Build(Sitecore.Analytics.Scripting.IScriptWriter,System.Data.DataRow)">
            <summary>
              Builds the SQL statement for inserting or updating the specified <see cref="T:System.Data.DataRow"/>.
            </summary>
            <param name="writer">
              A <see cref="T:Sitecore.Analytics.Scripting.IScriptWriter"/> that receives the generated script and parameters.
            </param>
            <param name="row">
              The <see cref="T:System.Data.DataRow"/> object that represents the data for which to generate an SQL statement.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.Builders.ExecRoutineStatementBuilder.IsMapped(System.String)">
            <summary>
              Determines whether the specified table name is mapped to a stored procedure.
            </summary>
            <param name="tableName">
              Name of the table to check.
            </param>
            <returns>
              <b>true</b> if the specified table name is mapped to a stored procedure; otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.Scripting.Builders.UpsertStatementBuilder">
            <summary>
              Base class for SQL <c>UPSERT</c> statement builders.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.Builders.UpsertStatementBuilder.Build(Sitecore.Analytics.Scripting.IScriptWriter,System.Data.DataTable)">
            <summary>
              Builds the SQL statement for inserting or updating for each row in
              the specified <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.Table"/> into a database.
            </summary>
            <param name="writer">
              A <see cref="T:Sitecore.Analytics.Scripting.IScriptWriter"/> that receives the generated script and
              parameters.
            </param>
            <param name="table">
              A <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.Table"/> oject that contains the data for which to
              generate SQL statements.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.Builders.UpsertStatementBuilder.Build(Sitecore.Analytics.Scripting.IScriptWriter,System.Data.DataRow)">
            <summary>
              Builds the SQL statement for inserting or updating the specified
              <see cref="T:System.Data.DataRow"/>.
            </summary>
            <param name="writer">
              A <see cref="T:Sitecore.Analytics.Scripting.IScriptWriter"/> that receives the generated script and
              parameters.
            </param>
            <param name="row">
              The <see cref="T:System.Data.DataRow"/> object that represents the data for which
              to generate an SQL statement.
            </param>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.Scripting.SqlScriptWriterEx">
            <summary>
              Represents a T-SQL script writer that produces an array of <see cref="T:System.Data.SqlClient.SqlCommand"/> objects, each with a
              maximum of 2000 parameters.
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.Scripting.SqlScriptWriterEx.ParameterCount">
            <summary>
              Gets the total number of parameters currently maintained for the current script writer.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.SqlScriptWriterEx.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:Sitecore.Analytics.Aggregation.Scripting.SqlScriptWriterEx"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.SqlScriptWriterEx.Append(System.String)">
            <summary>
              Appends a string value to the script.
            </summary>
            <param name="text">
              The text value to be appended.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="text"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.SqlScriptWriterEx.Append(System.String,System.Object[])">
            <summary>
              Formats the specified string and appends it to the script.
            </summary>
            <param name="format">
              A composite format string.
            </param>
            <param name="args">
              An object array that contains zero or more objects to format. 
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="format"/> or <paramref name="args"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.FormatException">
              The agument <paramref name="format"/> is not valid.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.SqlScriptWriterEx.AppendLine">
            <summary>
              Appends a line-break to the script.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.SqlScriptWriterEx.AppendLine(System.String)">
            <summary>
              Appends a string value followed by a line-break to the script.
            </summary>
            <param name="text">
              The text value to be appended.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="text"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.SqlScriptWriterEx.AppendLine(System.String,System.Object[])">
            <summary>
              Formats the specified string and appends it to the script followed
              by a line break.
            </summary>
            <param name="format">
              A composite format string.
            </param>
            <param name="args">
              An object array that contains zero or more objects to format. 
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="format"/> or <paramref name="args"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.FormatException">
              The agument <paramref name="format"/> is not valid.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.SqlScriptWriterEx.Append(System.Data.IDbDataParameter)">
            <summary>
              Appends a parameter to the current script.
            </summary>
            <param name="parameter">
              The parameter to be appended.
            </param>
            <remarks>
              This method first adds the parameter to the internally maintaned collectiopn of parameters and then appends
              the name of the parameter to the script.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="parameter"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.SqlScriptWriterEx.Append(System.Data.SqlClient.SqlCommand)">
            <summary>
              Writes the content of the speccified <see cref="T:System.Data.SqlClient.SqlCommand"/> object to the end of the current script.
            </summary>
            <param name="command">
              The <see cref="T:System.Data.SqlClient.SqlCommand"/> object to append to the current script.
            </param>
            <exception cref="T:System.NotImplementedException">
              The specified command type is not supported.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.SqlScriptWriterEx.InsertBoundary">
            <summary>
              Signals the script writer that a point has been reached at which it is safe to split the script.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.SqlScriptWriterEx.Build">
            <summary>
              Returns database command object representing the current script.
            </summary>
            <returns>
              A database command object representing the current script.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.SqlScriptWriterEx.BuildCommands">
            <summary>
            Returns the individual commands as one big command to support IScriptWriter behavior. Use the Commands property to avoid exceeding the parameter limit.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.Scripting.SqlParameterCollection">
            <summary>
            Represents a collection of <see cref="T:System.Data.SqlClient.SqlParameter"/> objects.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.SqlParameterCollection.OnAreEqual(System.Data.SqlClient.SqlParameter,System.Data.SqlClient.SqlParameter)">
            <summary>
            Determines whether the specified <see cref="T:System.Data.SqlClient.SqlParameter"/> objects are equal except for their names.
            </summary>
            <param name="left">
            The left.
            </param>
            <param name="right">
            The right.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
            <remarks>
            This implementation compare only the properties not accessible through
              the <see cref="T:System.Data.IDbDataParameter"/> interface.
            </remarks>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.SqlParameterCollection.OnFormatParameterName(System.Int32)">
            <summary>
            Generates a name for the parameter with the specified index.
            </summary>
            <param name="index">
            The zero-based index of the parameter to generate a name for.
            </param>
            <returns>
            The name of the parameter.
            </returns>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.Scripting.SqlScriptWriter">
            <summary>
              Represents a T-SQL script writer that produces a single <see cref="T:System.Data.SqlClient.SqlCommand"/> object.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.SqlScriptWriter.Append(System.Data.SqlClient.SqlCommand)">
            <summary>
              Writes the content of the specified <see cref="T:System.Data.SqlClient.SqlCommand"/> object to the end of the current script.
            </summary>
            <param name="command">
              The <see cref="T:System.Data.SqlClient.SqlCommand"/> object to append to the current script.
            </param>
            <exception cref="T:System.NotImplementedException">
              The specified command type is not supported.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.SqlScriptWriter.AppendRoutine(System.Data.SqlClient.SqlCommand)">
            <summary>
              Writes the content of the specified <see cref="T:System.Data.SqlClient.SqlCommand"/> object to the end of the current script.
            </summary>
            <param name="command">
              The <see cref="T:System.Data.SqlClient.SqlCommand"/> object to append to the current script.
            </param>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.Scripting.SqlUtilities">
            <summary>
              Static utility methods used by the data access layer for SQL.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.SqlUtilities.CreateCompatibleParameter(System.Data.DataRow,System.Data.DataColumn)">
            <summary>
              Creates a <see cref="T:System.Data.SqlClient.SqlParameter"/> object for the value in the
              specified column of the specified data row.
            </summary>
            <param name="row">
              A <see cref="T:System.Data.DataRow"/> object containing the value.
            </param>
            <param name="column">
              A <see cref="T:System.Data.DataColumn"/> object that identifies the value in the <see cref="T:System.Data.DataRow"/>.
            </param>
            <returns>
              An <see cref="T:System.Data.SqlClient.SqlParameter"/> object that encapsulates the specified value.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.SqlUtilities.CreateCompatibleTable(System.Data.DataTable,System.String[])">
            <summary>
              Ensures that a data table can be used as a table-valued parameters.
            </summary>
            <param name="table">
              The <see cref="T:System.Data.DataTable"/> to analyze and convert if neccessary.
            </param>
            <param name="order">
              An array of <see cref="T:System.String"/> values that specify the expected order of columns.
            </param>
            <returns>
              The original data table if it can be used as is; otherwise, a copy with the hash code columns converted to
              SQL types.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.SqlUtilities.GetCompatibleValue(System.Object)">
            <summary>
              Returns an SQL friendly value for <see cref="T:Sitecore.Analytics.Core.Hash32"/>, <see cref="T:Sitecore.Analytics.Core.Hash64"/>, and
              <see cref="T:Sitecore.Analytics.Core.Hash128"/> values; and the value it self for anything else.
            </summary>
            <param name="value">
              The value to convert.
            </param>
            <returns>
              The SQL friendly value.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.SqlUtilities.GetCompatibleDataType(System.Type)">
            <summary>
              Returns the SQL friendly <see cref="T:System.Type"/> for the specified <see cref="T:System.Type"/>.
            </summary>
            <param name="type">
              The <see cref="T:System.Type"/> to return the SQL friendly <see cref="T:System.Type"/> for.
            </param>
            <returns>
              <see cref="T:System.Int32"/> for <see cref="T:Sitecore.Analytics.Core.Hash32"/>, <see cref="T:System.Int64"/> for <see cref="T:Sitecore.Analytics.Core.Hash64"/>,
              <see cref="T:System.Guid"/> for <see cref="T:Sitecore.Analytics.Core.Hash128"/>, and the specified type for everything else.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.SqlUtilities.ReorderTableColumns(System.Data.DataTable,System.String[])">
            <summary>
              Reorders columns in the specified data table.
            </summary>
            <param name="table">
              The <see cref="T:System.Data.DataTable"/> to to reorder.
            </param>
            <param name="ordered">
              An array of <see cref="T:System.String"/> values containing the names of the columns in the expected order.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.Scripting.SqlUtilities.IsTableCompatible(System.Data.DataTable)">
            <summary>
              Determines whether the specified <see cref="T:System.Data.DataTable"/> contains any <see cref="T:Sitecore.Analytics.Core.Hash32"/>,
              <see cref="T:Sitecore.Analytics.Core.Hash64"/>, or <see cref="T:Sitecore.Analytics.Core.Hash128"/> columns.
            </summary>
            <param name="table">
              The <see cref="T:System.Data.DataTable"/> to check.
            </param>
            <returns>
              <b>true</b> if <paramref name="table"/> does not contain <see cref="T:Sitecore.Analytics.Core.Hash32"/>, <see cref="T:Sitecore.Analytics.Core.Hash64"/>,
              or <see cref="T:Sitecore.Analytics.Core.Hash128"/> columns; otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.SqlUserDefinedTableTypeColumnOrderProvider">
            <summary>
              Determines order of columns for user defined table types defined in the Microsoft SQL Server database.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlUserDefinedTableTypeColumnOrderProvider.#ctor(Sitecore.Data.DataProviders.Sql.SqlDataApi)">
            <summary>
              Initializes a new instance of the <see cref="T:Sitecore.Analytics.Aggregation.SqlUserDefinedTableTypeColumnOrderProvider"/> class.
            </summary>
            <param name="api">
              A <see cref="T:Sitecore.Data.DataProviders.Sql.SqlDataApi"/> object that provides access to the SQL database.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="api"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlUserDefinedTableTypeColumnOrderProvider.GetColumnOrder(System.String,System.String)">
            <summary>
              Returns an array of <see cref="T:System.String"/> values containing the names of the columns in the expected order.
            </summary>
            <param name="schemaName">
              The name of the schema containing the UDTT definition.
            </param>
            <param name="typeName">
              The name of the UDTT for which to get the column order.
            </param>
            <returns>
              An array of <see cref="T:System.String"/> values containing the names of the columns in the expected order.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="schemaName"/> or <paramref name="typeName"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlUserDefinedTableTypeColumnOrderProvider.FormatCacheKey(System.String,System.String)">
            <summary>
              Formats the specified schema and table name into a single value that can be used as cache item key.
            </summary>
            <param name="schemaName">
              The name of the schema containing the UDTT definition.
            </param>
            <param name="typeName">
              The name of the UDTT for which to get the column order.
            </param>
            <returns>
              A string <see cref="T:System.String"/> that combines the specified schema and table name.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlUserDefinedTableTypeColumnOrderProvider.RetrieveColumnNamesFromDatabase(System.String,System.String)">
            <summary>
              Retrieves the column names for a UDTT from the database.
            </summary>
            <param name="schemaName">
              The name of the schema containing the UDTT definition.
            </param>
            <param name="typeName">
              The name of the UDTT for which to get the column order.
            </param>
            <returns>
              An array of <see cref="T:System.String"/> values containing the names of the columns in the order they are defined by
              the UDTT type.
            </returns>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider">
            <summary>
              Implements storage provider for the SQL Reporting Database that supports aggregation data batches.
            </summary>
            <summary>
            Implements reporting storage provider for SQL reporting database.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.Store(Sitecore.Analytics.Aggregation.Data.Model.IReportingStorageItemBatch)">
            <summary>
              Stores a batch of interaction aggregation data sets in a single trasnaction.
            </summary>
            <param name="batch">
              An <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.IReportingStorageItemBatch"/> object that contains the interactions to be stored
              in the reporting storage.
            </param>
            <exception cref="T:System.Exception">
              An error occured while storing the data set.
            </exception>
            <remarks>
              Items that could not be stored are marked postponed in the specified batch.
            </remarks>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.StoreBatch(Sitecore.Analytics.Aggregation.Data.Model.IReportingStorageItemBatch)">
            <summary>
              Stores a batch of interaction aggregation data sets in the database.
            </summary>
            <param name="batch">
              An <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.IReportingStorageItemBatch"/> object that contains the interactions to be stored
              in the reporting storage.
            </param>
            <exception cref="T:System.Exception">
              An error occured while storing the data set.
            </exception>
            <remarks>
              Items that could not be stored are marked postponed in the specified batch.
            </remarks>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.StoreItem(Sitecore.Analytics.Aggregation.Data.Model.IReportingStorageItem)">
            <summary>
              Stores a single interaction aggregation data sets in the database.
            </summary>
            <param name="item">
              The <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.IReportingStorageItem"/> object to store.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="item"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.CreateFilterToIgnoreDuplicates(Sitecore.Data.DataProviders.Sql.SqlDataApi,Sitecore.Analytics.Aggregation.Data.Model.IReportingStorageItemBatch)">
            <summary>
              Creates a delegate that can be used as a predicate to filter the batch.
            </summary>
            <param name="api">
              A <see cref="T:Sitecore.Data.DataProviders.Sql.SqlDataApi"/> object that that provides access to the database.
            </param>
            <param name="batch">
              The <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.IReportingStorageItemBatch"/> to compare to the trail tables.
            </param>
            <returns>
              A delegate that can be used to filter the specified batch.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="api"/> or <paramref name="batch"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.CreateParameter(Sitecore.Analytics.Aggregation.Data.Model.IReportingStorageItemBatch,System.Func{Sitecore.Analytics.Aggregation.Data.Model.IReportingStorageItem,System.Boolean})">
            <summary>
              Creates a table valued <see cref="T:System.Data.SqlClient.SqlParameter"/> containings all dataset identifiers in the specified batch.
            </summary>
            <param name="batch">
              The <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.IReportingStorageItemBatch"/> to for which to create the table-valued parameter.
            </param>
            <param name="filter">
              A predicate that determines which items in the batch to include.
            </param>
            <returns>
              A new <see cref="T:System.Data.SqlClient.SqlParameter"/> object that is a table-valued parameter containing all dataset identifiers
              from the specified batch.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.CreateCursor(Sitecore.Analytics.Aggregation.Data.Model.IReportingStorageItemBatch,System.Func{Sitecore.Analytics.Aggregation.Data.Model.IReportingStorageItem,System.Boolean})">
            <summary>
              Returns an <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/> based enumerator for transfering data to a table-valued parameter.
            </summary>
            <param name="batch">
              The batch of storage items for which to create the enumerator.
            </param>
            <param name="filter">
              A predicate that determines which items in the batch to include.
            </param>
            <returns>
              An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/> objects containing the keys of the
              interactions from the specified batch.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.Commit(Sitecore.Data.DataProviders.Sql.SqlDataApi,Sitecore.Analytics.Aggregation.Data.Model.IReportingStorageItemBatch,System.Func{Sitecore.Analytics.Aggregation.Data.Model.IReportingStorageItem,System.Boolean})">
            <summary>
              Commits the specified aggregation data set to the specified SQL database as a single transaction.
            </summary>
            <param name="api">
              A <see cref="T:Sitecore.Data.DataProviders.Sql.SqlDataApi"/> object that represents the database to commit the data set to.
            </param>
            <param name="batch">
              An <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.IReportingStorageItemBatch"/> object that contains the batch of data sets to commit.
            </param>
            <param name="filter">
              A predicate that accepts a <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.IReportingStorageItem"/> and returns a <see cref="T:System.Boolean"/> value
              indicating whether to include the item.
            </param>
        </member>
        <member name="F:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.tablesExcludedFromDataDeletion">
            <summary>
            A collection of schema and table names of tables to be excluded when deleting reporting data.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider"/> class. 
            Creates a new instance of <see cref="T:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider"/>.
            </summary>
            <param name="connectionStringName">
            Name of the connection string in the configuration file to use for the provider.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider"/> class. 
            Creates a new instance of <see cref="T:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider"/>.
            </summary>
            <param name="connectionStringName">
            Name of the connection string in the configuration file to use for the provider.
            </param>
            <param name="cutoffBehavior">
            The behavior of the storage provider in relation to the cutoff date.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.#ctor(System.String,Sitecore.Analytics.Aggregation.CutoffBehavior)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider"/> class. 
            Creates a new instance of <see cref="T:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider"/>.
            </summary>
            <param name="connectionStringName">
            Name of the connection string in the configuration file to use for the provider.
            </param>
            <param name="cutoffBehavior">
            The behavior of the storage provider in relation to the cutoff date.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.#ctor(Sitecore.Data.DataProviders.Sql.SqlDataApi)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider"/> class. 
            Creates a new instance of <see cref="T:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider"/>.
            </summary>
            <param name="sqlDataApi">
            The SQL Data API.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.CreateTransaction">
            <summary>
            Begins a new transaction.
            </summary>
            <returns>
            A <see cref="T:Sitecore.Data.DataProviders.Sql.DataProviderTransaction"/> representing the new transaction.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.Save(Sitecore.Analytics.Model.Definitions.DefinitionData)">
            <summary>
            Saves or updates a definition entity into the current reporting storage.
            </summary>
            <param name="definition">
            The definition to be saved.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.Store(Sitecore.Analytics.Aggregation.Data.Model.IReportingStorageItem)">
            <summary>
              Stores the specified reporting storage item in the reporting database.
            </summary>
            <param name="item">
              The <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.IReportingStorageItem"/> object to store.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.Store(System.Guid,Sitecore.Analytics.Aggregation.Data.Model.AggregationDataSet)">
            <summary>
              Stores the entire aggregation data set in the reporting database.
            </summary>
            <param name="id">
              The unique identifier of the aggregation data set.
            </param>
            <param name="data">
              The <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.AggregationDataSet"/> object that contains the data to be stored in the database.
            </param>
            <exception cref="T:System.Data.SqlClient.SqlException">
              Denotes a syntax, operation or system error on SQL Server side.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.ExecuteInTransaction(Sitecore.Data.DataProviders.Sql.SqlDataApi,System.Data.IDbCommand[])">
            <summary>
              Executes the specified set of commands in a single transaction.
            </summary>
            <param name="api">
              The <see cref="T:Sitecore.Data.DataProviders.Sql.SqlDataApi"/> representing the database to use.
            </param>
            <param name="commands">
              The array of commands to execute in a single transaction.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="api"/> or <paramref name="commands"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.Data.SqlClient.SqlException">
              A database error occurred.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.WriteDataSet(Sitecore.Analytics.Scripting.IScriptWriter,Sitecore.Analytics.Aggregation.Data.Model.IAggregationDataSet)">
            <summary>
              Builds a database command for an entire aggregation data set.
            </summary>
            <param name="writer">
              The <see cref="T:Sitecore.Analytics.Scripting.IScriptWriter"/> to use to build the command.
            </param>
            <param name="dataset">
              The <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.IAggregationDataSet"/> object containing the data to be scripted.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="writer"/> or <paramref name="dataset"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.TruncateStringValues(System.Data.DataTable,System.String,System.Int32)">
            <summary>
              Truncates the length of values in the specified column of the specified table.
            </summary>
            <param name="table">
              The <see cref="T:System.Data.DataTable"/> containg the string values to truncate.
            </param>
            <param name="column">
              The name of the column containing the string values to truncate.
            </param>
            <param name="length">
              The length, in characters, to which to truncate the values.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.DeleteAllReportingData">
            <summary>
            Deletes all reporting data from the data storage.
            </summary>
            <remarks>Tables that have been registered using by the <see cref="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.ExcludedTableFromDataDeletion(System.String,System.String)"/> will not be affected.</remarks>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.ExcludedTableFromDataDeletion(System.String,System.String)">
            <summary>
            Registers a database table to be excluded from deletion when <see cref="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.DeleteAllReportingData"/> is invoked.
            </summary>
            <param name="schemaName">Name of the schema.</param>
            <param name="tableName">Name of the table.</param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.Save(Sitecore.Analytics.Model.Definitions.CampaignDefinitionData)">
            <summary>
            Inserts or updates the specified campaign to the current reporting storage provider.
            </summary>
            <param name="campaign">
            The campaign to be inserted or updated.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.Save(Sitecore.Analytics.Model.Definitions.PageEventDefinitionData)">
            <summary>
            Saves or updates a page event definition to the current reporting storage.
            </summary>
            <param name="definition">
            The page event definition to be saved or updated.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.Save(Sitecore.Analytics.Model.Definitions.TrafficTypeData)">
            <summary>
            Saves or updates a traffic type definition to the current reporting storage.
            </summary>
            <param name="definition">
            The traffic type definition to be saved.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.Save(Sitecore.Analytics.Model.Definitions.VisitorClassificationData)">
            <summary>
            Saves or updates a visitor classification entry in the current reporting storage.
            </summary>
            <param name="definition">
            The visitor classification to be saved.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.GetCampaigns">
            <summary>
              Reads all campaign definitions from the current database.
            </summary>
            <returns>
              An <see cref="T:System.Collections.Generic.IEnumerable`1"/> object that can be used to iterate through all
              campaign definitions in the current database.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.GetPageEvents">
            <summary>
              Reads all page event definitions from the current database.
            </summary>
            <returns>
              An <see cref="T:System.Collections.Generic.IEnumerable`1"/> object that can be used to iterate through all
              page event definitions in the current database.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.GetTrafficTypes">
            <summary>
              Reads all traffic types from the current database.
            </summary>
            <returns>
              An <see cref="T:System.Collections.Generic.IEnumerable`1"/> object that can be used to iterate through all
              traffic types in the current database.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.GetVisitorClassifications">
            <summary>
              Reads all visitor classifications from the current database.
            </summary>
            <returns>
              An <see cref="T:System.Collections.Generic.IEnumerable`1"/> object that can be used to iterate through all
              visitor classifications in the current database.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.Save``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Data.SqlClient.SqlCommand})">
            <summary>
              Saves all <typeparamref name="TDefinition"/> objects in the collection to the current database.
            </summary>
            <param name="definitions">
              An <see cref="T:System.Collections.Generic.IEnumerable`1"/> object containing the definitions to save.
            </param>
            <param name="create">
              A function that creates an <see cref="T:System.Data.SqlClient.SqlCommand"/> for saving a definition to the database.
            </param>
            <typeparam name="TDefinition">
              A <see cref="T:Sitecore.Analytics.Model.Definitions.DefinitionData"/> derived class instance.
            </typeparam>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.SaveBatch``1(System.Collections.Generic.IList{``0},System.Func{``0,System.Data.SqlClient.SqlCommand})">
            <summary>
              Saves a collection of <typeparamref name="TDefinition"/> objects as a single operation to the current database.
            </summary>
            <param name="definitions">
              The collection of <typeparamref name="TDefinition"/> objects to save.
            </param>
            <param name="create">
              A function that creates an <see cref="T:System.Data.SqlClient.SqlCommand"/> for saveing the definition to the database.
            </param>
            <typeparam name="TDefinition">
              A <see cref="T:Sitecore.Analytics.Model.Definitions.DefinitionData"/> derived class instance.
            </typeparam>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.TruncateAggregationTrails">
            <summary>
              Truncates the aggregation trail tables.
            </summary>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.ReportingStorageItem">
            <summary>
              Implements an <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.IReportingStorageItem"/> that can be passed to the
              <see cref="T:Sitecore.Analytics.Aggregation.Data.DataAccess.IReportingStorageProvider"/> for storing.
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.ReportingStorageItem.Id">
            <summary>
              Gets the unique identifier of the current <see cref="T:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.ReportingStorageItem"/>.
            </summary>
            <value>
              An array of <see cref="T:System.Byte"/> values that is the unique identifier of the
              current <see cref="T:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.ReportingStorageItem"/>.
            </value>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.ReportingStorageItem.Data">
            <summary>
              Gets the aggregated dataset to be stored.
            </summary>
            <value>
              A <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.IAggregationDataSet"/> object that encapsulates the data to be stored.
            </value>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.ReportingStorageItem.#ctor(System.Byte[],Sitecore.Analytics.Aggregation.Data.Model.IAggregationDataSet)">
            <summary>
              Initializes a new instance of the <see cref="T:Sitecore.Analytics.Aggregation.SqlReportingStorageProvider.ReportingStorageItem"/> class.
            </summary>
            <param name="id">
              The unique identifier of the new storage item.
            </param>
            <param name="data">
              The <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.IAggregationDataSet"/> object that encapsulates the data to be stored.
            </param>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.SqlCommands">
            <summary>
              Provides static methods to build <see cref="T:System.Data.SqlClient.SqlCommand"/> objects for calling stored procedures.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlCommands.CreateCommandForUpsertingCampaignDefinition(Sitecore.Analytics.Model.Definitions.CampaignDefinitionData)">
            <summary>
              Creates a new <see cref="T:System.Data.SqlClient.SqlCommand"/> object that represents a call to the [Upsert_Campaign]
              stored procedure.
            </summary>
            <param name="definition">
              The <see cref="T:Sitecore.Analytics.Model.Definitions.CampaignDefinitionData"/> object to use to populate parameters of the stored
              procedure.
            </param>
            <returns>
              An <see cref="T:System.Data.SqlClient.SqlCommand"/> object that inserts a campaign definition into the database or updates
              it if it already exists.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlCommands.CreateCommandForUpsertingPageEventDefinition(Sitecore.Analytics.Model.Definitions.PageEventDefinitionData)">
            <summary>
              Creates a new <see cref="T:System.Data.SqlClient.SqlCommand"/> object that represents a call to the [Upsert_PageEventDefinition]
              stored procedure.
            </summary>
            <param name="definition">
              The <see cref="T:Sitecore.Analytics.Model.Definitions.PageEventDefinitionData"/> object to use to populate parameters of the stored procedure.
            </param>
            <returns>
              An <see cref="T:System.Data.SqlClient.SqlCommand"/> object that inserts a page event definition into the database or updates it
              if it already exists.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlCommands.CreateCommandForUpsertingTrafficTypeDefinition(Sitecore.Analytics.Model.Definitions.TrafficTypeData)">
            <summary>
              Creates a new <see cref="T:System.Data.SqlClient.SqlCommand"/> object that represents a call to the [Upsert_TrafficType]
              stored procedure.
            </summary>
            <param name="definition">
              The <see cref="T:Sitecore.Analytics.Model.Definitions.TrafficTypeData"/> object to use to populate parameters of the stored procedure.
            </param>
            <returns>
              An <see cref="T:System.Data.SqlClient.SqlCommand"/> object that inserts a traffic type definition into the database or updates it
              if it already exists.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlCommands.CreateCommandForUpsertingVisitorClassificationDefinition(Sitecore.Analytics.Model.Definitions.VisitorClassificationData)">
            <summary>
              Creates a new <see cref="T:System.Data.SqlClient.SqlCommand"/> object that represents a call to the [Upsert_VisitorClassification]
              stored procedure.
            </summary>
            <param name="definition">
              The <see cref="T:Sitecore.Analytics.Model.Definitions.VisitorClassificationData"/> object to use to populate parameters of the stored procedure.
            </param>
            <returns>
              An <see cref="T:System.Data.SqlClient.SqlCommand"/> object that inserts a visitor classification into the database or updates it
              if it already exists.
            </returns>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.SqlReportingStorageProviderProperties">
            <summary>
            Implements reporting storage provider properties for an SQL reporting database.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Aggregation.SqlReportingStorageProviderProperties.DefaultCacheSize">
            <summary>
            The default cache size.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Aggregation.SqlReportingStorageProviderProperties.PropertiesCache">
            <summary>
            A cache containing the collection of properties stored under each connection string name.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Aggregation.SqlReportingStorageProviderProperties.CutoffDatePropertyKey">
            <summary>
            The property key of the cutoff date.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Aggregation.SqlReportingStorageProviderProperties.IsRebuildingPropertyKey">
            <summary>
            The property key of the cutoff date.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Aggregation.SqlReportingStorageProviderProperties.cacheKey">
            <summary>
            The key identifying the property cache related to this instance.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Aggregation.SqlReportingStorageProviderProperties.dataApi">
            <summary>
            Reference to the SQL API object.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProviderProperties.#ctor(System.String,Sitecore.Data.DataProviders.Sql.SqlDataApi)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Analytics.Aggregation.SqlReportingStorageProviderProperties"/> class.
            </summary>
            <param name="dataApi">A reference to the SQL API object.</param>
            <param name="cacheKey">A key identifying the property cache related to this instance.</param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProviderProperties.GetCutoffDate">
            <summary>
            Gets the cut-off date and time, expressed as UTC.
            </summary>
            <returns>The cut-off date and time, expressed as UTC, or <c>null</c> if not set.
            <c>DateTime.Kind</c> is <c>DateTimeKind.Utc</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProviderProperties.IsRebuilding">
            <summary>
            Gets the is rebuilding property.
            </summary>
            <returns>True if its rebuilding.</returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProviderProperties.SetCutoffTime(System.Nullable{System.DateTime})">
            <summary>
            Sets the cut-off date and time, expressed as UTC.
            </summary>
            <param name="cutoffTime">The cut-off date and time, expressed as UTC.
            <c>DateTime.Kind</c> should be <c>DateTimeKind.Utc</c>.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProviderProperties.SetRebuilding(System.Boolean)">
            <summary>
            Sets value indicating if the storage is being rebuilt.
            </summary>
            <param name="isRebuilding">True if the storage is being rebuilt.</param>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.SqlReportingStorageProviderProperties.Item(System.String)">
            <summary>
            Gets or sets the value of a property specified by its key.
            </summary>
            <value>
            The property value. Pass <c>null</c> to clear the property.
            </value>
            <param name="key">The property key.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProviderProperties.GetProperties">
            <summary>
            Retrieves the properties collection from the database.
            </summary>
            <returns>The properties represented as a key/value collection.</returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlReportingStorageProviderProperties.UpdateProperty(System.String,System.String)">
            <summary>
            Updates a property value in the database.
            </summary>
            <param name="key">The property key.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.SqlRoutineTypeMap">
            <summary>
            Defines the map from a <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.Table"/> type to a name prefix of routines to handle the corresponding <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.Table"/> type.
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.SqlRoutineTypeMap.TableType">
            <summary>
            Table name
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.SqlRoutineTypeMap.RoutinePrefix">
            <summary>
            Stored Procedure name
            </summary>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.DataProviderTransactionWrapper">
            <summary>
              Wraps a <see cref="T:Sitecore.Data.DataProviders.Sql.DataProviderTransaction"/> into a <see cref="T:Sitecore.Analytics.Aggregation.Data.DataAccess.IDataTransaction"/> object.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.DataProviderTransactionWrapper.#ctor(Sitecore.Data.DataProviders.Sql.DataProviderTransaction)">
            <summary>
              Initializes a new instance of the <see cref="T:Sitecore.Analytics.Aggregation.DataProviderTransactionWrapper"/> class.
            </summary>
            <param name="transaction">
              The <see cref="T:Sitecore.Data.DataProviders.Sql.DataProviderTransaction"/> to wrap.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.DataProviderTransactionWrapper.Complete">
            <summary>
              Completes the transaction.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.DataProviderTransactionWrapper.Dispose">
            <summary>
              Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.DataProviderTransactionWrapper.Dispose(System.Boolean)">
            <summary>
              Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing">
              <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.NullTransaction">
            <summary>
              Implements a <see cref="T:Sitecore.Analytics.Aggregation.Data.DataAccess.IDataTransaction"/> that does not create a real transaction.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.NullTransaction.Complete">
            <summary>
              Markes the transaction as completed.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.NullTransaction.Dispose">
            <summary>
              Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.NullTransaction.Dispose(System.Boolean)">
            <summary>
              Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing">
              <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.SqlGenericMutableDimensionUpsertStatementBuilder">
            <summary>
            Generic SQL <c>UPSERT</c> statement builder for mutable dimension tables.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlGenericMutableDimensionUpsertStatementBuilder.Build(Sitecore.Analytics.Scripting.IScriptWriter,System.Data.DataRow)">
            <summary>
              Builds the SQL statement for inserting or updating the specified
              <see cref="T:System.Data.DataRow"/>.
            </summary>
            <param name="writer">
              A <see cref="T:Sitecore.Analytics.Scripting.IScriptWriter"/> that receives the generated script and
              parameters.
            </param>
            <param name="row">
              The <see cref="T:System.Data.DataRow"/> object that represents the data for which
              to generate an SQL statement.
            </param>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.SqlMappingEntity">
            <summary>
              Holds configuration settings that map a data table name to a stored procedure name.
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.SqlMappingEntity.Table">
            <summary>
              Gets the name of the table.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the table.
            </value>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.SqlMappingEntity.Routine">
            <summary>
              Gets the name of the stored procedure.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the stored procedure.
            </value>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.SqlMappingEntity.IsMultiRow">
            <summary>
              Gets or sets a value indicating whether the stored routine accepts multiple rows at a time.
            </summary>
            <value>
              <b>true</b> if the stored routine supports multiple rows; otherwise, <b>false</b>.
            </value>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.SqlMappingEntity.TableType">
            <summary>
              Gets or sets the name of the user-defined SQL type that represents the table described by the entity.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that is the name of the UDT that represents the table type.
            </value>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.CutoffBehavior">
            <summary>
              Defines the behavior of an <see cref="T:Sitecore.Analytics.Aggregation.SqlStorageProviderBase"/> in relation to a cut-off date when storing
              aggregated information.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Aggregation.CutoffBehavior.StoreAll">
            <summary>
              All data will be stored regardless of a cutoff date.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Aggregation.CutoffBehavior.StoreOnlyAfterCutOffInclusive">
            <summary>
              Only data with a timestamp equal to or newer than a cutoff date will be stored.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Aggregation.CutoffBehavior.StoreOnlyBeforeCutOffExclusive">
            <summary>
              Only data with a timestamp older than a cutoff date will be stored.
            </summary>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.SqlStorageProviderBase">
            <summary>
            The SQL storage provider base.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.propertiesCacheId">
            <summary>
            Cache key for the properties associated with this instance.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.columnOrderProvider">
            <summary>
            Provides methods to retrieve the order of columns for user defined table types.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Analytics.Aggregation.SqlStorageProviderBase"/> class.
            </summary>
            <param name="connectionStringName">
            Name of the connection string in the configuration file to use for the provider.
            </param>
            <param name="cutoffBehavior">
            The behavior of the storage provider in relation to the cutoff date.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.#ctor(Sitecore.Data.DataProviders.Sql.SqlDataApi)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Analytics.Aggregation.SqlStorageProviderBase"/> class.
            </summary>
            <param name="sqlDataApi">
            The SQL Data API.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.#ctor(System.String,Sitecore.Analytics.Aggregation.CutoffBehavior)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Analytics.Aggregation.SqlStorageProviderBase"/> class.
            </summary>
            <param name="connectionStringName">
            Name of the connection string in the configuration file to use for the provider.
            </param>
            <param name="cutoffBehavior">
            The behavior of the storage provider in relation to the cutoff date.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Analytics.Aggregation.SqlStorageProviderBase"/> class.
            </summary>
            <param name="connectionStringName">
            Name of the connection string in the configuration file to use for the provider.
            </param>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.CutoffBehavior">
            <summary>
            Gets the behavior of the storage provider in relation to the cutoff date.
            </summary>
            <value>
            The cutoff behavior.
            </value>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.Properties">
            <summary>
            Gets the properties of the reporting database.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the properties are not initialized.
            </exception>
            <value>
            The properties.
            </value>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.TrailLength">
            <summary>
              Gets or sets the timespan for how long the trail has to be maintained.
            </summary>
            <value>
              A <see cref="T:System.TimeSpan"/> value that specifies for how long entries in the trail tables need to be maintained.
            </value>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.StartMaintenanceTasks">
            <summary>
              Starts maintenance tasks.
            </summary>
            <returns>
              A read-only collection of <see cref="T:System.Threading.Tasks.Task"/> objects that represent the maintenance tasks performed.
            </returns>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.DataApi">
            <summary>
            Gets or sets reference to the SQL API object.
            </summary>
            <value>
            The data API.
            </value>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.PropertiesCacheId">
            <summary>
            Gets or sets the properties cache id.
            </summary>
            <value>
            The properties cache id.
            </value>
        </member>
        <member name="P:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.ColumnOrderProvider">
            <summary>
              Gets an object that can be used to determine the order of columns in a user defined table type.
            </summary>
            <value>
              A <see cref="T:Sitecore.Analytics.Aggregation.IColumnOrderProvider"/> object that can be used to determine the order of columns in a user
              defined table type; or <b>null</b> if not available.
            </value>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.ExecuteCommand(Sitecore.Data.DataProviders.Sql.SqlDataApi,System.Data.SqlClient.SqlCommand)">
            <summary>
            Executes a SQL command.
            </summary>
            <param name="api">
            The SQL API instance.
            </param>
            <param name="command">
            The SQL command to be executed.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.GroupAndOrderByTableName``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Groups and order the enumerable by the concrete type of the instances stored in it.
            </summary>
            <typeparam name="T">
            The base type of the instances in the list.
            </typeparam>
            <param name="data">
            The data.
            </param>
            <returns>
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
            <remarks>
            This method is only using the first entry for every concrete type in the data.
            </remarks>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.CreateUpsertStatementBuilder(System.Data.DataTable,Sitecore.Analytics.Aggregation.SqlStorageProviderBase.TableType)">
            <summary>
            Factory method that creates an appropriate update/insert statement builder for the specified <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.Table"/>
              type.
            </summary>
            <param name="table">
            The <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.Table"/> for which to create an <see cref="T:Sitecore.Analytics.Aggregation.Scripting.Builders.UpsertStatementBuilder"/>.
            </param>
            <param name="tableType">
            The type of the table.
            </param>
            <returns>
            An <see cref="T:Sitecore.Analytics.Aggregation.Scripting.Builders.UpsertStatementBuilder"/> that is compatible with the type of <see cref="T:Sitecore.Analytics.Aggregation.Data.Model.Table"/> specified.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.DoStoreAggregatedData(System.Nullable{System.DateTime})">
            <summary>
            Decides--depending on the storage's cutoff date and the behavior setting of
              the storage provider--whether to store a set of aggregated data or not.
            </summary>
            <param name="eventTimestamp">
            The timestamp of the event related to the aggregated data, expressed as UTC.
              <c>DateTime.Kind</c> should be <c>DateTimeKind.Utc</c>.
            </param>
            <returns>
            <c>true</c> if the aggregated data should be stored; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.ParseCutoffBehavior(System.String)">
            <summary>
            Parses the given cutoff behavior string.
            </summary>
            <param name="cutoffBehavior">
            The cutoff behavior string.
            </param>
            <returns>
            The cutoff behavior.
            </returns>
            <exception cref="T:System.ArgumentException">
            Thrown if the cutoff behavior string could not be parsed.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.TruncateAggregationTrails">
            <summary>
              Truncates all trail tables.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.TruncateAggregationTrail(System.String)">
            <summary>
              Truncates the specified aggregation trail table.
              CA2100 message can be safely supressed because table name does not contain any user input.
            </summary>
            <param name="tableName">
              The name of the database table representing the aggregation trail to truncate.
            </param>
        </member>
        <member name="T:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.TableType">
            <summary>
            Enumerates table types.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.TableType.Dimension">
            <summary>
            The table is a dimension table.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.TableType.MutableDimesion">
            <summary>
            A dimension table with updateable members.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.TableType.Fact">
            <summary>
            The table is a fact table.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Aggregation.SqlStorageProviderBase.TableType.Account">
            <summary>
            The table is the Account table.
            </summary>
        </member>
        <member name="T:Sitecore.Analytics.Constants">
            <summary>
            Represents a collection of constants used throughout the project.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Constants.TasksDbSchema">
            <summary>
            The schema name for Sitecore.Processing.Tasks database.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Constants.ColumnId">
            <summary>
            The name of the Id column.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Constants.ColumnTaskId">
            <summary>
            The name of the TaskId column.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Constants.ColumnCreated">
            <summary>
            The name of the Created column.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Constants.ColumnAccessed">
            <summary>
            The name of the Accessed column.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Constants.ColumnComputer">
            <summary>
            The name of the Computer column.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Constants.ColumnProcess">
            <summary>
            The name of the Process column.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Constants.ColumnAgent">
            <summary>
            The name of the Agent column.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Constants.ColumnPriority">
            <summary>
            The name of the Priority column.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Constants.ColumnSize">
            <summary>
            The name of the Size column.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Constants.ColumnBookmark">
            <summary>
            The name of the Bookmark column.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Constants.ColumnConsumed">
            <summary>
            The name of the Consumed column.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Constants.ColumnIsDescending">
            <summary>
            The name of the IsDescending column.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Constants.ColumnIsSplitRequested">
            <summary>
            The name of the IsSplitRequested column.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Constants.ColumnIsCompleted">
            <summary>
            The name of the IsCompleted column.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Constants.TasksDbConnectionName">
            <summary>
            Name of the connection string for Tasks database
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Constants.PoolsDbConnectionName">
            <summary>
            Name of the connection string for Pools database
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Constants.ProcessingTasksTableName">
            <summary>
            The ProcessingTasks table name
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Constants.ProcessingCursorsTableName">
            <summary>
            The ProcessingCursors table name
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Constants.PoolsDbSchema">
            <summary>
            The schema name for Sitecore_Processing_Pools database.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Constants.GenericProcessingPoolDefinitionsTableName">
            <summary>
            The GenericProcessingPoolDefinitions table name
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Constants.GenericProcessingPoolTableName">
            <summary>
            The GenericProcessingPool table name
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Constants.RoutineCausedExceptionFormat">
            <summary>
            The format string for exception message, describing which routine caused exception
            </summary>
        </member>
        <member name="T:Sitecore.Analytics.DbDataReaderExtensions">
            <summary>
              Provides static helper methods that extend the <see cref="T:System.Data.Common.DbDataReader"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.DbDataReaderExtensions.GetRequiredGuid(System.Data.Common.DbDataReader,System.String)">
            <summary>
              Reads a <see cref="T:System.Guid"/> value from the current data reader.
            </summary>
            <param name="reader">
              The reader from which to read the <see cref="T:System.Guid"/> value.
            </param>
            <param name="name">
              The name of the column to read.
            </param>
            <returns>
              The <see cref="T:System.Guid"/> value read from <paramref name="reader"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="name"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
              The name specified is not a valid column name.
            </exception>
            <exception cref="T:System.InvalidCastException">
              The specified column does not contain a <see cref="T:System.Guid"/> value.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.DbDataReaderExtensions.GetRequiredDateTime(System.Data.Common.DbDataReader,System.String)">
            <summary>
              Reads a <see cref="T:System.DateTime"/> value from the current data reader.
            </summary>
            <param name="reader">
              The reader from which to read the <see cref="T:System.DateTime"/> value.
            </param>
            <param name="name">
              The name of the column to read.
            </param>
            <returns>
              The <see cref="T:System.DateTime"/> value read from <paramref name="reader"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="name"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
              The name specified is not a valid column name.
            </exception>
            <exception cref="T:System.InvalidCastException">
              The specified column does not contain a <see cref="T:System.DateTime"/> value.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.DbDataReaderExtensions.GetOptionalDateTime(System.Data.Common.DbDataReader,System.String,System.DateTimeKind)">
            <summary>
              Reads a <see cref="T:System.DateTime"/> value from the current data reader.
            </summary>
            <param name="reader">
              The reader from which to read the <see cref="T:System.DateTime"/> value.
            </param>
            <param name="name">
              The name of the column to read.
            </param>
            <param name="kind">
              Specifies the kind of the <see cref="T:System.DateTime"/> value read if it is unspecified.
            </param>
            <returns>
              The <see cref="T:System.DateTime"/> value read from <paramref name="reader"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="name"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
              The name specified is not a valid column name.
            </exception>
            <exception cref="T:System.InvalidCastException">
              The specified column does not contain a <see cref="T:System.DateTime"/> value.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.DbDataReaderExtensions.GetRequiredInt16(System.Data.Common.DbDataReader,System.String)">
            <summary>
              Reads a <see cref="T:System.Int16"/> value from the current data reader.
            </summary>
            <param name="reader">
              The reader from which to read the <see cref="T:System.Int16"/> value.
            </param>
            <param name="name">
              The name of the column to read.
            </param>
            <returns>
              The <see cref="T:System.Int16"/> value read from <paramref name="reader"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="name"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
              The name specified is not a valid column name.
            </exception>
            <exception cref="T:System.InvalidCastException">
              The specified column does not contain a <see cref="T:System.Int16"/> value.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.DbDataReaderExtensions.GetRequiredInt64(System.Data.Common.DbDataReader,System.String)">
            <summary>
              Reads a <see cref="T:System.Int64"/> value from the current data reader.
            </summary>
            <param name="reader">
              The reader from which to read the <see cref="T:System.Int64"/> value.
            </param>
            <param name="name">
              The name of the column to read.
            </param>
            <returns>
              The <see cref="T:System.Int64"/> value read from <paramref name="reader"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="name"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
              The name specified is not a valid column name.
            </exception>
            <exception cref="T:System.InvalidCastException">
              The specified column does not contain a <see cref="T:System.Int64"/> value.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.DbDataReaderExtensions.GetRequiredFloat(System.Data.Common.DbDataReader,System.String)">
            <summary>
              Reads a <see cref="T:System.Single"/> value from the current data reader.
            </summary>
            <param name="reader">
              The reader from which to read the <see cref="T:System.Single"/> value.
            </param>
            <param name="name">
              The name of the column to read.
            </param>
            <returns>
              The <see cref="T:System.Single"/> value read from <paramref name="reader"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="name"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
              The name specified is not a valid column name.
            </exception>
            <exception cref="T:System.InvalidCastException">
              The specified column does not contain a <see cref="T:System.Single"/> value.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.DbDataReaderExtensions.GetRequiredBoolean(System.Data.Common.DbDataReader,System.String)">
            <summary>
              Reads a <see cref="T:System.Boolean"/> value from the current data reader.
            </summary>
            <param name="reader">
              The reader from which to read the <see cref="T:System.Boolean"/> value.
            </param>
            <param name="name">
              The name of the column to read.
            </param>
            <returns>
              The <see cref="T:System.Boolean"/> value read from <paramref name="reader"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="name"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
              The name specified is not a valid column name.
            </exception>
            <exception cref="T:System.InvalidCastException">
              The specified column does not contain a <see cref="T:System.Boolean"/> value.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.DbDataReaderExtensions.GetOptionalInt64(System.Data.Common.DbDataReader,System.String)">
            <summary>
              Reads a <see cref="T:System.Int64"/> value from the current data reader.
            </summary>
            <param name="reader">
              The reader from which to read the <see cref="T:System.Int64"/> value.
            </param>
            <param name="name">
              The name of the column to read.
            </param>
            <returns>
              The <see cref="T:System.Int64"/> value read from <paramref name="reader"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="name"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
              The name specified is not a valid column name.
            </exception>
            <exception cref="T:System.InvalidCastException">
              The specified column does not contain a <see cref="T:System.Int64"/> value.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.DbDataReaderExtensions.GetOptionalInt32(System.Data.Common.DbDataReader,System.String)">
            <summary>
              Reads a <see cref="T:System.Int32"/> value from the current data reader.
            </summary>
            <param name="reader">
              The reader from which to read the <see cref="T:System.Int32"/> value.
            </param>
            <param name="name">
              The name of the column to read.
            </param>
            <returns>
              The <see cref="T:System.Int32"/> value read from <paramref name="reader"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="name"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
              The name specified is not a valid column name.
            </exception>
            <exception cref="T:System.InvalidCastException">
              The specified column does not contain a <see cref="T:System.Int32"/> value.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.DbDataReaderExtensions.GetRequiredString(System.Data.Common.DbDataReader,System.String)">
            <summary>
              Reads a <see cref="T:System.String"/> value from the current data reader.
            </summary>
            <param name="reader">
              The reader from which to read the <see cref="T:System.String"/> value.
            </param>
            <param name="name">
              The name of the column to read.
            </param>
            <returns>
              The <see cref="T:System.String"/> value read from <paramref name="reader"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="name"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
              The name specified is not a valid column name.
            </exception>
            <exception cref="T:System.InvalidCastException">
              The specified column does not contain a <see cref="T:System.String"/> value.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.DbDataReaderExtensions.GetOptionalString(System.Data.Common.DbDataReader,System.String)">
            <summary>
              Reads a <see cref="T:System.String"/> value from the current data reader.
            </summary>
            <param name="reader">
              The reader from which to read the <see cref="T:System.String"/> value.
            </param>
            <param name="name">
              The name of the column to read.
            </param>
            <returns>
              The <see cref="T:System.String"/> value read from <paramref name="reader"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="name"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
              The name specified is not a valid column name.
            </exception>
            <exception cref="T:System.InvalidCastException">
              The specified column does not contain a <see cref="T:System.String"/> value.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.DbDataReaderExtensions.GetOptionalGuid(System.Data.Common.DbDataReader,System.String)">
            <summary>
              Reads a <see cref="T:System.Guid"/> value from the current data reader.
            </summary>
            <param name="reader">
              The reader from which to read the <see cref="T:System.Guid"/> value.
            </param>
            <param name="name">
              The name of the column to read.
            </param>
            <returns>
              The <see cref="T:System.Guid"/> value read from <paramref name="reader"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="name"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
              The name specified is not a valid column name.
            </exception>
            <exception cref="T:System.InvalidCastException">
              The specified column does not contain a <see cref="T:System.Guid"/> value.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.DbDataReaderExtensions.GetRequiredBytesAsync(System.Data.Common.DbDataReader,System.String,System.Int32)">
            <summary>
            Asynchronously reads Varbinary column from the specified <see cref="T:System.Data.Common.DbDataReader"/> object.
            </summary>
            <param name="reader">The <see cref="T:System.Data.Common.DbDataReader"/> object to read data from.</param>
            <param name="name">The name of the column to read from the <paramref name="reader"/>.</param>
            <param name="bufferSize">The size of the buffer used during data read from the <paramref name="reader"/>.</param>
            <returns>The array of <see cref="T:System.Byte"/> representing VarBinary column.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="reader"/> or <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="name"/> is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="bufferSize"/> is less than one.</exception>
        </member>
        <member name="T:Sitecore.Analytics.Diagnostics.PerformanceCounters.AnalyticsSqlCount">
            <summary>
            The analytics aggregation performance counters.
            </summary>
            <summary>
            This static class holds Sitecore Performance Counters for 'Sitecore.Analytics.Sql' operations.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Diagnostics.PerformanceCounters.AnalyticsSqlCount.Initialize">
            <summary>
            Initializes analytics aggregation performance counters.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Diagnostics.PerformanceCounters.AnalyticsSqlCount.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Sitecore.Analytics.Diagnostics.PerformanceCounters.AnalyticsSqlCount"/> class.
            Defines instances of Sitecore performance counters.
            NOTE: This code is auto-generated. To introduce new counters or modify existing ones the update 'Counters.xml'.
            The generated classes are partial so add new logic in matching partial class in a separate file.
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Diagnostics.PerformanceCounters.AnalyticsSqlCount.AverageTimeToStoreBatchInPartsms">
            <summary>
            Gets the counter that counts average time it takes to store batch in the reporting database in parts, when attempt to save entire batch in one go failed.
            </summary>
            <value>
            The counter instance.
            </value>
        </member>
        <member name="P:Sitecore.Analytics.Diagnostics.PerformanceCounters.AnalyticsSqlCount.AverageTimeToFlushTransactionms">
            <summary>
            Gets the counter that counts average time it takes to flush transaction to the reporting database.
            </summary>
            <value>
            The counter instance.
            </value>
        </member>
        <member name="T:Sitecore.Analytics.Pipelines.Loader.InitializeSqlPerformanceCounters">
            <summary>Initializes the performance counters.</summary>
        </member>
        <member name="M:Sitecore.Analytics.Pipelines.Loader.InitializeSqlPerformanceCounters.Process(Sitecore.Pipelines.PipelineArgs)">
            <summary>Runs the processor.</summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider">
            <summary>
            Represents a data provider to work with <see cref="T:Sitecore.Analytics.Processing.Cursor"/> instances in the SQL database.
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.SchemaName">
            <summary>
            Gets the name database schema.
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.ColumnId">
            <summary>
            Gets the name of the Id column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.ColumnTaskId">
            <summary>
            Gets the name of the TaskId column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.ColumnCreated">
            <summary>
            Gets the name of the Created column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.ColumnAccessed">
            <summary>
            Gets the name of the Accessed column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.ColumnComputer">
            <summary>
            Gets the name of the Computer column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.ColumnProcess">
            <summary>
            Gets the name of the Process column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.ColumnAgent">
            <summary>
            Gets the name of the Agent column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.ColumnPriority">
            <summary>
            Gets the name of the Priority column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.ColumnSize">
            <summary>
            Gets the name of the Size column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.ColumnBookmark">
            <summary>
            Gets the name of the Bookmark column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.ColumnConsumed">
            <summary>
            Gets the name of the Consumed column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.ColumnIsDescending">
            <summary>
            Gets the name of the IsDescending column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.ColumnIsSplitRequested">
            <summary>
            Gets the name of the IsSplitRequested column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.ColumnIsCompleted">
            <summary>
            Gets the name of the IsCompleted column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.RoutineAddCursor">
            <summary>
            Gets the name of the AddCursor routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.RoutineDeleteCursorsByTaskId">
            <summary>
            Gets the name of the DeleteCursorsByTaskId routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.RoutineMarkCursorCompleted">
            <summary>
            Gets the name of the MarkCursorCompleted routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.RoutineTryAcquireCursor">
            <summary>
            Gets the name of the TryAcquireCursor routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.RoutineTryRegisterCursorSplitRequest">
            <summary>
            Gets the name of the TryRegisterCursorSplitRequest routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.RoutineUpdateCursorProgress">
            <summary>
            Gets the name of the UpdateCursorProgress routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.RoutineUpdateCursor">
            <summary>
            Gets the name of the UpdateCursor routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.RoutineGetCursorsCountByTaskId">
            <summary>
            Gets the name of the GetCursorsCountByTaskId routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.RoutineGetTotalNumberOfConsumedItemsByTaskId">
            <summary>
            Gets the name of the GetTotalNumberOfConsumedItemsByTaskId routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.RoutineAreAllCursorsCompleted">
            <summary>
            Gets the name of the AreAllCursorsCompleted routine
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider.#ctor(System.Guid,System.String,System.Int32,System.Int32,Sitecore.Xdb.Sql.Common.IRetryManager)">
            <summary>
              Creates a new instance of<see cref="T:Sitecore.Analytics.SqlCursorDataProvider"/> class.
            </summary>
            <param name="taskId">
              The <see cref="P:Sitecore.Analytics.Processing.ProcessingTaskData.Id"/> associated with all the operations on <see cref="T:Sitecore.Analytics.Processing.Cursor"/> instances.
            </param>
            <param name="connectionStringName">
              Name of the connection string used to establish connection with database.
            </param>
            <param name="commandTimeout">
              The wait time before the execution attempt of a database command is terminated and an error is generated.
            </param>
            <param name="ownershipTimeoutMs">
              The timeout in milliseconds during which each agent have to update <see cref="P:Sitecore.Analytics.Processing.Cursor.Accessed" /> in the database. 
              If it didn't happen, cursor is considered abandoned.
            </param>
            <param name="retryManager">The retry manager.</param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="connectionStringName"/> or <paramref name="retryManager"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.ArgumentException"><paramref name="ownershipTimeoutMs"/> is less than one millisecond. </exception>
        </member>
        <member name="T:Sitecore.Analytics.Processing.SqlProcessingCursorDataProviderFactory">
            <summary>
             The factory, responsible for creation of the <see cref="T:Sitecore.Analytics.Processing.SqlProcessingCursorDataProvider"/> instances.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Processing.SqlProcessingCursorDataProviderFactory.#ctor(System.String,System.Int32,System.Int32,Sitecore.Xdb.Sql.Common.IRetryManager)">
            <summary>
              Creates a new instance of<see cref="T:Sitecore.Analytics.Processing.SqlProcessingCursorDataProviderFactory"/> class.
            </summary>
            <param name="connectionStringName">
              Name of the connection string used to establish connection with database.
            </param>
            <param name="commandTimeout">
              The wait time before the execution attempt of a database command is terminated and an error is generated.
            </param>
            <param name="ownershipTimeoutMs">
              The timeout in milliseconds during which each agent have to update <see cref="P:Sitecore.Analytics.Processing.Cursor.Accessed" /> in the database. 
              If it didn't happen, cursor is considered abandoned.
            </param>
            <param name="retryManager">
              The retry manager.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="connectionStringName"/> or <paramref name="retryManager"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.ArgumentException"><paramref name="ownershipTimeoutMs"/> is less than one millisecond. </exception>
        </member>
        <member name="M:Sitecore.Analytics.Processing.SqlProcessingCursorDataProviderFactory.Create(System.Guid)">
            <summary>
              Creates an instance of the <see cref="T:Sitecore.Analytics.Processing.ICursorDataProvider"/> for specific task.
            </summary>
            <param name="taskId">The unique identifier of the task to create <see cref="T:Sitecore.Analytics.Processing.ICursorDataProvider"/> instance for.</param>
            <returns>
              The instance of the <see cref="T:Sitecore.Analytics.Processing.ICursorDataProvider"/> that can manage <see cref="T:Sitecore.Analytics.Processing.Cursor"/> 
              instances for task, specified in <paramref name="taskId"/>
            </returns>
        </member>
        <member name="T:Sitecore.Analytics.Processing.SqlTaskDataProvider">
            <summary>
            Represents a data provider to work with <see cref="T:Sitecore.Analytics.Processing.ProcessingTaskData"/> in the SQL database.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Processing.SqlTaskDataProvider.#ctor(System.String,System.Int32,System.Int64,System.Int32,Sitecore.Xdb.Sql.Common.IRetryManager)">
            <summary>
              Creates a new instance of <see cref="T:Sitecore.Analytics.Processing.SqlTaskDataProvider"/> class.
            </summary>
            <param name="connectionStringName">
              Name of the connection string used to establish connection with database.
            </param>
            <param name="commandTimeout">
              The wait time before the execution attempt of a database command is terminated and an error is generated.
            </param>
            <param name="ownershipTimeoutMs">
              The timeout in milliseconds during which each agent have to update <see cref="P:Sitecore.Analytics.Processing.ProcessingTaskData.Updated" /> in the database. 
              If it didn't happen, cursor is considered abandoned.
            </param>
            <param name="minimumRangeSize">The minimum size of a range to be split.</param>
            <param name="retryManager">
              The retry manager.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="connectionStringName"/> or <paramref name="retryManager"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
              Argument <paramref name="ownershipTimeoutMs"/> or <paramref name="minimumRangeSize"/> less or equal to zero.
            </exception>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlTaskDataProvider.OwnershipTimeout">
            <summary>
            Gets the timeout in milliseconds during which each agent have to update <see cref="P:Sitecore.Analytics.Processing.ProcessingTaskData.Updated" /> in the database. 
            If it didn't happen, cursor is considered abandoned.
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Processing.SqlTaskDataProvider.MinimumRangeSize">
            <summary>
            Gets minimum size of a range to be split.
            </summary>
            <value>
            The minimum size of a range to be split.
            </value>
        </member>
        <member name="M:Sitecore.Analytics.Processing.SqlTaskDataProvider.AddAsync(Sitecore.Analytics.Processing.ProcessingTaskData)">
            <summary>
              Asynchronously adds given <see cref="T:Sitecore.Analytics.Processing.ProcessingTaskData"/> to the data store.
            </summary>
            <param name="task">
              An object describing the task to be executed by the agents.
            </param>
            <returns>
              The <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.
            </returns>
            <remarks>
              <see cref="P:Sitecore.Analytics.Processing.ProcessingTaskData.Created"/> and <see cref="P:Sitecore.Analytics.Processing.ProcessingTaskData.Updated"/> in 
              the <paramref name="task"/> are ignored and set in the stored procedure.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="task"/> is <b>null</b>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Sitecore.Analytics.Processing.ProcessingTaskData.Status"/> in <paramref name="task"/> is different from <see cref="F:Sitecore.Analytics.Processing.ProcessingTaskStatus.Pending"/>.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Processing.SqlTaskDataProvider.GetAsync(System.Guid)">
            <summary>
             Asynchronously gets the <see cref="T:Sitecore.Analytics.Processing.ProcessingTaskData"/> by its unique identifier.
            </summary>
            <param name="id">
            The unique identifier of <see cref="T:Sitecore.Analytics.Processing.ProcessingTaskData"/> to look for.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1"/> with a <see cref="T:Sitecore.Analytics.Processing.ProcessingTaskData"/> instance containing information about the requested task.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Processing.SqlTaskDataProvider.PickDistributedTaskInProgressAsync">
            <summary>
            Asynchronously picks a <see cref="T:Sitecore.Analytics.Processing.ProcessingTaskData"/> with <see cref="P:Sitecore.Analytics.Processing.ProcessingTaskData.TaskType"/> equals to <see cref="F:Sitecore.Analytics.Processing.ProcessingTaskType.DistributedProcessing"/> 
            and <see cref="P:Sitecore.Analytics.Processing.ProcessingTaskData.Status"/> equals to <see cref="F:Sitecore.Analytics.Processing.ProcessingTaskStatus.Processing"/>, that has enough work items to split.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task`1"/> with a <see cref="T:Sitecore.Analytics.Processing.ProcessingTaskData"/> instance that represents distributed processing task that is actively processed.</returns>
        </member>
        <member name="M:Sitecore.Analytics.Processing.SqlTaskDataProvider.PickDistributedTaskPendingAsync">
            <summary>
            Asynchronously gets a <see cref="T:Sitecore.Analytics.Processing.ProcessingTaskData"/> with <see cref="P:Sitecore.Analytics.Processing.ProcessingTaskData.TaskType"/> equals to <see cref="F:Sitecore.Analytics.Processing.ProcessingTaskType.DistributedProcessing"/> 
            and <see cref="P:Sitecore.Analytics.Processing.ProcessingTaskData.Status"/> equals to <see cref="F:Sitecore.Analytics.Processing.ProcessingTaskStatus.Pending"/>.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1"/> with a <see cref="T:Sitecore.Analytics.Processing.ProcessingTaskData"/> instance that represents distributed processing task that is not started yet.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Processing.SqlTaskDataProvider.RemoveAsync(System.Guid)">
            <summary>
            Asynchronously removes the specified task from the data store.
            </summary>
            <param name="taskId">
             The unique identifier of the <see cref="T:Sitecore.Analytics.Processing.ProcessingTaskData"/> to remove. 
            </param>
            <returns>
              The <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Processing.SqlTaskDataProvider.PickDeferredActionAsync">
            <summary>
            Asynchronously picks an available <see cref="T:Sitecore.Analytics.Processing.ProcessingTaskData"/> with <see cref="P:Sitecore.Analytics.Processing.ProcessingTaskData.TaskType"/> equals to <see cref="F:Sitecore.Analytics.Processing.ProcessingTaskType.DeferredAction"/>, 
            disregarding any locked tasks and locking the task for other workers.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1"/> with a <see cref="T:Sitecore.Analytics.Processing.ProcessingTaskData"/> instance that represents single-threaded processing task.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Processing.SqlTaskDataProvider.CleanUpAsync">
            <summary>
              Asynchronously cleans up all tasks from the data store with <see cref="P:Sitecore.Analytics.Processing.ProcessingTaskData.Status"/> 
              equals to <see cref="F:Sitecore.Analytics.Processing.ProcessingTaskStatus.Failed"/>, <see cref="F:Sitecore.Analytics.Processing.ProcessingTaskStatus.Completed"/>, or <see cref="F:Sitecore.Analytics.Processing.ProcessingTaskStatus.Expired"/>. 
            </summary>
            <returns>
              The <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Processing.SqlTaskDataProvider.IncrementProgressAsync(System.Guid,System.Int64)">
            <summary>
            Asynchronously increments <see cref="P:Sitecore.Analytics.Processing.ProcessingTaskData.Progress"/>.
            </summary>
            <param name="taskId">
            Id of the <see cref="T:Sitecore.Analytics.Processing.ProcessingTaskData"/> to be updated.
            </param>
            <param name="progress">
            Value to be added to the <see cref="P:Sitecore.Analytics.Processing.ProcessingTaskData.Progress"/>.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1"/> with a <see cref="T:Sitecore.Analytics.Processing.ProcessingTaskData"/> instance that represents processing task.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="progress"/> is less than 1.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Processing.SqlTaskDataProvider.UpdateStatusAsync(System.Guid,System.DateTime,Sitecore.Analytics.Processing.ProcessingTaskStatus,System.String)">
            <summary>
            Asynchronously updates the status of the <see cref="T:Sitecore.Analytics.Processing.ProcessingTaskData"/>.
            </summary>
            <param name="taskId">
            Id of the <see cref="T:Sitecore.Analytics.Processing.ProcessingTaskData"/> to be updated.
            </param>
            <param name="updated">
            The last time, known to the owner agent when the <see cref="T:Sitecore.Analytics.Processing.ProcessingTaskData"/> was updated.
            </param>
            <param name="status">
            Status to be assigned to the task.
            </param>
            <param name="errorText">
            Optional text of the exception associated with the status.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1"/> with a <see cref="T:Sitecore.Analytics.Processing.ProcessingTaskData"/> instance that represents processing task.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Processing.SqlTaskDataProvider.ReadTaskAsync(System.Data.Common.DbDataReader)">
            <summary>
              Creates a <see cref="T:Sitecore.Analytics.Processing.ProcessingTaskData"/> object using data read from the specified <see cref="T:System.Data.Common.DbDataReader"/> object.
            </summary>
            <param name="reader">
              The <see cref="T:System.Data.Common.DbDataReader"/> object to read data from.
            </param>
            <returns>
              The <see cref="T:Sitecore.Analytics.Processing.ProcessingTaskData"/> initialized with the values read from <paramref name="reader"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="reader"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Processing.SqlTaskDataProvider.CreateParametersForTask(Sitecore.Analytics.Processing.ProcessingTaskData)">
            <summary>
              Creates an <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Data.SqlClient.SqlParameter"/> passed for execution to <see cref="F:Sitecore.Analytics.Processing.SqlTaskDataProvider.RoutineAddTask"/> stored procedure.
            </summary>
            <param name="task">
              The <see cref="T:Sitecore.Analytics.Processing.ProcessingTaskData"/> that contains values to save in the database.
            </param>
            <returns>
              The <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Data.SqlClient.SqlParameter"/> passed for execution to <see cref="F:Sitecore.Analytics.Processing.SqlTaskDataProvider.RoutineAddTask"/> stored procedure.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Processing.SqlTaskDataProvider.GetProcessingTaskUsingRoutineAsync(System.String,System.Collections.Generic.IReadOnlyCollection{System.Data.SqlClient.SqlParameter},System.String)">
            <summary>
            Executes routine specified in <paramref name="routineName"/> with <paramref name="parameters"/> and reads 
            <see cref="T:Sitecore.Analytics.Processing.ProcessingTaskData"/> from the result reader. 
            </summary>
            <param name="routineName">The name of the routine to execute.</param>
            <param name="parameters">The parameters to pass for routine execution.</param>
            <param name="exceptionMessage">The message of to add to the thrown exception, if routine execution failed.</param>
            <returns><see cref="T:System.Threading.Tasks.Task`1"/> with <see cref="T:Sitecore.Analytics.Processing.ProcessingTaskData"/>, retrieved from the executed routine.</returns>
        </member>
        <member name="T:Sitecore.Analytics.Scripting.Builders.StatementBuilder">
            <summary>
              Base class for SQL statement builders.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.Builders.StatementBuilder.IsKeyColumn(System.Data.DataTable,System.Data.DataColumn)">
            <summary>
              Determines whether the specified column is part of the primary key
              of the table.
            </summary>
            <param name="table">
              The data table.
            </param>
            <param name="column">
              The column to be checked.
            </param>
            <returns>
              <b>true</b> if the <paramref name="column"/> is part of the primary
              key of the table; otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.Builders.StatementBuilder.GetValueColumns(System.Data.DataTable)">
            <summary>
              Returns the list of <see cref="T:System.Data.DataColumn"/> objects which are not
              part of the primary key of the specified <see cref="T:System.Data.DataTable"/>.
            </summary>
            <param name="table">
              The <see cref="T:System.Data.DataTable"/> from which to select non-primary-key
              columns.
            </param>
            <returns>
              A read-only list of <see cref="T:System.Data.DataColumn"/> objects.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.Builders.StatementBuilder.FormatVariableName(System.String,System.String)">
            <summary>
              Formats the specified variable name so that it is unique.
            </summary>
            <param name="prefix">
              The prefix to be added to the variable name.
            </param>
            <param name="name">
              The name of the variable.
            </param>
            <returns>
              The unified and formatted variable name.
            </returns>
        </member>
        <member name="T:Sitecore.Analytics.Scripting.IScriptWriter">
            <summary>
              Allows a class to implement a script builder.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.IScriptWriter.Append(System.String)">
            <summary>
              Appends a string value to the script.
            </summary>
            <param name="text">
              The text value to be appended.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.IScriptWriter.Append(System.String,System.Object[])">
            <summary>
              Formats the specified string and appends it to the script.
            </summary>
            <param name="format">
              A composite format string.
            </param>
            <param name="args">
              An object array that contains zero or more objects to format. 
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.IScriptWriter.AppendLine">
            <summary>
              Appends a line-break to the script.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.IScriptWriter.AppendLine(System.String)">
            <summary>
              Appends a string value followed by a line-break to the script.
            </summary>
            <param name="text">
              The text value to be appended.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.IScriptWriter.AppendLine(System.String,System.Object[])">
            <summary>
              Formats the specified string and appends it to the script followed
              by a line break.
            </summary>
            <param name="format">
              A composite format string.
            </param>
            <param name="args">
              An object array that contains zero or more objects to format. 
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.IScriptWriter.Append(System.Data.IDbDataParameter)">
            <summary>
              Appends a parameter to the current script.
            </summary>
            <param name="parameter">
              The parameter to be appended.
            </param>
            <remarks>
              This method first adds the parameter to the internally maintained
              collection of parameters and then appends the name of the parameter
              to the script.
            </remarks>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.IScriptWriter.Build">
            <summary>
              Returns database command object representing the current script.
            </summary>
            <returns>
              A database command object representing the current script.
            </returns>
        </member>
        <member name="T:Sitecore.Analytics.Scripting.IScriptWriterEx">
            <summary>
              Allows a class to implement a script builder.
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Scripting.IScriptWriterEx.ParameterCount">
            <summary>
              Gets the number of parameters currently maintained for the current script writer.
            </summary>
            <value>
              An <see cref="T:System.Int32"/> value indicating the number of parameters maintained for the current script writer.
            </value>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.IScriptWriterEx.InsertBoundary">
            <summary>
              Signals the script writer that a point has been reached at which it is safe to split the script.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.IScriptWriterEx.BuildCommands">
            <summary>
              Returns an array of database command object representing the current script.
            </summary>
            <returns>
              An array of database command object representing the current script.
            </returns>
        </member>
        <member name="T:Sitecore.Analytics.Scripting.ParameterCollection`1">
            <summary>
              Represents a collection of <see cref="T:System.Data.IDbDataParameter"/> objects.
            </summary>
            <typeparam name="TParameter">
              The concrete type of <see cref="T:System.Data.IDbDataParameter"/> elements the
              collection can hold.
            </typeparam>
        </member>
        <member name="P:Sitecore.Analytics.Scripting.ParameterCollection`1.Count">
            <summary>
              Gets the number of <see cref="T:System.Data.IDbDataParameter"/> objects currently
              contained in the collection.
            </summary>
            <value>
              The number of elements currently contained in the collection.
            </value>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.ParameterCollection`1.System#Collections#Generic#IEnumerable{TParameter}#GetEnumerator">
            <summary>
              Returns an enumerator for the current collection.
            </summary>
            <returns>
              An <see cref="T:System.Collections.Generic.IEnumerator`1"/> object that can be used to
              iterate through the current collection.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.ParameterCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
              Returns an enumerator for the current collection.
            </summary>
            <returns>
              An <see cref="T:System.Collections.Generic.IEnumerator`1"/> object that can be used to
              iterate through the current collection.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.ParameterCollection`1.Add(`0)">
            <summary>
              Adds a new <typeparamref name="TParameter"/> element to the collection.
            </summary>
            <param name="parameter">
              The <see cref="T:System.Data.IDbDataParameter"/> object to add.
            </param>
            <returns>
              The name associated with the parameter.
            </returns>
            <remarks>
              This method verifies whether a parameter of the same type with the same
              value is already contained in the collection. If such a parameter
              exists, its name is returned and the specified parameter is left
              unchanged. If no such parameter exists, a new name is generated for
              it and it is added to the collection.
            </remarks>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.ParameterCollection`1.Find(`0)">
            <summary>
              Locates a parameter with the same properties and the same value in
              the collection.
            </summary>
            <param name="parameter">
              The parameter to locate.
            </param>
            <returns>
              The zero-based index of the parameter if <paramref name="parameter"/>
              was matched; otherwise, <c>-1</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.ParameterCollection`1.AreEqual(`0,`0)">
            <summary>
              Compares two parameter objects.
            </summary>
            <param name="left">
              The first parameter to compare.
            </param>
            <param name="right">
              The second parameter to compare.
            </param>
            <returns>
              <b>true</b> if the <paramref name="left"/> equals to
              <paramref name="right"/>; otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.ParameterCollection`1.OnAreEqual(`0,`0)">
            <summary>
              When implemented in a derived class, this method determines whether
              the specified <typeparamref name="TParameter"/> objects are equal except their names.
            </summary>
            <param name="left">
              The first parameter to compare.
            </param>
            <param name="right">
              The second parameter to compare.
            </param>
            <returns>
              <b>true</b> if the <paramref name="left"/> equals to
              <paramref name="right"/>; otherwise, <b>false</b>.
            </returns>
            <remarks>
              The implementation in the derived class only needs to compare the
              properties not accessible through the <see cref="T:System.Data.IDbDataParameter"/>
              interface.
            </remarks>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.ParameterCollection`1.OnFormatParameterName(System.Int32)">
            <summary>
              Generates a name for the parameter with the specified index.
            </summary>
            <param name="index">
              The zero-based index of the parameter to generate a name for.
            </param>
            <returns>
              The name of the parameter.
            </returns>
            <remarks>
              The name generated has to be unique among the parameters
              contained in the collection.
            </remarks>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.ParameterCollection`1.OnBuildIndexKey(`0)">
            <summary>
              Generates a key based on some selected properties of the specified parameter that is used to limit the number of
              parameters in the current collection that need to be searched when a parameter is looked up.
            </summary>
            <param name="parameter">
              A <typeparamref name="TParameter"/> object for which to generate an index key.
            </param>
            <returns>
              a <see cref="T:System.String"/> value that is used as a key in the index.
            </returns>
        </member>
        <member name="T:Sitecore.Analytics.Scripting.ScriptWriter`3">
            <summary>
              Base class for database script builder implementations.
            </summary>
            <typeparam name="TCommand">
              The command type constructed by the script builder.
            </typeparam>
            <typeparam name="TParameter">
              The type of the parameters the script builder accepts.
            </typeparam>
            <typeparam name="TParameterCollection">
              The type that implements the collection of parameters.
            </typeparam>
        </member>
        <member name="P:Sitecore.Analytics.Scripting.ScriptWriter`3.ParameterCount">
            <summary>
              Gets the total number of parameters currently maintained for the current script writer.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.ScriptWriter`3.Append(System.String)">
            <summary>
              Appends a string value to the script.
            </summary>
            <param name="text">
              The text value to be appended.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="text"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.ScriptWriter`3.Append(System.String,System.Object[])">
            <summary>
              Formats the specified string and appends it to the script.
            </summary>
            <param name="format">
              A composite format string.
            </param>
            <param name="args">
              An object array that contains zero or more objects to format. 
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="format"/> or <paramref name="args"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.FormatException">
              The argument <paramref name="format"/> is not valid.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.ScriptWriter`3.AppendLine">
            <summary>
              Appends a line-break to the script.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.ScriptWriter`3.AppendLine(System.String)">
            <summary>
              Appends a string value followed by a line-break to the script.
            </summary>
            <param name="text">
              The text value to be appended.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="text"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.ScriptWriter`3.AppendLine(System.String,System.Object[])">
            <summary>
              Formats the specified string and appends it to the script followed
              by a line break.
            </summary>
            <param name="format">
              A composite format string.
            </param>
            <param name="args">
              An object array that contains zero or more objects to format. 
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="format"/> or <paramref name="args"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.FormatException">
              The argument <paramref name="format"/> is not valid.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.ScriptWriter`3.Sitecore#Analytics#Scripting#IScriptWriter#Append(System.Data.IDbDataParameter)">
            <summary>
              Appends a parameter to the current script.
            </summary>
            <param name="parameter">
              The parameter to be appended.
            </param>
            <remarks>
              This method first adds the parameter to the internally maintained
              collection of parameters and then appends the name of the parameter
              to the script.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="parameter"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.ScriptWriter`3.Sitecore#Analytics#Scripting#IScriptWriter#Build">
            <summary>
              Builds a single database command with the content of the current script writer.
            </summary>
            <returns>
              A single <see cref="T:System.Data.IDbCommand"/> object with the content of the current script writer.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.ScriptWriter`3.Append(`1)">
            <summary>
              Appends a parameter to the current script.
            </summary>
            <param name="parameter">
              The parameter to be appended.
            </param>
            <remarks>
              This method first adds the parameter to the internally maintained
              collection of parameters and then appends the name of the parameter
              to the script.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="parameter"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.ScriptWriter`3.Build">
            <summary>
              Builds a single database command with the content of the current script writer.
            </summary>
            <returns>
              A single <typeparamref name="TCommand"/> object with the content of the current script writer.
            </returns>
        </member>
        <member name="T:Sitecore.Analytics.Scripting.ScriptWriterEx`3">
            <summary>
              Base class for database script builder implementations.
            </summary>
            <typeparam name="TCommand">
              The command type constructed by the script builder.
            </typeparam>
            <typeparam name="TParameter">
              The type of the parameters the script builder accepts.
            </typeparam>
            <typeparam name="TParameterCollection">
              The type that implements the collection of parameters.
            </typeparam>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.ScriptWriterEx`3.InsertBoundary">
            <summary>
              Signals the script writer that a point has been reached at which it is safe to split the script.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Scripting.ScriptWriterEx`3.BuildCommands">
            <summary>
              Returns database command object representing the current script.
            </summary>
            <returns>
              A database command object representing the current script.
            </returns>
        </member>
        <member name="T:Sitecore.Analytics.SqlDataProvider">
            <summary>
            Represents a base class for data providers targeting Microsoft SQL Server.
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlDataProvider.ConnectionStringName">
            <summary>
              Gets the name of the database connection string used by the current data provider.
            </summary>
            <value>
              A <see cref="T:System.String"/> value that contains the name of the connection string used by the current data
              provider.
            </value>
        </member>
        <member name="P:Sitecore.Analytics.SqlDataProvider.CommandTimeout">
            <summary>
              Gets the wait time before the execution attempt of a database command is terminated and an error is
              generated.
            </summary>
            <value>
              The wait time, specified in seconds, before the execution attempt of a database command is terminated
              and an error is generated.
            </value>
            <remarks>
              This value is passed straight to the database command objects.
            </remarks>
        </member>
        <member name="P:Sitecore.Analytics.SqlDataProvider.RetryManager">
            <summary>
            Gets the retry manager.
            </summary>
            <value>
            The retry manager.
            </value>
        </member>
        <member name="M:Sitecore.Analytics.SqlDataProvider.#ctor(System.String,System.Int32,Sitecore.Xdb.Sql.Common.IRetryManager)">
            <summary>
              Creates a new instance of <see cref="T:Sitecore.Analytics.SqlDataProvider"/> class.
            </summary>
            <param name="connectionStringName">
              Name of the connection string used to establish connection with database.
            </param>
            <param name="commandTimeout">
              The wait time before the execution attempt of a database command is terminated and an error is generated.
            </param>
            <param name="retryManager">
              The retry manager.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="connectionStringName"/> or <paramref name="retryManager"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.SqlDataProvider.CreateDatabaseConnection">
            <summary>
              Creates a new <see cref="T:System.Data.SqlClient.SqlConnection"/> object using the connection string specified in the constructor.
            </summary>
            <returns>
              A <see cref="T:System.Data.Common.DbConnection"/> object initialized with the connection string and SQL credentials specified
              with the constructor. The connection needs to be opened before it can be used.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.SqlDataProvider.CreateCommandForStoredProcedure(System.Data.SqlClient.SqlConnection,System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.Data.SqlClient.SqlParameter})">
            <summary>
              Creates a command to execute against a database.
            </summary>
            <param name="connection">
              A <see cref="T:System.Data.SqlClient.SqlConnection"/> object that represents the database connection to use.
            </param>
            <param name="schemaName">
              The name of the database schema that contains the stored procedure to execute.
            </param>
            <param name="routineName">
              A name of the stored procedure to execute.
            </param>
            <param name="parameters">
              A read-only collection of the <see cref="T:System.Data.SqlClient.SqlParameter"/> objects representing the parameters expected by
              the stored procedure.
            </param>
            <returns>
              A ready to use <see cref="T:System.Data.SqlClient.SqlCommand"/> object.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Any of the <paramref name="connection"/>, <paramref name="schemaName"/>, <paramref name="routineName"/>,
              or <paramref name="parameters"/> arguments is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.SqlDataProvider.CreateCommandForStoredProcedure(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.Data.SqlClient.SqlParameter})">
            <summary>
              Creates a command to execute against a database.
            </summary>
            <param name="connection">
              A <see cref="T:System.Data.SqlClient.SqlConnection"/> object that represents the database connection to use.
            </param>
            <param name="transaction">
              The <see cref="T:System.Data.SqlClient.SqlTransaction"/> object that represents the transaction to associate the command with.
            </param>
            <param name="schemaName">
              The name of the database schema that contains the stored procedure to execute.
            </param>
            <param name="routineName">
              A name of the stored procedure to execute.
            </param>
            <param name="parameters">
              A read-only collection of the <see cref="T:System.Data.SqlClient.SqlParameter"/> objects representing the parameters expected by
              the stored procedure.
            </param>
            <returns>
              A ready to use <see cref="T:System.Data.SqlClient.SqlCommand"/> object.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Any of the <paramref name="connection"/>, <paramref name="schemaName"/>, <paramref name="routineName"/>,
              or <paramref name="parameters"/> arguments is a <b>null</b> reference.
            </exception>
        </member>
        <member name="T:Sitecore.Analytics.AllowBreakingChangeAttribute">
            <summary>
            Annotates a member or a type to allow breaking API/ABI changes introduced by that member/type.
            </summary>
        </member>
        <member name="T:Sitecore.Analytics.Reporting.Filters.SqlDatasourceFilter">
            <summary>
            The sql datasource filter.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Reporting.Filters.SqlDatasourceFilter.#ctor(System.String,Sitecore.Xdb.Reporting.Filters.FilterEntry)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Analytics.Reporting.Filters.SqlDatasourceFilter"/> class.
            </summary>
            <param name="filteringKey">
            The filtering key.
            </param>
            <param name="filterEntry">
            The filter entry.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Reporting.Filters.SqlDatasourceFilter.Inject(Sitecore.Xdb.Reporting.Filters.SqlStatement,System.Collections.Generic.List{System.Object})">
            <summary>
            The inject.
            </summary>
            <param name="statement">
            The statement.
            </param>
            <param name="parameters">
            The parameters.
            </param>
        </member>
        <member name="T:Sitecore.Analytics.Reporting.Filters.SqlValueListFilter">
            <summary>
              Concrete implementation of IDatasourceFilter for Sql based datasources.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.Reporting.Filters.SqlValueListFilter._sqlServerDataApi">
            <summary>
            The sql server data api.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Reporting.Filters.SqlValueListFilter.#ctor(System.String,Sitecore.Xdb.Reporting.Filters.FilterEntry)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Analytics.Reporting.Filters.SqlValueListFilter"/> class.
            </summary>
            <param name="filteringKey">
            The column name.
            </param>
            <param name="entry">
            The filter entry.
            </param>
        </member>
        <member name="M:Sitecore.Analytics.Reporting.Filters.SqlValueListFilter.GetFilterExpression(Sitecore.Xdb.Reporting.Filters.FilterEntry,System.Collections.Generic.List{System.Object})">
            <summary>Gets SQL expression that represents the filter. Expression will be injected into the WHERE part of the query.</summary>
            <param name="filterEntry">The values selected by the user.</param>
            <param name="parameters">Target statement parameters</param>
            <returns>The SQL expression.</returns>
        </member>
        <member name="M:Sitecore.Analytics.Reporting.Filters.SqlValueListFilter.Inject(Sitecore.Xdb.Reporting.Filters.SqlStatement,System.Collections.Generic.List{System.Object})">
            <summary>
              Injects the filters with parameters to SQL statement.
            </summary>
            <param name="statement">The statement.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:Sitecore.Analytics.Reporting.Filters.SqlValueListFilter.FormatColumnName(System.String)">
            <summary>The format column name.</summary>
            <param name="columnName">The column name.</param>
            <returns>The format column name.</returns>
        </member>
        <member name="M:Sitecore.Analytics.Reporting.Filters.SqlValueListFilter.FormatParameter(System.String)">
            <summary>The format parameter.</summary>
            <param name="parameterName">The parameter name.</param>
            <returns>The format parameter.</returns>
        </member>
        <member name="T:Sitecore.Analytics.Reporting.SqlReportDataSource">
            <summary>
              Implements reporting data source for SQL Server.
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.Reporting.SqlReportDataSource.DataApi">
            <summary>
              Reference to the SQL API object.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Reporting.SqlReportDataSource.#ctor(System.String)">
            <summary>
              Initializes a new instance of the <see cref="T:Sitecore.Analytics.Reporting.SqlReportDataSource"/> class.
            </summary>
            <param name="connectionStringName">
              The connection string name.
            </param>
        </member>
        <member name="P:Sitecore.Analytics.Reporting.SqlReportDataSource.SupportsRemoteExecution">
            <summary>
            Specifies if the datasource can be executed using the ReportDataProviderProxy
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.Reporting.SqlReportDataSource.GetData(Sitecore.Xdb.Reporting.ReportDataQuery)">
            <summary>
              Executes the specified query and returns the results in a tabular format.
            </summary>
            <param name="query">
              An instance of <see cref="T:Sitecore.Xdb.Reporting.ReportDataQuery" /> class containing the
              query to execute.
            </param>
            <returns>
              An instance of <see cref="T:System.Data.DataTable" /> class containing the results
              returned by query execution.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.Reporting.SqlReportDataSource.CollectionOfColumnsChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
            <summary>
            This method is called when collection of columns is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.CollectionChangeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.Analytics.Reporting.SqlReportDataSource.SetPropertiesOfColumn(System.Data.DataColumn)">
            <summary>
            Sets the properties of column.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="T:Sitecore.Analytics.SqlCommandExtensions">
            <summary>
              Provides static helper methods that extend the <see cref="T:System.Data.SqlClient.SqlCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.SqlCommandExtensions.GetSqlRoutineErrorCode(System.Data.SqlClient.SqlCommand)">
            <summary>
              Extracts the error code returned by the stored procedure via a return parameter.
            </summary>
            <param name="command">
              The <see cref="T:System.Data.SqlClient.SqlCommand"/> object from which to extract the error code.
            </param>
            <returns>
              A <see cref="T:Sitecore.Analytics.SqlRoutineErrorCode"/> value returned by the stored procedure.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.SqlCommandExtensions.GetExceptionFromSqlRoutineErrorCode(System.Data.SqlClient.SqlCommand,System.Exception,System.String)">
            <summary>
            Gets the <see cref="T:System.Exception"/> based on the <see cref="T:Sitecore.Analytics.SqlRoutineErrorCode"/> retrieved from <paramref name="command"/>.
            </summary>
            <param name="command">The command to get <see cref="T:Sitecore.Analytics.SqlRoutineErrorCode"/> from.</param>
            <param name="innerException">The <see cref="T:System.Exception"/>, which should be specified as an inner exception inside the returned exception.</param>
            <param name="message">Optional exception message. If not provided, default one will be used.</param>
            <returns>The <see cref="T:System.Exception"/> that can be thrown.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="command"/> returns error code which is not defined in <see cref="T:Sitecore.Analytics.SqlRoutineErrorCode"/>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="command"/> is <c>null</c>.</exception>
            <remarks>If <see cref="T:Sitecore.Analytics.SqlRoutineErrorCode"/> has values <see cref="F:Sitecore.Analytics.SqlRoutineErrorCode.GeneralError"/>, <see cref="F:Sitecore.Analytics.SqlRoutineErrorCode.Succeeded"/>
             or <see cref="F:Sitecore.Analytics.SqlRoutineErrorCode.Unknown"/>, <c>null</c> is returned, because for these statuses no exception exists.
            </remarks>
        </member>
        <member name="T:Sitecore.Analytics.SqlCursorDataProvider">
            <summary>
            Represents a data provider to work with <see cref="T:Sitecore.Analytics.Processing.Cursor"/> instances in the SQL database.
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.SchemaName">
            <summary>
            Gets the name database schema.
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.ColumnId">
            <summary>
            Gets the name of the Id column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.ColumnTaskId">
            <summary>
            Gets the name of the TaskId column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.ColumnCreated">
            <summary>
            Gets the name of the Created column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.ColumnAccessed">
            <summary>
            Gets the name of the Accessed column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.ColumnComputer">
            <summary>
            Gets the name of the Computer column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.ColumnProcess">
            <summary>
            Gets the name of the Process column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.ColumnAgent">
            <summary>
            Gets the name of the Agent column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.ColumnPriority">
            <summary>
            Gets the name of the Priority column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.ColumnSize">
            <summary>
            Gets the name of the Size column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.ColumnBookmark">
            <summary>
            Gets the name of the Bookmark column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.ColumnConsumed">
            <summary>
            Gets the name of the Consumed column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.ColumnIsDescending">
            <summary>
            Gets the name of the IsDescending column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.ColumnIsSplitRequested">
            <summary>
            Gets the name of the IsSplitRequested column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.ColumnIsCompleted">
            <summary>
            Gets the name of the IsCompleted column
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.RoutineAddCursor">
            <summary>
            Gets the name of the AddCursor routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.RoutineDeleteCursorsByTaskId">
            <summary>
            Gets the name of the DeleteCursorsByTaskId routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.RoutineMarkCursorCompleted">
            <summary>
            Gets the name of the MarkCursorCompleted routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.RoutineTryAcquireCursor">
            <summary>
            Gets the name of the TryAcquireCursor routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.RoutineTryRegisterCursorSplitRequest">
            <summary>
            Gets the name of the TryRegisterCursorSplitRequest routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.RoutineUpdateCursorProgress">
            <summary>
            Gets the name of the UpdateCursorProgress routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.RoutineUpdateCursor">
            <summary>
            Gets the name of the UpdateCursor routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.RoutineGetCursorsCountByTaskId">
            <summary>
            Gets the name of the GetCursorsCountByTaskId routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.RoutineGetTotalNumberOfConsumedItemsByTaskId">
            <summary>
            Gets the name of the GetTotalNumberOfConsumedItemsByTaskId routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.RoutineAreAllCursorsCompleted">
            <summary>
            Gets the name of the AreAllCursorsCompleted routine
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.OwnershipTimeout">
            <summary>
            Gets the timeout in milliseconds during which each agent have to update <see cref="P:Sitecore.Analytics.Processing.Cursor.Accessed" /> in the database. 
            If it didn't happen, cursor is considered abandoned.
            </summary>
        </member>
        <member name="P:Sitecore.Analytics.SqlCursorDataProvider.TaskId">
            <summary>
            The unique identifier of the task associated with all the operations on <see cref="T:Sitecore.Analytics.Processing.Cursor"/> instances.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.SqlCursorDataProvider.#ctor(System.Guid,System.String,System.Int32,System.Int32,Sitecore.Xdb.Sql.Common.IRetryManager)">
            <summary>
              Creates a new instance of<see cref="T:Sitecore.Analytics.SqlCursorDataProvider"/> class.
            </summary>
            <param name="taskId">
              The  unique identifier of the task associated with all the operations on <see cref="T:Sitecore.Analytics.Processing.Cursor"/> instances.
            </param>
            <param name="connectionStringName">
              Name of the connection string used to establish connection with database.
            </param>
            <param name="commandTimeout">
              The wait time before the execution attempt of a database command is terminated and an error is generated.
            </param>
            <param name="ownershipTimeoutMs">
              The timeout in milliseconds during which each agent have to update <see cref="P:Sitecore.Analytics.Processing.Cursor.Accessed" /> in the database. 
              If it didn't happen, cursor is considered abandoned.
            </param>
            <param name="retryManager">
              The retry manager.
            </param>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="connectionStringName"/> or <paramref name="retryManager"/> is a <b>null</b> reference.
            </exception>
            <exception cref="T:System.ArgumentException"><paramref name="ownershipTimeoutMs"/> is less than one millisecond. </exception>
        </member>
        <member name="M:Sitecore.Analytics.SqlCursorDataProvider.AddAsync(Sitecore.Analytics.Processing.Cursor)">
            <summary>
            Asynchronously adds new <see cref="T:Sitecore.Analytics.Processing.Cursor"/> to the data store.
            </summary>
            <param name="cursor">The <see cref="T:Sitecore.Analytics.Processing.Cursor"/> to add.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task"/> representing asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="cursor"/> is <c>null</c>.</exception>
            <remarks>
              <see cref="P:Sitecore.Analytics.Processing.Cursor.Created"/> and <see cref="P:Sitecore.Analytics.Processing.Cursor.Accessed"/> in 
              the <paramref name="cursor"/> are ignored and set in the stored procedure.
            </remarks>
        </member>
        <member name="M:Sitecore.Analytics.SqlCursorDataProvider.TryAcquireCursorAsync(Sitecore.Analytics.Processing.AgentId)">
            <summary>
            Asynchronously attempts to acquire any available <see cref="T:Sitecore.Analytics.Processing.Cursor"/>.
            </summary>
            <param name="agentId">The object with the set of agent characteristics that uniquely identify it.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1"/> with the <see cref="T:Sitecore.Analytics.Processing.Cursor"/> instance if attempt succeeded. 
            Otherwise, returns <see cref="T:System.Threading.Tasks.Task`1"/> with <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="agentId"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Sitecore.Analytics.SqlCursorDataProvider.MarkCompletedAsync(System.Guid,System.DateTime)">
            <summary>
            Asynchronously marks completed the <see cref="T:Sitecore.Analytics.Processing.Cursor"/>.
            </summary>
            <param name="cursorId">The <see cref="P:Sitecore.Analytics.Processing.Cursor.Id"/> to complete.</param>
            <param name="accessed">The last time, known to the owner agent when the <see cref="T:Sitecore.Analytics.Processing.Cursor"/> was accessed.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task"/> representing asynchronous operation.</returns>
        </member>
        <member name="M:Sitecore.Analytics.SqlCursorDataProvider.UpdateProgressAsync(System.Guid,System.DateTime,System.Byte[],System.Int64)">
            <summary>
            Asynchronously updates the progress of the <see cref="T:Sitecore.Analytics.Processing.Cursor"/>.
            </summary>
            <param name="cursorId">The <see cref="P:Sitecore.Analytics.Processing.Cursor.Id"/> to update.</param>
            <param name="accessed">The last time, known to the owner agent when the <see cref="T:Sitecore.Analytics.Processing.Cursor"/> was accessed.</param>
            <param name="bookmark">The updated bookmark, which represents the current position in the <see cref="T:Sitecore.Analytics.Processing.Cursor"/>.</param>
            <param name="consumed">The updated amount of visited work items.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task"/> representing asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="bookmark"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"> <paramref name="consumed"/> is less than zero.</exception>
        </member>
        <member name="M:Sitecore.Analytics.SqlCursorDataProvider.SaveSplitAsync(System.Guid,System.DateTime,System.Byte[],System.Single,System.Int64,System.Collections.Generic.IReadOnlyCollection{Sitecore.Analytics.Processing.Cursor})">
            <summary>
            Asynchronously saves the split of the cursor in the database
            </summary>
            <param name="originalCursorId">The <see cref="P:Sitecore.Analytics.Processing.Cursor.Id"/> that was split.</param>
            <param name="accessed">The last time, known to the owner agent when the <see cref="T:Sitecore.Analytics.Processing.Cursor"/> was accessed.</param>
            <param name="updatedBookmark">The updated bookmark, which represents the current position in the split <see cref="T:Sitecore.Analytics.Processing.Cursor"/>.</param>
            <param name="updatedPriority">The updated priority of the split <see cref="T:Sitecore.Analytics.Processing.Cursor"/>.</param>
            <param name="updatedSize">The updated, approximate, total amount of items to work on in the split <see cref="T:Sitecore.Analytics.Processing.Cursor"/>.</param>
            <param name="newCursors">The <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> that contains new cursors, received after split.</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task"/> representing asynchronous operation.</returns>
            <exception cref="T:System.ArgumentNullException"> <paramref name="updatedBookmark"/> or <paramref name="newCursors"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"> <paramref name="updatedSize"/> is less than zero or 
            <paramref name="updatedPriority"/> is not in range between 0.0 and 1.0 inclusive.</exception>
            <exception cref="T:System.ArgumentException"> <paramref name="newCursors"/> is empty.</exception>
        </member>
        <member name="M:Sitecore.Analytics.SqlCursorDataProvider.TryRegisterSplitRequestAsync">
            <summary>
            Asynchronously makes attempt to register split of the <see cref="T:Sitecore.Analytics.Processing.Cursor"/> in the data store.
            </summary>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1"/> containing <see cref="T:Sitecore.Analytics.Processing.Cursor"/> instance with registered split if attempt succeeded. 
            Otherwise, returns <see cref="T:System.Threading.Tasks.Task`1"/> with <c>null</c>.</returns>
        </member>
        <member name="M:Sitecore.Analytics.SqlCursorDataProvider.DeleteByTaskAsync(System.Boolean)">
            <summary>
            Asynchronously deletes all the <see cref="T:Sitecore.Analytics.Processing.Cursor"/> instances.
            </summary>
            <param name="deleteCompletedOnly">Indicates whether only completed cursors have to be removed (<c>true</c>) or not (<c>false</c>).</param>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task"/> representing asynchronous operation.</returns>
        </member>
        <member name="M:Sitecore.Analytics.SqlCursorDataProvider.GetCursorCountAsync">
            <summary>
            Asynchronously retrieves count of all the <see cref="T:Sitecore.Analytics.Processing.Cursor"/> instances.
            </summary>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1"/> with the <see cref="T:System.Int32"/>, which represents amount of <see cref="T:Sitecore.Analytics.Processing.Cursor"/> instances in the data store.</returns>
        </member>
        <member name="M:Sitecore.Analytics.SqlCursorDataProvider.GetTotalNumberOfConsumedItemsAsync">
            <summary>
            Asynchronously retrieves amount of the processed items throughout all the <see cref="T:Sitecore.Analytics.Processing.Cursor"/> instances.
            </summary>
            <returns>Returns <see cref="T:System.Threading.Tasks.Task`1"/> with the <see cref="T:System.Int64"/>, which represents amount of the processed items throughout all the <see cref="T:Sitecore.Analytics.Processing.Cursor"/> instances in the data store.</returns>
        </member>
        <member name="M:Sitecore.Analytics.SqlCursorDataProvider.AreAllCursorsCompletedAsync">
            <summary>
              Asynchronously checks whether all the <see cref="T:Sitecore.Analytics.Processing.Cursor"/> instances are completed. 
              are completed (<see cref="P:Sitecore.Analytics.Processing.Cursor.IsCompleted"/> is <c>true</c>).
            </summary>
            <returns>
              Returns <see cref="T:System.Threading.Tasks.Task`1"/> with the <see cref="T:System.Boolean"/>, which is <c>true</c> if all the 
              <see cref="T:Sitecore.Analytics.Processing.Cursor"/> instances have <see cref="P:Sitecore.Analytics.Processing.Cursor.IsCompleted"/> is <c>true</c>.
              Otherwise, returns <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Analytics.SqlCursorDataProvider.ReadCursorAsync(System.Data.SqlClient.SqlDataReader)">
            <summary>
              Creates a <see cref="T:Sitecore.Analytics.Processing.Cursor"/> object using data read from the specified <see cref="T:System.Data.SqlClient.SqlDataReader"/> object.
            </summary>
            <param name="reader">The <see cref="T:System.Data.SqlClient.SqlDataReader"/> object to read data from.</param>
            <returns>The <see cref="T:Sitecore.Analytics.Processing.Cursor"/> initialized with the values read from <paramref name="reader"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Argument <paramref name="reader"/> is a <b>null</b> reference.</exception>
        </member>
        <member name="M:Sitecore.Analytics.SqlCursorDataProvider.CreateAddCursorRoutineParams(Sitecore.Analytics.Processing.Cursor)">
            <summary>
            Creates an <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> of <see cref="T:System.Data.SqlClient.SqlParameter"/> passed for execution to <see cref="P:Sitecore.Analytics.SqlCursorDataProvider.RoutineAddCursor"/> stored procedure.
            </summary>
            <param name="cursor">The <see cref="T:Sitecore.Analytics.Processing.Cursor"/> that contains values to save in the database.</param>
            <returns>The <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> of <see cref="T:System.Data.SqlClient.SqlParameter"/> passed for execution to <see cref="P:Sitecore.Analytics.SqlCursorDataProvider.RoutineAddCursor"/> stored procedure.</returns>
        </member>
        <member name="M:Sitecore.Analytics.SqlCursorDataProvider.CreateTryAcquireCursorRoutineParams(System.Guid,Sitecore.Analytics.Processing.AgentId,System.Int32)">
            <summary>
            Creates an <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> of <see cref="T:System.Data.SqlClient.SqlParameter"/> passed for execution to <see cref="P:Sitecore.Analytics.SqlCursorDataProvider.RoutineTryAcquireCursor"/> stored procedure.
            </summary>
            <param name="taskId">The id of the history task to work on.</param>
            <param name="agentId">The <see cref="T:Sitecore.Analytics.Processing.AgentId"/> that contains values to save in the database.</param>
            <param name="ownershipTimeout">The timeout in milliseconds during which each agent have to update <see cref="P:Sitecore.Analytics.Processing.Cursor.Accessed" /> in the database.</param>
            <returns>The <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> of <see cref="T:System.Data.SqlClient.SqlParameter"/> passed for execution to <see cref="P:Sitecore.Analytics.SqlCursorDataProvider.RoutineTryAcquireCursor"/> stored procedure.</returns>
        </member>
        <member name="M:Sitecore.Analytics.SqlCursorDataProvider.CreateMarkCompletedCursorRoutineParams(System.Guid,System.DateTime)">
            <summary>
            Creates an <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> of <see cref="T:System.Data.SqlClient.SqlParameter"/> passed for execution to <see cref="P:Sitecore.Analytics.SqlCursorDataProvider.RoutineMarkCursorCompleted"/> stored procedure.
            </summary>
            <param name="cursorId">The id of the <see cref="T:Sitecore.Analytics.Processing.Cursor"/> to mark completed.</param>
            <param name="accessed">The <see cref="P:Sitecore.Analytics.Processing.Cursor.Accessed"/> value to ensure that no one accessed abandoned cursor.</param>
            <returns>The <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> of <see cref="T:System.Data.SqlClient.SqlParameter"/> passed for execution to <see cref="P:Sitecore.Analytics.SqlCursorDataProvider.RoutineMarkCursorCompleted"/> stored procedure.</returns>
        </member>
        <member name="M:Sitecore.Analytics.SqlCursorDataProvider.CreateUpdateCursorProgressRoutineParams(System.Guid,System.Byte[],System.DateTime,System.Int64)">
            <summary>
            Creates an <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> of <see cref="T:System.Data.SqlClient.SqlParameter"/> passed for execution to <see cref="P:Sitecore.Analytics.SqlCursorDataProvider.RoutineUpdateCursorProgress"/> stored procedure.
            </summary>
            <param name="cursorId">The id of the <see cref="T:Sitecore.Analytics.Processing.Cursor"/> to update progress.</param>
            <param name="bookmark">The bookmark, which represents the current position in the <see cref="T:Sitecore.Analytics.Processing.Cursor"/>.</param>
            <param name="consumed">The amount of visited work items.</param>
            <param name="accessed">The <see cref="P:Sitecore.Analytics.Processing.Cursor.Accessed"/> value to ensure that no one accessed abandoned cursor.</param>
            <returns>The <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> of <see cref="T:System.Data.SqlClient.SqlParameter"/> passed for execution to <see cref="P:Sitecore.Analytics.SqlCursorDataProvider.RoutineUpdateCursorProgress"/> stored procedure.</returns>
        </member>
        <member name="M:Sitecore.Analytics.SqlCursorDataProvider.CreateUpdateSplitCursorParams(System.Guid,System.DateTime,System.Byte[],System.Int64,System.Single)">
            <summary>
            Creates an <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> of <see cref="T:System.Data.SqlClient.SqlParameter"/> passed for execution to <see cref="P:Sitecore.Analytics.SqlCursorDataProvider.RoutineUpdateCursor"/> stored procedure.
            </summary>
            <param name="cursorId">The <see cref="T:Sitecore.Analytics.Processing.Cursor"/> id that has been split.</param>
            <param name="accessed">The <see cref="P:Sitecore.Analytics.Processing.Cursor.Accessed"/> value to ensure that no one accessed abandoned cursor.</param>
            <param name="updatedBookmark">The updated bookmark, which represents the current position in the split <see cref="T:Sitecore.Analytics.Processing.Cursor"/>.</param>
            <param name="updatedSize">The updated, approximate, total amount of items to work on in the split <see cref="T:Sitecore.Analytics.Processing.Cursor"/>.</param>
            <param name="updatedPriority">The updated priority of the split <see cref="T:Sitecore.Analytics.Processing.Cursor"/>.</param>
            <returns>The <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> of <see cref="T:System.Data.SqlClient.SqlParameter"/> passed for execution to <see cref="P:Sitecore.Analytics.SqlCursorDataProvider.RoutineUpdateCursor"/> stored procedure.</returns>
        </member>
        <member name="T:Sitecore.Analytics.SqlRoutineErrorCode">
            <summary>
              Defines error codes returned by stored procedures.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.SqlRoutineErrorCode.Succeeded">
            <summary>
              The execution of the stored procedure completed successfully.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.SqlRoutineErrorCode.InputValidationError">
            <summary>
              The execution of the stored procedure failed due to invalid input parameters.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.SqlRoutineErrorCode.EntityAlreadyExists">
            <summary>
              The execution of the stored procedure failed because the entity already exists.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.SqlRoutineErrorCode.EntityDoesNotExist">
            <summary>
              The execution of the stored procedure failed because the entity does not exist.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.SqlRoutineErrorCode.GeneralError">
            <summary>
              The execution of the stored procedure failed due to an error generated by the database server.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.SqlRoutineErrorCode.NotInTransaction">
            <summary>
              The execution of the stored procedure failed because it was not executed in the context of a transaction.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.SqlRoutineErrorCode.ConcurrentlyModified">
            <summary>
              The execution of the stored procedure failed because an entity was concurrently modified.
            </summary>
        </member>
        <member name="F:Sitecore.Analytics.SqlRoutineErrorCode.Unknown">
            <summary>
              The stored procedure did not return an error code.
            </summary>
        </member>
        <member name="T:Sitecore.Analytics.SqlUtility">
            <summary>
              Provides static helper methods used by SQL data provider implementations.
            </summary>
        </member>
        <member name="M:Sitecore.Analytics.SqlUtility.LookUpConnectionString(System.String)">
            <summary>
              Returns the database connection string from configuration with the specified name.
            </summary>
            <returns>
              A <see cref="T:System.String"/> value that is the configured connection string looked up from the configuration
              file.
            </returns>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">
              Connection string with the specified name is not configured.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.SqlUtility.FormatObjectName(System.String,System.String)">
            <summary>
              Formats the name of the specified database object by adding the schema name and delimiters to it.
            </summary>
            <param name="schemaName">
              The name of the database schema containing the object.
            </param>
            <param name="objectName">
              The name of the database object.
            </param>
            <returns>
              The formatted name of the database objects.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="schemaName"/> or argument <paramref name="objectName"/> is a <b>null</b>
              reference.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.SqlUtility.FormatParameterName(System.String)">
            <summary>
              Formats the name of the specified command parameter.
            </summary>
            <param name="name">
              The name of the field or parameter.
            </param>
            <returns>
              The formatted parameter name.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              Argument <paramref name="name"/> is a <b>null</b> reference.
            </exception>
        </member>
        <member name="M:Sitecore.Analytics.SqlUtility.CreateParameter(System.String,System.Object,System.Data.SqlDbType)">
            <summary>
            Creates and instance of <see cref="T:System.Data.SqlClient.SqlParameter"/> with specified parameters.
            </summary>
            <param name="name">The name of the parameter that will be formatted using <see cref="M:Sitecore.Analytics.SqlUtility.FormatParameterName(System.String)"/></param>
            <param name="value">The value of the parameter.</param>
            <param name="type">The Sql Server database type.</param>
            <returns>An instance of <see cref="T:System.Data.SqlClient.SqlParameter"/></returns>
            <exception cref="T:System.ArgumentException"><paramref name="type"/> is not defined in <see cref="T:System.Data.SqlDbType"/></exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="name"/>, <paramref name="value"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Sitecore.Analytics.SqlUtility.ReadVarbinaryColumnAsync(System.Int32,System.Data.Common.DbDataReader,System.Int32)">
            <summary>
            Reads Varbinary column from the specified <see cref="T:System.Data.Common.DbDataReader"/> object.
            </summary>
            <param name="columnIndex">Index of the column to read from the <paramref name="reader"/>.</param>
            <param name="reader">The <see cref="T:System.Data.Common.DbDataReader"/> object to read data from.</param>
            <param name="bufferSize">The size of the buffer used during data read from the <paramref name="reader"/>.</param>
            <returns>The array of <see cref="T:System.Byte"/> representing VarBinary column.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="reader"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex"/> is less than zero or <paramref name="bufferSize"/> is less than one.</exception>
        </member>
    </members>
</doc>
