<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 14.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="14.0">
 <Targets>
  <Target Name="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\bin\Release\Sitecore.Oracle.dll">
   <Modules>
    <Module Name="sitecore.oracle.dll">
     <Messages>
      <Message TypeName="AttributeStringLiteralsShouldParseCorrectly" Category="Microsoft.Usage" CheckId="CA2243" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
       <Issue Certainty="75" Level="Warning">In the constructor of 'AssemblyInformationalVersionAttribute', change the value of argument 'informationalVersion', which is currently "11.1.0-r00024", to something that can be correctly parsed as 'Version'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'Sitecore.Oracle.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithComVisible" Category="Microsoft.Design" CheckId="CA1017" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
       <Issue Name="NoAttribute" Certainty="95" Level="CriticalError">Because 'Sitecore.Oracle.dll' exposes externally visible types, mark it with ComVisible(false) at the assembly level and then mark all types within the assembly that should be exposed to COM clients with ComVisible(true).</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="Sitecore.Data.DataProviders.Sql">
       <Types>
        <Type Name="ExtendedSqlDataApi" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetBlob(System.Int32,Sitecore.Data.DataProviders.Sql.DataProviderReader)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="ExtendedSqlDataApi.cs" Line="76">In externally visible method 'ExtendedSqlDataApi.GetBlob(int, DataProviderReader)', validate parameter 'reader' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBoolean(System.Int32,Sitecore.Data.DataProviders.Sql.DataProviderReader)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="ExtendedSqlDataApi.cs" Line="102">In externally visible method 'ExtendedSqlDataApi.GetBoolean(int, DataProviderReader)', validate parameter 'reader' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Sitecore.Data.Oracle">
       <Types>
        <Type Name="OracleCustomCommand" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ProvideObsoleteAttributeMessage" Category="Microsoft.Design" CheckId="CA1041" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">Provide a message for the ObsoleteAttribute that marks 'OracleCustomCommand'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(Oracle.DataAccess.Client.OracleCommand,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleCommand.cs" Line="50">In externally visible method 'OracleCustomCommand.OracleCustomCommand(OracleCommand, bool)', validate parameter 'command' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OracleDataApi" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#_clobFields" Kind="Field" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OracleDataApi._clobFields' or change the field to one that is an immutable reference type. If the reference type 'List&lt;string&gt;' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'OracleDataApi._clobFields' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="clob" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'clob' in member name 'OracleDataApi._clobFields' by changing it to 'Clob'.</Issue>
            </Message>
            <Message Id="clob" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'clob' in member name 'OracleDataApi._clobFields' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'OracleDataApi._clobFields'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_connectionString" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'OracleDataApi._connectionString' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AppendLine(System.Text.StringBuilder,System.String,System.Collections.ArrayList,System.Int32&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="875">The 'this' parameter (or 'Me' in Visual Basic) of 'OracleDataApi.AppendLine(StringBuilder, string, ArrayList, ref int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="879">'OracleDataApi.AppendLine(StringBuilder, string, ArrayList, ref int)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.StartsWith(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConnectionString" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_ConnectionString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="Sitecore.Diagnostics.Assert.IsNotNull(System.Object,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
               <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="101">Method 'OracleDataApi.ConnectionString.get()' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNull(object, string)'. Retrieve the following string(s) from a resource table instead: "ConnectionString has not been set.".</Issue>
              </Message>
              <Message Id="ConnectionString" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="101">Correct the spelling of the unrecognized token 'ConnectionString' in the literal '"ConnectionString has not been set."'.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_ConnectionString(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="Sitecore.Diagnostics.Assert.IsNotNull(System.Object,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
               <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="107">Method 'OracleDataApi.ConnectionString.set(string)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNull(object, string)'. Retrieve the following string(s) from a resource table instead: "value".</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#CreateCommand(System.String,System.Object[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.StartsWith(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="287">'OracleDataApi.CreateCommand(string, params object[])' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.StartsWith(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateOracleCommand(System.String,System.Boolean,System.Object[])" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="808">The query string passed to 'IDbCommand.CommandText.set(string)' in 'OracleDataApi.CreateOracleCommand(string, bool, params object[])' could contain the following variables 'sql'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateParameter(System.String,System.Object,Sitecore.Data.Oracle.OracleDataApi+ColumnTypeInfo)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="702">In method 'OracleDataApi.CreateParameter(string, object, OracleDataApi.ColumnTypeInfo)', call System.IDisposable.Dispose on object 'new OracleParameter()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="702">In externally visible method 'OracleDataApi.CreateParameter(string, object, OracleDataApi.ColumnTypeInfo)', validate parameter 'typeInfo' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FixParameters(System.Collections.ArrayList)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="308">The 'this' parameter (or 'Me' in Visual Basic) of 'OracleDataApi.FixParameters(ArrayList)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="311">'OracleDataApi.FixParameters(ArrayList)' passes 'StringComparison.InvariantCulture' as the 'StringComparison' parameter to 'string.StartsWith(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBlobString(System.Int32,Sitecore.Data.DataProviders.Sql.DataProviderReader)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sitecore.Diagnostics.Assert.IsNotNull(System.Object,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="397">Method 'OracleDataApi.GetBlobString(int, DataProviderReader)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNull(object, string)'. Retrieve the following string(s) from a resource table instead: "Reader is not OracleDataReader".</Issue>
            </Message>
            <Message Id="OracleDataReader" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="397">Correct the spelling of the unrecognized token 'OracleDataReader' in the literal '"Reader is not OracleDataReader"'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="391">In externally visible method 'OracleDataApi.GetBlobString(int, DataProviderReader)', validate parameter 'reader' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBoolean(System.Int32,Sitecore.Data.DataProviders.Sql.DataProviderReader)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="423">In externally visible method 'OracleDataApi.GetBoolean(int, DataProviderReader)', validate parameter 'reader' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetByteArray(System.Int32,System.Int32,Sitecore.Data.DataProviders.Sql.DataProviderReader)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="439">In externally visible method 'OracleDataApi.GetByteArray(int, int, DataProviderReader)', validate parameter 'reader' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetClob(System.Int32,Sitecore.Data.DataProviders.Sql.DataProviderReader)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sitecore.Diagnostics.Assert.IsNotNull(System.Object,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="413">Method 'OracleDataApi.GetClob(int, DataProviderReader)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNull(object, string)'. Retrieve the following string(s) from a resource table instead: "Reader is not OracleDataReader".</Issue>
            </Message>
            <Message Id="Clob" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="407">Correct the spelling of 'Clob' in member name 'OracleDataApi.GetClob(int, DataProviderReader)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="OracleDataReader" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="413">Correct the spelling of the unrecognized token 'OracleDataReader' in the literal '"Reader is not OracleDataReader"'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="407">In externally visible method 'OracleDataApi.GetClob(int, DataProviderReader)', validate parameter 'reader' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDateTime(System.Int32,Sitecore.Data.DataProviders.Sql.DataProviderReader)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="487">In externally visible method 'OracleDataApi.GetDateTime(int, DataProviderReader)', validate parameter 'reader' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetGuid(System.Int32,Sitecore.Data.DataProviders.Sql.DataProviderReader)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="496">In externally visible method 'OracleDataApi.GetGuid(int, DataProviderReader)', validate parameter 'reader' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetInt(System.Int32,Sitecore.Data.DataProviders.Sql.DataProviderReader)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="514">In externally visible method 'OracleDataApi.GetInt(int, DataProviderReader)', validate parameter 'reader' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetLength(System.Object)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="716">'value', a parameter, is cast to type 'BigString' multiple times in method 'OracleDataApi.GetLength(object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="716">'value', a parameter, is cast to type 'byte[]' multiple times in method 'OracleDataApi.GetLength(object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="716">The 'this' parameter (or 'Me' in Visual Basic) of 'OracleDataApi.GetLength(object)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetLong(System.Int32,Sitecore.Data.DataProviders.Sql.DataProviderReader)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="558">In externally visible method 'OracleDataApi.GetLong(int, DataProviderReader)', validate parameter 'reader' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetString(System.Int32,Sitecore.Data.DataProviders.Sql.DataProviderReader)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="593">In externally visible method 'OracleDataApi.GetString(int, DataProviderReader)', validate parameter 'reader' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GuidToRawString(System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="guid" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="244">In member 'OracleDataApi.GuidToRawString(Guid)', consider replacing the data type identifier 'guid' in parameter name 'guid' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MapSqlToOracle(System.String,System.Collections.ArrayList)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.StartsWith(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="830">'OracleDataApi.MapSqlToOracle(string, ArrayList)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.StartsWith(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="830">'OracleDataApi.MapSqlToOracle(string, ArrayList)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.StartsWith(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MapType(System.String,System.Type,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Equals(System.String,System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="945">'OracleDataApi.MapType(string, Type, int)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Equals(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MapValue(System.Object)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="993">'value', a parameter, is cast to type 'BigString' multiple times in method 'OracleDataApi.MapValue(object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="983">'value', a parameter, is cast to type 'Language' multiple times in method 'OracleDataApi.MapValue(object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="988">'value', a parameter, is cast to type 'Version' multiple times in method 'OracleDataApi.MapValue(object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Parser(Sitecore.Data.Oracle.OracleDataApi+ParserState&amp;,System.Char,System.Text.StringBuilder)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="1061">Consider a design that does not require that 'state' be a reference parameter.</Issue>
            </Message>
            <Message Id="c" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="1061">In method 'OracleDataApi.Parser(ref OracleDataApi.ParserState, char, StringBuilder)', consider providing a more meaningful name than parameter name 'c'.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="1066">In externally visible method 'OracleDataApi.Parser(ref OracleDataApi.ParserState, char, StringBuilder)', validate parameter 'result' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemapParameters(System.String&amp;,System.Collections.IList)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="length" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="784">'OracleDataApi.RemapParameters(ref string, IList)' declares a variable, 'length', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="772">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'OracleDataApi.RemapParameters(ref string, IList)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;.#ctor(System.Collections.Generic.IEqualityComparer`1&lt;System.String&gt;)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="StringComparer" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="767">'OracleDataApi.RemapParameters(ref string, IList)' passes 'StringComparer.InvariantCultureIgnoreCase' as the 'StringComparer' parameter to 'Dictionary&lt;string, object&gt;.Dictionary(IEqualityComparer&lt;string&gt;)'. To perform a non-linguistic comparison, specify 'StringComparer.Ordinal' or 'StringComparer.OrdinalIgnoreCase' instead.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StripParameters(System.String,System.Collections.ArrayList)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="Sitecore.Diagnostics.Assert.IsNotNullOrEmpty(System.String,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="323">Method 'OracleDataApi.StripParameters(string, ArrayList)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNullOrEmpty(string, string)'. Retrieve the following string(s) from a resource table instead: "parameter name is missing, sql: ".</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="320">The 'this' parameter (or 'Me' in Visual Basic) of 'OracleDataApi.StripParameters(string, ArrayList)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="335">'OracleDataApi.StripParameters(string, ArrayList)' passes 'StringComparison.InvariantCulture' as the 'StringComparison' parameter to 'string.IndexOf(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="325">'OracleDataApi.StripParameters(string, ArrayList)' passes 'StringComparison.InvariantCulture' as the 'StringComparison' parameter to 'string.StartsWith(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataApi.cs" Line="330">'OracleDataApi.StripParameters(string, ArrayList)' passes 'StringComparison.InvariantCulture' as the 'StringComparison' parameter to 'string.StartsWith(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OracleDataApi+ColumnTypeInfo" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'OracleDataApi.ColumnTypeInfo'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Size" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'OracleDataApi.ColumnTypeInfo.Size' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Type" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'OracleDataApi.ColumnTypeInfo.Type' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OracleDataProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sitecore.Diagnostics.Log.Fatal(System.String,System.Object)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="72">Method 'OracleDataProvider.OracleDataProvider(string)' passes a literal string as parameter 'message' of a call to 'Log.Fatal(string, object)'. Retrieve the following string(s) from a resource table instead: "Oracle provider error. Proper license is absent: ".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="70">Modify 'OracleDataProvider.OracleDataProvider(string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#api" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OracleDataProvider.api' or change the field to one that is an immutable reference type. If the reference type 'OracleDataApi' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'OracleDataProvider.api' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CleanupBlobs(Sitecore.Data.DataProviders.CallContext)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Sitecore.Diagnostics.Assert.IsNotNull(System.Object,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="289">Method 'OracleDataProvider.CleanupBlobs(CallContext)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNull(object, string)'. Retrieve the following string(s) from a resource table instead: "Invalid Data API".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="328">Method 'OracleDataProvider.CleanupBlobs(CallContext)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNull(object, string)'. Retrieve the following string(s) from a resource table instead: "localApi".</Issue>
            </Message>
            <Message Id="localApi" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="328">Correct the spelling of the unrecognized token 'localApi' in the literal '"localApi"'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="295">In externally visible method 'OracleDataProvider.CleanupBlobs(CallContext)', validate parameter 'context' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CleanupTemplateFields(System.String[],Sitecore.Data.DataProviders.CallContext)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Sitecore.Diagnostics.Assert.IsNotNull(System.Object,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="353">Method 'OracleDataProvider.CleanupTemplateFields(string[], CallContext)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNull(object, string)'. Retrieve the following string(s) from a resource table instead: "Invalid Data API".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="362">Method 'OracleDataProvider.CleanupTemplateFields(string[], CallContext)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNull(object, string)'. Retrieve the following string(s) from a resource table instead: "localApi".</Issue>
            </Message>
            <Message Id="localApi" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="362">Correct the spelling of the unrecognized token 'localApi' in the literal '"localApi"'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="371">In externally visible method 'OracleDataProvider.CleanupTemplateFields(string[], CallContext)', validate parameter 'tables' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="356">In externally visible method 'OracleDataProvider.CleanupTemplateFields(string[], CallContext)', validate parameter 'context' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Descendants_ItemCreated(Sitecore.Data.ID,Sitecore.Data.ID)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="427">Modify 'OracleDataProvider.Descendants_ItemCreated(ID, ID)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="399">In externally visible method 'OracleDataProvider.Descendants_ItemCreated(ID, ID)', validate parameter 'parentId' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBlobSize(System.Guid)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="Sitecore.Diagnostics.Assert.IsNotNull(System.Object,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="924">Method 'OracleDataProvider.GetBlobSize(Guid)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNull(object, string)'. Retrieve the following string(s) from a resource table instead: "sum".</Issue>
            </Message>
            <Message Id="Sitecore.Diagnostics.Assert.IsTrue(System.Boolean,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="925">Method 'OracleDataProvider.GetBlobSize(Guid)' passes a literal string as parameter 'message' of a call to 'Assert.IsTrue(bool, string)'. Retrieve the following string(s) from a resource table instead: "sum".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetClobBigString(Sitecore.Data.Items.FieldChange)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Clob" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="912">Correct the spelling of 'Clob' in member name 'OracleDataProvider.GetClobBigString(FieldChange)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="912">Replace the call to 'string.operator !=(string, string)' in 'OracleDataProvider.GetClobBigString(FieldChange)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="912">In externally visible method 'OracleDataProvider.GetClobBigString(FieldChange)', validate parameter 'change' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetItemsInWorkflowState(Sitecore.Workflows.WorkflowInfo,Sitecore.Data.DataProviders.CallContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="192">In externally visible method 'OracleDataProvider.GetItemsInWorkflowState(WorkflowInfo, CallContext)', validate parameter 'info' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetResolverSql(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="509">In method 'OracleDataProvider.GetResolverSql(string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadItemFields(System.String,System.String,System.Object[],Sitecore.Collections.SafeDictionary`2&lt;Sitecore.Data.ID,Sitecore.Data.DataProviders.PrefetchData&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Sitecore.Diagnostics.Assert.IsNotNull(System.Object,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="551">Method 'OracleDataProvider.LoadItemFields(string, string, object[], SafeDictionary&lt;ID, PrefetchData&gt;)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNull(object, string)'. Retrieve the following string(s) from a resource table instead: "OracleDataProvider.Api is not OracleDataApi.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="576">Method 'OracleDataProvider.LoadItemFields(string, string, object[], SafeDictionary&lt;ID, PrefetchData&gt;)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNull(object, string)'. Retrieve the following string(s) from a resource table instead: "localApi".</Issue>
            </Message>
            <Message Id="OracleDataApi" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="551">Correct the spelling of the unrecognized token 'OracleDataApi' in the literal '"OracleDataProvider.Api is not OracleDataApi."'.</Issue>
            </Message>
            <Message Id="OracleDataProvider" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="551">Correct the spelling of the unrecognized token 'OracleDataProvider' in the literal '"OracleDataProvider.Api is not OracleDataApi."'.</Issue>
            </Message>
            <Message Id="localApi" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="576">Correct the spelling of the unrecognized token 'localApi' in the literal '"localApi"'.</Issue>
            </Message>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="563">In externally visible method 'OracleDataProvider.LoadItemFields(string, string, object[], SafeDictionary&lt;ID, PrefetchData&gt;)', validate parameter 'prefetchData' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OpenBlobStream(System.Guid,System.Int64)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="952">In method 'OracleDataProvider.OpenBlobStream(Guid, long)', call System.IDisposable.Dispose on object 'stream' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="986">Object 'reader' can be disposed more than once in method 'OracleDataProvider.OpenBlobStream(Guid, long)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 986</Issue>
            </Message>
            <Message Id="Sitecore.Diagnostics.Log.Error(System.String,System.Exception,System.Object)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="984">Method 'OracleDataProvider.OpenBlobStream(Guid, long)' passes a literal string as parameter 'message' of a call to 'Log.Error(string, Exception, object)'. Retrieve the following string(s) from a resource table instead: "Error reading blob stream (blob id: , )".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="991">Method 'OracleDataProvider.OpenBlobStream(Guid, long)' passes a literal string as parameter 'message' of a call to 'Log.Error(string, Exception, object)'. Retrieve the following string(s) from a resource table instead: "Error reading blob stream (blob id: , )".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="980">Modify 'OracleDataProvider.OpenBlobStream(Guid, long)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="989">Modify 'OracleDataProvider.OpenBlobStream(Guid, long)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="blobSize" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="940">Parameter 'blobSize' of 'OracleDataProvider.OpenBlobStream(Guid, long)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RebuildDescendants()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="624">Modify 'OracleDataProvider.RebuildDescendants()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemovePropertyCore(System.String,System.Boolean,Sitecore.Data.DataProviders.CallContext)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="641">In member 'OracleDataProvider.RemovePropertyCore(string, bool, CallContext)', change parameter name 'name' to 'propertyName' in order to match the identifier as it has been declared in 'SqlDataProvider.RemovePropertyCore(string, bool, CallContext)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ResolveNames(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="669">In method 'OracleDataProvider.ResolveNames(string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="669">In externally visible method 'OracleDataProvider.ResolveNames(string)', validate parameter 'itemName' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateClobValue(Sitecore.Data.Items.FieldChange,System.String,System.Object[])" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Sitecore.Diagnostics.Assert.IsNotNull(System.Object,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="883">Method 'OracleDataProvider.UpdateClobValue(FieldChange, string, params object[])' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNull(object, string)'. Retrieve the following string(s) from a resource table instead: "Invalid Data API".</Issue>
            </Message>
            <Message Id="Clob" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="880">Correct the spelling of 'Clob' in member name 'OracleDataProvider.UpdateClobValue(FieldChange, string, params object[])' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="880">Replace the call to 'string.operator !=(string, string)' in 'OracleDataProvider.UpdateClobValue(FieldChange, string, params object[])' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="880">In externally visible method 'OracleDataProvider.UpdateClobValue(FieldChange, string, params object[])', validate parameter 'change' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteSharedField(Sitecore.Data.ID,Sitecore.Data.Items.FieldChange,System.DateTime,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="729">In externally visible method 'OracleDataProvider.WriteSharedField(ID, FieldChange, DateTime, bool)', validate parameter 'change' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteUnversionedField(Sitecore.Data.ID,Sitecore.Data.Items.FieldChange,System.DateTime,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="778">In externally visible method 'OracleDataProvider.WriteUnversionedField(ID, FieldChange, DateTime, bool)', validate parameter 'change' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteVersionedField(Sitecore.Data.ID,Sitecore.Data.Items.FieldChange,System.DateTime,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="837">In externally visible method 'OracleDataProvider.WriteVersionedField(ID, FieldChange, DateTime, bool)', validate parameter 'change' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OracleDataProvider+FieldSharingConverter" Kind="Class" Accessibility="Family" ExternallyVisible="True">
         <Members>
          <Member Name="#MoveDataToSharedFromUnversioned(Sitecore.Data.ID,Sitecore.Data.ID)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="1088">In member 'OracleDataProvider.FieldSharingConverter.MoveDataToSharedFromUnversioned(ID, ID)', change parameter name 'fieldID' to 'fieldId' in order to match the identifier as it has been declared in 'SqlDataProvider.FieldSharingConverter.MoveDataToSharedFromUnversioned(ID, ID)'.</Issue>
            </Message>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="1088">In member 'OracleDataProvider.FieldSharingConverter.MoveDataToSharedFromUnversioned(ID, ID)', change parameter name 'itemID' to 'itemId' in order to match the identifier as it has been declared in 'SqlDataProvider.FieldSharingConverter.MoveDataToSharedFromUnversioned(ID, ID)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MoveDataToSharedFromVersioned(Sitecore.Data.ID,Sitecore.Data.ID)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="1113">In member 'OracleDataProvider.FieldSharingConverter.MoveDataToSharedFromVersioned(ID, ID)', change parameter name 'fieldID' to 'fieldId' in order to match the identifier as it has been declared in 'SqlDataProvider.FieldSharingConverter.MoveDataToSharedFromVersioned(ID, ID)'.</Issue>
            </Message>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="1113">In member 'OracleDataProvider.FieldSharingConverter.MoveDataToSharedFromVersioned(ID, ID)', change parameter name 'itemID' to 'itemId' in order to match the identifier as it has been declared in 'SqlDataProvider.FieldSharingConverter.MoveDataToSharedFromVersioned(ID, ID)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MoveDataToUnversionedFromShared(Sitecore.Data.ID,Sitecore.Data.ID)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="1141">In member 'OracleDataProvider.FieldSharingConverter.MoveDataToUnversionedFromShared(ID, ID)', change parameter name 'fieldID' to 'fieldId' in order to match the identifier as it has been declared in 'SqlDataProvider.FieldSharingConverter.MoveDataToUnversionedFromShared(ID, ID)'.</Issue>
            </Message>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="1141">In member 'OracleDataProvider.FieldSharingConverter.MoveDataToUnversionedFromShared(ID, ID)', change parameter name 'itemID' to 'itemId' in order to match the identifier as it has been declared in 'SqlDataProvider.FieldSharingConverter.MoveDataToUnversionedFromShared(ID, ID)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MoveDataToUnversionedFromVersioned(Sitecore.Data.ID,Sitecore.Data.ID)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="1180">In member 'OracleDataProvider.FieldSharingConverter.MoveDataToUnversionedFromVersioned(ID, ID)', change parameter name 'fieldID' to 'fieldId' in order to match the identifier as it has been declared in 'SqlDataProvider.FieldSharingConverter.MoveDataToUnversionedFromVersioned(ID, ID)'.</Issue>
            </Message>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="1180">In member 'OracleDataProvider.FieldSharingConverter.MoveDataToUnversionedFromVersioned(ID, ID)', change parameter name 'itemID' to 'itemId' in order to match the identifier as it has been declared in 'SqlDataProvider.FieldSharingConverter.MoveDataToUnversionedFromVersioned(ID, ID)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MoveDataToVersionedFromShared(Sitecore.Data.ID,Sitecore.Data.ID)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="1216">In member 'OracleDataProvider.FieldSharingConverter.MoveDataToVersionedFromShared(ID, ID)', change parameter name 'fieldID' to 'fieldId' in order to match the identifier as it has been declared in 'SqlDataProvider.FieldSharingConverter.MoveDataToVersionedFromShared(ID, ID)'.</Issue>
            </Message>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="1216">In member 'OracleDataProvider.FieldSharingConverter.MoveDataToVersionedFromShared(ID, ID)', change parameter name 'itemID' to 'itemId' in order to match the identifier as it has been declared in 'SqlDataProvider.FieldSharingConverter.MoveDataToVersionedFromShared(ID, ID)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MoveDataToVersionedFromUnversioned(Sitecore.Data.ID,Sitecore.Data.ID)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="1270">In member 'OracleDataProvider.FieldSharingConverter.MoveDataToVersionedFromUnversioned(ID, ID)', change parameter name 'fieldID' to 'fieldId' in order to match the identifier as it has been declared in 'SqlDataProvider.FieldSharingConverter.MoveDataToVersionedFromUnversioned(ID, ID)'.</Issue>
            </Message>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataProvider.cs" Line="1270">In member 'OracleDataProvider.FieldSharingConverter.MoveDataToVersionedFromUnversioned(ID, ID)', change parameter name 'itemID' to 'itemId' in order to match the identifier as it has been declared in 'SqlDataProvider.FieldSharingConverter.MoveDataToVersionedFromUnversioned(ID, ID)'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OracleDataReader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ProvideObsoleteAttributeMessage" Category="Microsoft.Design" CheckId="CA1041" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">Provide a message for the ObsoleteAttribute that marks 'OracleDataReader'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetValues(System.Object[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleDataReader.cs" Line="329">In externally visible method 'OracleDataReader.GetValues(object[])', validate parameter 'values' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OracleHelper" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#IsNClobType(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' has a cyclomatic complexity of 30. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message Id="System.String.Compare(System.String,System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="57">'OracleHelper.IsNClobType(string, string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PostProcessDataTablesOnLoad(System.Collections.Generic.IEnumerable`1&lt;System.Data.DataTable&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="15">'OracleHelper.PostProcessDataTablesOnLoad(IEnumerable&lt;DataTable&gt;)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RestoreRowState(System.Data.DataRow,System.Data.DataRowState)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleHelper.cs" Line="43">'OracleHelper.RestoreRowState(DataRow, DataRowState)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OracleIDTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
           <Issue Name="TypeAbbreviation" Certainty="85" Level="Error">Correct the casing of 'ID' in type name 'OracleIDTable' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="OracleLinkDatabase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#_dataApi" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OracleLinkDatabase._dataApi' or change the field to one that is an immutable reference type. If the reference type 'SqlDataApi' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHTMLReferersDeep(Sitecore.Data.Items.Item)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleLinkDatabase.cs" Line="527">'OracleLinkDatabase.GetHTMLReferersDeep(Item)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetString(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Sitecore.Diagnostics.Log.Warn(System.String,System.Object)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleLinkDatabase.cs" Line="331">Method 'OracleLinkDatabase.GetString(string, int)' passes a literal string as parameter 'message' of a call to 'Log.Warn(string, object)'. Retrieve the following string(s) from a resource table instead: "A string had to be truncated before being written to the link database.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleLinkDatabase.cs" Line="332">Method 'OracleLinkDatabase.GetString(string, int)' passes a literal string as parameter 'message' of a call to 'Log.Warn(string, object)'. Retrieve the following string(s) from a resource table instead: "Original value: \', \'.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleLinkDatabase.cs" Line="333">Method 'OracleLinkDatabase.GetString(string, int)' passes a literal string as parameter 'message' of a call to 'Log.Warn(string, object)'. Retrieve the following string(s) from a resource table instead: "Truncated value: \', \'.".</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleLinkDatabase.cs" Line="324">In externally visible method 'OracleLinkDatabase.GetString(string, int)', validate parameter 'value' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OracleTaskDatabase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#_api" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OracleTaskDatabase._api' or change the field to one that is an immutable reference type. If the reference type 'OracleDataApi' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'OracleTaskDatabase._api' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateTask(System.String,System.DateTime)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleTaskDatabase.cs" Line="246">The 'this' parameter (or 'Me' in Visual Basic) of 'OracleTaskDatabase.CreateTask(string, DateTime)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoveItemTasks(Sitecore.Data.Items.Item)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleTaskDatabase.cs" Line="204">In externally visible method 'OracleTaskDatabase.RemoveItemTasks(Item)', validate parameter 'item' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OracleTransactionScope" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'OracleTransactionScope' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="NotCalled" Certainty="75" Level="CriticalWarning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleTransactionScope.cs" Line="104">Change 'OracleTransactionScope.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleTransactionScope.cs" Line="104">Modify 'OracleTransactionScope.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PopTransaction()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data" File="OracleTransactionScope.cs" Line="139">The 'this' parameter (or 'Me' in Visual Basic) of 'OracleTransactionScope.PopTransaction()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Scripts+AnalyticsClass" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Scripts.AnalyticsClass'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Scripts+AnalyticsClass+LookupClass" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Scripts.AnalyticsClass.LookupClass'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Sitecore.Data.Oracle.Analytics">
       <Types>
        <Type Name="AnalyticsDataApi" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'AnalyticsDataApi' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="OracleDataAdapterProvider" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'OracleDataAdapterProvider' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="OracleLookup" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'OracleLookup' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="OracleVisitorClassification" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'OracleVisitorClassification' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Sitecore.Data.Oracle.Analytics.Automation">
       <Types>
        <Type Name="OracleAutomationProvider" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'OracleAutomationProvider' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Sitecore.Data.Oracle.Analytics.Reports">
       <Types>
        <Type Name="OracleReportProvider" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'OracleReportProvider' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Sitecore.Data.Oracle.Analytics.Stimulsoft">
       <Types>
        <Type Name="SqlDbTypeToOracleDbTypeConverter" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'SqlDbTypeToOracleDbTypeConverter' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Sitecore.Data.Oracle.Archiving">
       <Types>
        <Type Name="OracleArchive" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateDataApi()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ConnectionStringName" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Archiving" File="OracleArchive.cs" Line="43">Correct the spelling of the unrecognized token 'ConnectionStringName' in the literal '"SqlArchive can only be used for databases with a valid ConnectionStringName. Dat..."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Archiving" File="OracleArchive.cs" Line="50">Correct the spelling of the unrecognized token 'ConnectionStringName' in the literal '"SqlArchive can only be used for databases with a valid ConnectionStringName. Dat..."'.</Issue>
            </Message>
            <Message Id="SqlArchive" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Archiving" File="OracleArchive.cs" Line="43">Correct the spelling of the unrecognized token 'SqlArchive' in the literal '"SqlArchive can only be used for databases with a valid ConnectionStringName. Dat..."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Archiving" File="OracleArchive.cs" Line="50">Correct the spelling of the unrecognized token 'SqlArchive' in the literal '"SqlArchive can only be used for databases with a valid ConnectionStringName. Dat..."'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OracleArchiveProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'OracleArchiveProvider' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'ProviderBase'</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Sitecore.Data.Oracle.Eventing">
       <Types>
        <Type Name="OracleEventQueue" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="CriticalError">Rename type name 'OracleEventQueue' so that it does not end in 'Queue'.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Sitecore.Data.Oracle.FastQuery">
       <Types>
        <Type Name="ComparisonOperatorTranslator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Translate(Sitecore.Data.Query.Opcode,Sitecore.Data.DataProviders.Sql.FastQuery.ITranslationContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\FastQuery" File="ComparisonOperatorTranslator.cs" Line="52">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ComparisonOperatorTranslator.Translate(Opcode, ITranslationContext)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\FastQuery" File="ComparisonOperatorTranslator.cs" Line="37">In externally visible method 'ComparisonOperatorTranslator.Translate(Opcode, ITranslationContext)', validate parameter 'context' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EqualsOperatorTraits" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetOperatorString(Sitecore.Data.DataProviders.Sql.FastQuery.ITranslationContext,Sitecore.Data.DataProviders.Sql.FastQuery.ITranslationContext,System.Boolean&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\FastQuery" File="EqualsOperatorTraits.cs" Line="26">Consider a design that does not require that 'isRegexpLike' be an out parameter.</Issue>
            </Message>
            <Message Id="Regexp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\FastQuery" File="EqualsOperatorTraits.cs" Line="26">In method 'EqualsOperatorTraits.GetOperatorString(ITranslationContext, ITranslationContext, out bool)', correct the spelling of 'Regexp' in parameter name 'isRegexpLike' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\FastQuery" File="EqualsOperatorTraits.cs" Line="26">In externally visible method 'EqualsOperatorTraits.GetOperatorString(ITranslationContext, ITranslationContext, out bool)', validate parameter 'left' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\FastQuery" File="EqualsOperatorTraits.cs" Line="26">In externally visible method 'EqualsOperatorTraits.GetOperatorString(ITranslationContext, ITranslationContext, out bool)', validate parameter 'right' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FieldTranslator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RenderAttribute(System.String,Sitecore.Data.DataProviders.Sql.FastQuery.ITranslationContext)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Sitecore.Diagnostics.Assert.IsNotNull(System.Object,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\FastQuery" File="FieldTranslator.cs" Line="39">Method 'FieldTranslator.RenderAttribute(string, ITranslationContext)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNull(object, string)'. Retrieve the following string(s) from a resource table instead: "Cannot use field accessor outside comparison operators.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\FastQuery" File="FieldTranslator.cs" Line="47">Method 'FieldTranslator.RenderAttribute(string, ITranslationContext)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNull(object, string)'. Retrieve the following string(s) from a resource table instead: "Cannot use field accessor outside comparison operators.".</Issue>
            </Message>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\FastQuery" File="FieldTranslator.cs" Line="36">In method 'FieldTranslator.RenderAttribute(string, ITranslationContext)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
            <Message Id="System.String.EndsWith(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\FastQuery" File="FieldTranslator.cs" Line="44">'FieldTranslator.RenderAttribute(string, ITranslationContext)' passes 'StringComparison.InvariantCulture' as the 'StringComparison' parameter to 'string.EndsWith(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\FastQuery" File="FieldTranslator.cs" Line="36">In externally visible method 'FieldTranslator.RenderAttribute(string, ITranslationContext)', validate parameter 'attribute' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\FastQuery" File="FieldTranslator.cs" Line="39">In externally visible method 'FieldTranslator.RenderAttribute(string, ITranslationContext)', validate parameter 'context' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RenderFieldByName(System.String,Sitecore.Data.DataProviders.Sql.FastQuery.ITranslationContext)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\FastQuery" File="FieldTranslator.cs" Line="68">In method 'FieldTranslator.RenderFieldByName(string, ITranslationContext)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\FastQuery" File="FieldTranslator.cs" Line="68">In externally visible method 'FieldTranslator.RenderFieldByName(string, ITranslationContext)', validate parameter 'fieldName' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\FastQuery" File="FieldTranslator.cs" Line="67">In externally visible method 'FieldTranslator.RenderFieldByName(string, ITranslationContext)', validate parameter 'context' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LiteralOpcodeTranslator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Opcode" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeCompoundWord" Certainty="80" Level="Error">The discrete term 'Opcode' in type name 'LiteralOpcodeTranslator' should be expressed as a compound word, 'OpCode'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#RenderTemplateReference(Sitecore.Data.DataProviders.Sql.FastQuery.ITranslationContext,Sitecore.Data.Query.Literal)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\FastQuery" File="LiteralOpcodeTranslator.cs" Line="73">In method 'LiteralOpcodeTranslator.RenderTemplateReference(ITranslationContext, Literal)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\FastQuery" File="LiteralOpcodeTranslator.cs" Line="76">In externally visible method 'LiteralOpcodeTranslator.RenderTemplateReference(ITranslationContext, Literal)', validate parameter 'context' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\FastQuery" File="LiteralOpcodeTranslator.cs" Line="73">In externally visible method 'LiteralOpcodeTranslator.RenderTemplateReference(ITranslationContext, Literal)', validate parameter 'literal' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Translate(Sitecore.Data.Query.Opcode,Sitecore.Data.DataProviders.Sql.FastQuery.ITranslationContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\FastQuery" File="LiteralOpcodeTranslator.cs" Line="40">In method 'LiteralOpcodeTranslator.Translate(Opcode, ITranslationContext)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\FastQuery" File="LiteralOpcodeTranslator.cs" Line="30">In externally visible method 'LiteralOpcodeTranslator.Translate(Opcode, ITranslationContext)', validate parameter 'context' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NameFieldInfo" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String,Sitecore.Data.DataProviders.Sql.FastQuery.ITranslationContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\FastQuery" File="NameFieldInfo.cs" Line="35">In method 'NameFieldInfo.NameFieldInfo(string, ITranslationContext)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\FastQuery" File="NameFieldInfo.cs" Line="35">In externally visible method 'NameFieldInfo.NameFieldInfo(string, ITranslationContext)', validate parameter 'fieldName' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\FastQuery" File="NameFieldInfo.cs" Line="35">In externally visible method 'NameFieldInfo.NameFieldInfo(string, ITranslationContext)', validate parameter 'context' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_fieldName" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'NameFieldInfo._fieldName' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Sitecore.Data.Oracle.Security">
       <Types>
        <Type Name="OracleAuthorizationProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'OracleAuthorizationProvider' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'ProviderBase'</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#_lock" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'OracleAuthorizationProvider._lock' or change the field to one that is an immutable reference type. If the reference type 'LockSet' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'OracleAuthorizationProvider._lock' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Initialize(System.String,System.Collections.Specialized.NameValueCollection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sitecore.Diagnostics.Assert.IsNotNullOrEmpty(System.String,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Security" File="OracleAuthorizationProvider.cs" Line="57">Method 'OracleAuthorizationProvider.Initialize(string, NameValueCollection)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNullOrEmpty(string, string)'. Retrieve the following string(s) from a resource table instead: "A non-empty connectionStringName must be given in the SqlServerAuthorizationProv...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Security" File="OracleAuthorizationProvider.cs" Line="61">Method 'OracleAuthorizationProvider.Initialize(string, NameValueCollection)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNullOrEmpty(string, string)'. Retrieve the following string(s) from a resource table instead: "Invalid connectionStringName in the SqlServerAuthorizationProvider configuration...".</Issue>
            </Message>
            <Message Id="SqlServerAuthorizationProvider" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Security" File="OracleAuthorizationProvider.cs" Line="57">Correct the spelling of the unrecognized token 'SqlServerAuthorizationProvider' in the literal '"A non-empty connectionStringName must be given in the SqlServerAuthorizationProv..."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Security" File="OracleAuthorizationProvider.cs" Line="61">Correct the spelling of the unrecognized token 'SqlServerAuthorizationProvider' in the literal '"Invalid connectionStringName in the SqlServerAuthorizationProvider configuration..."'.</Issue>
            </Message>
            <Message Id="connectionStringName" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Security" File="OracleAuthorizationProvider.cs" Line="57">Correct the spelling of the unrecognized token 'connectionStringName' in the literal '"A non-empty connectionStringName must be given in the SqlServerAuthorizationProv..."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Security" File="OracleAuthorizationProvider.cs" Line="61">Correct the spelling of the unrecognized token 'connectionStringName' in the literal '"Invalid connectionStringName in the SqlServerAuthorizationProvider configuration..."'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Security" File="OracleAuthorizationProvider.cs" Line="55">In externally visible method 'OracleAuthorizationProvider.Initialize(string, NameValueCollection)', validate parameter 'config' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteAccessRules(Sitecore.Security.AccessControl.ISecurable,Sitecore.Security.AccessControl.AccessRuleCollection)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Security" File="OracleAuthorizationProvider.cs" Line="75">Change 'AccessRuleCollection' in 'OracleAuthorizationProvider.WriteAccessRules(ISecurable, AccessRuleCollection)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OracleMembershipProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'OracleMembershipProvider' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'MembershipProvider', 'ProviderBase'</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#InsertMembershipRecord(System.String,System.String,System.String,System.String,System.String,Sitecore.Data.ID,Sitecore.Data.Security.Accounts.SqlMembershipUser,System.DateTime,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Security" File="OracleMembershipProvider.cs" Line="53">In method 'OracleMembershipProvider.InsertMembershipRecord(string, string, string, string, string, ID, SqlMembershipUser, DateTime, bool)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
            <Message Id="6" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Security" File="OracleMembershipProvider.cs" Line="53">In externally visible method 'OracleMembershipProvider.InsertMembershipRecord(string, string, string, string, string, ID, SqlMembershipUser, DateTime, bool)', validate parameter 'usr' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OracleMembershipUser" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Sitecore.Data.ID,Sitecore.Data.ID,Sitecore.Data.Security.Accounts.SqlMembershipApi)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Security" File="OracleMembershipUser.cs" Line="23">In member 'OracleMembershipUser.OracleMembershipUser(ID, ID, SqlMembershipApi)', correct the casing of 'ID' in parameter name 'applicationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OracleProfileProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'OracleProfileProvider' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'ProfileProvider', 'SettingsProvider', 'ProviderBase'</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="OracleRoleProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'OracleRoleProvider' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'RoleProvider', 'ProviderBase'</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Sitecore.Data.Oracle.Security.Accounts">
       <Types>
        <Type Name="OracleRolesInRolesProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'OracleRolesInRolesProvider' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'ProviderBase'</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Initialize(System.String,System.Collections.Specialized.NameValueCollection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sitecore.Diagnostics.Assert.IsNotNullOrEmpty(System.String,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Security\Accounts" File="OracleRolesInRolesProvider.cs" Line="43">Method 'OracleRolesInRolesProvider.Initialize(string, NameValueCollection)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNullOrEmpty(string, string)'. Retrieve the following string(s) from a resource table instead: "A non-empty connectionStringName must be given in the SqlServerRolesInRolesProvi...".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Security\Accounts" File="OracleRolesInRolesProvider.cs" Line="47">Method 'OracleRolesInRolesProvider.Initialize(string, NameValueCollection)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNullOrEmpty(string, string)'. Retrieve the following string(s) from a resource table instead: "Invalid connectionStringName in the SqlServerRolesInRolesProvider configuration....".</Issue>
            </Message>
            <Message Id="SqlServerRolesInRolesProvider" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Security\Accounts" File="OracleRolesInRolesProvider.cs" Line="43">Correct the spelling of the unrecognized token 'SqlServerRolesInRolesProvider' in the literal '"A non-empty connectionStringName must be given in the SqlServerRolesInRolesProvi..."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Security\Accounts" File="OracleRolesInRolesProvider.cs" Line="47">Correct the spelling of the unrecognized token 'SqlServerRolesInRolesProvider' in the literal '"Invalid connectionStringName in the SqlServerRolesInRolesProvider configuration...."'.</Issue>
            </Message>
            <Message Id="connectionStringName" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Security\Accounts" File="OracleRolesInRolesProvider.cs" Line="43">Correct the spelling of the unrecognized token 'connectionStringName' in the literal '"A non-empty connectionStringName must be given in the SqlServerRolesInRolesProvi..."'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Security\Accounts" File="OracleRolesInRolesProvider.cs" Line="47">Correct the spelling of the unrecognized token 'connectionStringName' in the literal '"Invalid connectionStringName in the SqlServerRolesInRolesProvider configuration...."'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Security\Accounts" File="OracleRolesInRolesProvider.cs" Line="41">In externally visible method 'OracleRolesInRolesProvider.Initialize(string, NameValueCollection)', validate parameter 'config' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Sitecore.Data.Security.Accounts">
       <Types>
        <Type Name="SqlMembershipApi" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CheckArrayParameter(System.String[]&amp;,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="152">Consider a design that does not require that 'param' be a reference parameter.</Issue>
            </Message>
            <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="152">In method 'SqlMembershipApi.CheckArrayParameter(ref string[], bool, bool, bool, int, string)', correct the spelling of 'param' in parameter name 'param' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="152">In method 'SqlMembershipApi.CheckArrayParameter(ref string[], bool, bool, bool, int, string)', correct the spelling of 'param' in parameter name 'paramName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="159">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SqlMembershipApi.CheckArrayParameter(ref string[], bool, bool, bool, int, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="168">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SqlMembershipApi.CheckArrayParameter(ref string[], bool, bool, bool, int, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="Reassigned" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="165">In externally visible method 'SqlMembershipApi.CheckArrayParameter(ref string[], bool, bool, bool, int, string)', validate local variable ''(*param)'', which was reassigned from parameter 'param', before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckParameter(System.String&amp;,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="186">Consider a design that does not require that 'param' be a reference parameter.</Issue>
            </Message>
            <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="186">In method 'SqlMembershipApi.CheckParameter(ref string, bool, bool, bool, int, string)', correct the spelling of 'param' in parameter name 'param' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="186">In method 'SqlMembershipApi.CheckParameter(ref string, bool, bool, bool, int, string)', correct the spelling of 'param' in parameter name 'paramName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="190">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SqlMembershipApi.CheckParameter(ref string, bool, bool, bool, int, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="198">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SqlMembershipApi.CheckParameter(ref string, bool, bool, bool, int, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="208">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SqlMembershipApi.CheckParameter(ref string, bool, bool, bool, int, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="203">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'SqlMembershipApi.CheckParameter(ref string, bool, bool, bool, int, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="Reassigned" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="201">In externally visible method 'SqlMembershipApi.CheckParameter(ref string, bool, bool, bool, int, string)', validate local variable ''(*param)'', which was reassigned from parameter 'param', before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateApplication(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="222">In method 'SqlMembershipApi.CreateApplication(string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="222">In externally visible method 'SqlMembershipApi.CreateApplication(string)', validate parameter 'applicationName' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateRole(System.String,Sitecore.Data.ID)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="241">In member 'SqlMembershipApi.CreateRole(string, ID)', correct the casing of 'ID' in parameter name 'applicationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="251">In method 'SqlMembershipApi.CreateRole(string, ID)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="244">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SqlMembershipApi.CreateRole(string, ID)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="251">In externally visible method 'SqlMembershipApi.CreateRole(string, ID)', validate parameter 'roleName' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateRoleInstance(Sitecore.Data.ID,Sitecore.Data.ID)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="648">In member 'SqlMembershipApi.CreateRoleInstance(ID, ID)', correct the casing of 'ID' in parameter name 'applicationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="648">In member 'SqlMembershipApi.CreateRoleInstance(ID, ID)', correct the casing of 'ID' in parameter name 'roleID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateUser(System.Guid,System.String,Sitecore.Data.ID,System.DateTime,System.Boolean&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="4#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="269">Consider a design that does not require that 'newUserCreated' be an out parameter.</Issue>
            </Message>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="269">In member 'SqlMembershipApi.CreateUser(Guid, string, ID, DateTime, out bool)', correct the casing of 'ID' in parameter name 'applicationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="269">In member 'SqlMembershipApi.CreateUser(Guid, string, ID, DateTime, out bool)', correct the casing of 'ID' in parameter name 'userID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="280">In method 'SqlMembershipApi.CreateUser(Guid, string, ID, DateTime, out bool)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="280">In externally visible method 'SqlMembershipApi.CreateUser(Guid, string, ID, DateTime, out bool)', validate parameter 'userName' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateUserInstance(Sitecore.Data.ID,Sitecore.Data.ID)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="657">In member 'SqlMembershipApi.CreateUserInstance(ID, ID)', correct the casing of 'ID' in parameter name 'applicationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="657">In member 'SqlMembershipApi.CreateUserInstance(ID, ID)', correct the casing of 'ID' in parameter name 'userID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeleteInactiveProfiles(Sitecore.Data.ID,System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="300">In member 'SqlMembershipApi.DeleteInactiveProfiles(ID, ProfileAuthenticationOption, DateTime)', correct the casing of 'ID' in parameter name 'applicationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EncodePassword(System.String,System.Int32,System.String,Sitecore.Data.Security.Accounts.SqlMembershipUser+EncryptPassword)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="331">In method 'SqlMembershipApi.EncodePassword(string, int, string, SqlMembershipUser.EncryptPassword)', call System.IDisposable.Dispose on object 'algorithm' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Sitecore.Diagnostics.Assert.IsNotNull(System.Object,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="332">Method 'SqlMembershipApi.EncodePassword(string, int, string, SqlMembershipUser.EncryptPassword)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNull(object, string)'. Retrieve the following string(s) from a resource table instead: "encryption".</Issue>
            </Message>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="337">In externally visible method 'SqlMembershipApi.EncodePassword(string, int, string, SqlMembershipUser.EncryptPassword)', validate parameter 'encryptPassword' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetApplicationID(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="359">Correct the casing of 'ID' in member name 'SqlMembershipApi.GetApplicationID(string)' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetApplicationID(System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="368">Correct the casing of 'ID' in member name 'SqlMembershipApi.GetApplicationID(string, bool)' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="377">In method 'SqlMembershipApi.GetApplicationID(string, bool)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDeleteInactiveProfilesExpression()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="664">Change 'SqlMembershipApi.GetDeleteInactiveProfilesExpression()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetProfilesForQuery(System.String,System.Object[],System.Int32,System.Int32,System.Int32&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="4#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="455">Consider a design that does not require that 'totalRecords' be an out parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetRoleByName(System.String,Sitecore.Data.ID)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="507">In member 'SqlMembershipApi.GetRoleByName(string, ID)', correct the casing of 'ID' in parameter name 'applicationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="513">In method 'SqlMembershipApi.GetRoleByName(string, ID)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="513">In externally visible method 'SqlMembershipApi.GetRoleByName(string, ID)', validate parameter 'roleName' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUserByID(Sitecore.Data.ID)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="534">Correct the casing of 'ID' in member name 'SqlMembershipApi.GetUserByID(ID)' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="534">In member 'SqlMembershipApi.GetUserByID(ID)', correct the casing of 'ID' in parameter name 'userID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUserByName(System.String,Sitecore.Data.ID)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="564">In member 'SqlMembershipApi.GetUserByName(string, ID)', correct the casing of 'ID' in parameter name 'applicationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="569">In method 'SqlMembershipApi.GetUserByName(string, ID)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="569">In externally visible method 'SqlMembershipApi.GetUserByName(string, ID)', validate parameter 'userName' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UnEncodePassword(System.String,System.Int32,Sitecore.Data.Security.Accounts.SqlMembershipUser+DecryptPassword)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Un" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="601">Correct the casing of 'Un' in member name 'SqlMembershipApi.UnEncodePassword(string, int, SqlMembershipUser.DecryptPassword)' by changing it to 'UN'.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="611">In externally visible method 'SqlMembershipApi.UnEncodePassword(string, int, SqlMembershipUser.DecryptPassword)', validate parameter 'decryptPassword' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValidateParameter(System.String&amp;,System.Boolean,System.Boolean,System.Boolean,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="629">Consider a design that does not require that 'param' be a reference parameter.</Issue>
            </Message>
            <Message Id="param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="629">In method 'SqlMembershipApi.ValidateParameter(ref string, bool, bool, bool, int)', correct the spelling of 'param' in parameter name 'param' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="Reassigned" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipApi.cs" Line="635">In externally visible method 'SqlMembershipApi.ValidateParameter(ref string, bool, bool, bool, int)', validate local variable ''(*param)'', which was reassigned from parameter 'param', before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SqlMembershipProviderBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'SqlMembershipProviderBase' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'MembershipProvider', 'ProviderBase'</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#_api" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SqlMembershipProviderBase._api' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_applicationID" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SqlMembershipProviderBase._applicationID' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_enablePasswordReset" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SqlMembershipProviderBase._enablePasswordReset' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_enablePasswordRetrieval" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SqlMembershipProviderBase._enablePasswordRetrieval' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_maxInvalidPasswordAttempts" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SqlMembershipProviderBase._maxInvalidPasswordAttempts' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_minRequiredNonalphanumericCharacters" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SqlMembershipProviderBase._minRequiredNonalphanumericCharacters' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Nonalphanumeric" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Nonalphanumeric' in member name 'SqlMembershipProviderBase._minRequiredNonalphanumericCharacters' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_minRequiredPasswordLength" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SqlMembershipProviderBase._minRequiredPasswordLength' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_passwordAttemptWindow" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SqlMembershipProviderBase._passwordAttemptWindow' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_passwordFormat" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SqlMembershipProviderBase._passwordFormat' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_passwordStrengthRegularExpression" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SqlMembershipProviderBase._passwordStrengthRegularExpression' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_requiresQuestionAndAnswer" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SqlMembershipProviderBase._requiresQuestionAndAnswer' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_requiresUniqueEmail" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SqlMembershipProviderBase._requiresUniqueEmail' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ApplicationName" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_ApplicationName(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="ApplicationName" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="88">Correct the spelling of the unrecognized token 'ApplicationName' in the literal '"ApplicationName exceeds "'.</Issue>
              </Message>
              <Message Id="System.String.Compare(System.String,System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
               <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="91">'SqlMembershipProviderBase.ApplicationName.set(string)' passes 'StringComparison.InvariantCulture' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
              </Message>
              <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="86">In externally visible method 'SqlMembershipProviderBase.ApplicationName.set(string)', validate parameter 'value' before using it.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ChangePassword(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sitecore.Diagnostics.Assert.IsFalse(System.Boolean,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="311">Method 'SqlMembershipProviderBase.ChangePassword(string, string, string)' passes a literal string as parameter 'message' of a call to 'Assert.IsFalse(bool, string)'. Retrieve the following string(s) from a resource table instead: "Membership_password_too_long".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="289">Method 'SqlMembershipProviderBase.ChangePassword(string, string, string)' passes a literal string as parameter 'message' of a call to 'Assert.IsFalse(bool, string)'. Retrieve the following string(s) from a resource table instead: "password too short".</Issue>
            </Message>
            <Message Id="Membershippasswordtoolong" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="311">Correct the spelling of the unrecognized token 'Membershippasswordtoolong' in the literal '"Membership_password_too_long"'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="302">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SqlMembershipProviderBase.ChangePassword(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="385">In method 'SqlMembershipProviderBase.ChangePasswordQuestionAndAnswer(string, string, string, string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
            <Message Id="2#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="359">In member 'SqlMembershipProviderBase.ChangePasswordQuestionAndAnswer(string, string, string, string)', change parameter name 'newPwdQuestion' to 'newPasswordQuestion' in order to match the identifier as it has been declared in 'MembershipProvider.ChangePasswordQuestionAndAnswer(string, string, string, string)'.</Issue>
            </Message>
            <Message Id="3#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="359">In member 'SqlMembershipProviderBase.ChangePasswordQuestionAndAnswer(string, string, string, string)', change parameter name 'newPwdAnswer' to 'newPasswordAnswer' in order to match the identifier as it has been declared in 'MembershipProvider.ChangePasswordQuestionAndAnswer(string, string, string, string)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Constants" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ProvideObsoleteAttributeMessage" Category="Microsoft.Design" CheckId="CA1041" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="238">Provide a message for the ObsoleteAttribute that marks 'SqlMembershipProviderBase.Constants'.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_Constants()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="238">'SqlMembershipProviderBase.Constants.get()' creates an exception of type 'NotImplementedException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="424">'SqlMembershipProviderBase.CreateUser(string, string, string, string, string, bool, object, out MembershipCreateStatus)' has a cyclomatic complexity of 32. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="Sitecore.Diagnostics.Assert.IsNotNull(System.Object,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="572">Method 'SqlMembershipProviderBase.CreateUser(string, string, string, string, string, bool, object, out MembershipCreateStatus)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNull(object, string)'. Retrieve the following string(s) from a resource table instead: "user".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="547">Modify 'SqlMembershipProviderBase.CreateUser(string, string, string, string, string, bool, object, out MembershipCreateStatus)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="610">Modify 'SqlMembershipProviderBase.CreateUser(string, string, string, string, string, bool, object, out MembershipCreateStatus)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message Id="Sitecore.Data.ID.TryParse(System.Object,Sitecore.Data.ID@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="562">'SqlMembershipProviderBase.CreateUser(string, string, string, string, string, bool, object, out MembershipCreateStatus)' calls 'ID.TryParse(object, out ID)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="455">In method 'SqlMembershipProviderBase.CreateUser(string, string, string, string, string, bool, object, out MembershipCreateStatus)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="694">In method 'SqlMembershipProviderBase.FindUsersByEmail(string, int, int, out int)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindUsersByName(System.String,System.Int32,System.Int32,System.Int32&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="757">In method 'SqlMembershipProviderBase.FindUsersByName(string, int, int, out int)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateSalt()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="251">In method 'SqlMembershipProviderBase.GenerateSalt()', call System.IDisposable.Dispose on object 'new RNGCryptoServiceProvider()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPassword(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="870">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SqlMembershipProviderBase.GetPassword(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="876">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SqlMembershipProviderBase.GetPassword(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUserNameByEmail(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="969">In method 'SqlMembershipProviderBase.GetUserNameByEmail(string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Initialize(System.String,System.Collections.Specialized.NameValueCollection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sitecore.Diagnostics.Assert.IsFalse(System.Boolean,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="1058">Method 'SqlMembershipProviderBase.Initialize(string, NameValueCollection)' passes a literal string as parameter 'message' of a call to 'Assert.IsFalse(bool, string)'. Retrieve the following string(s) from a resource table instead: "applicationName".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="1054">Method 'SqlMembershipProviderBase.Initialize(string, NameValueCollection)' passes a literal string as parameter 'message' of a call to 'Assert.IsFalse(bool, string)'. Retrieve the following string(s) from a resource table instead: "incorrect parameters".</Issue>
            </Message>
            <Message Id="Sitecore.Diagnostics.Assert.IsNotNull(System.Object,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="1000">Method 'SqlMembershipProviderBase.Initialize(string, NameValueCollection)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNull(object, string)'. Retrieve the following string(s) from a resource table instead: "config".</Issue>
            </Message>
            <Message Id="Sitecore.Diagnostics.Assert.IsNotNullOrEmpty(System.String,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="1066">Method 'SqlMembershipProviderBase.Initialize(string, NameValueCollection)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNullOrEmpty(string, string)'. Retrieve the following string(s) from a resource table instead: "passwordFormat".</Issue>
            </Message>
            <Message Id="System.Text.RegularExpressions.Regex" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="1045">'SqlMembershipProviderBase.Initialize(string, NameValueCollection)' creates a new instance of 'Regex' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message Id="Providerbadpasswordformat" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="1082">Correct the spelling of the unrecognized token 'Providerbadpasswordformat' in the literal '"Provider_bad_password_format"'.</Issue>
            </Message>
            <Message Id="Providercannotretrievehashedpassword" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="1087">Correct the spelling of the unrecognized token 'Providercannotretrievehashedpassword' in the literal '"Provider_can_not_retrieve_hashed_password"'.</Issue>
            </Message>
            <Message Id="applicationName" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="1058">Correct the spelling of the unrecognized token 'applicationName' in the literal '"applicationName"'.</Issue>
            </Message>
            <Message Id="passwordFormat" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="1066">Correct the spelling of the unrecognized token 'passwordFormat' in the literal '"passwordFormat"'.</Issue>
            </Message>
            <Message Id="System.String.Compare(System.String,System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="1068">'SqlMembershipProviderBase.Initialize(string, NameValueCollection)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="1072">'SqlMembershipProviderBase.Initialize(string, NameValueCollection)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="1076">'SqlMembershipProviderBase.Initialize(string, NameValueCollection)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="1007">In externally visible method 'SqlMembershipProviderBase.Initialize(string, NameValueCollection)', validate parameter 'config' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InsertMembershipRecord(System.String,System.String,System.String,System.String,System.String,Sitecore.Data.ID,Sitecore.Data.Security.Accounts.SqlMembershipUser,System.DateTime,System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="1225">In member 'SqlMembershipProviderBase.InsertMembershipRecord(string, string, string, string, string, ID, SqlMembershipUser, DateTime, bool)', correct the casing of 'ID' in parameter name 'applicationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message Id="usr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="1225">In method 'SqlMembershipProviderBase.InsertMembershipRecord(string, string, string, string, string, ID, SqlMembershipUser, DateTime, bool)', correct the spelling of 'usr' in parameter name 'usr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="1237">In method 'SqlMembershipProviderBase.InsertMembershipRecord(string, string, string, string, string, ID, SqlMembershipUser, DateTime, bool)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
            <Message Id="6" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="1237">In externally visible method 'SqlMembershipProviderBase.InsertMembershipRecord(string, string, string, string, string, ID, SqlMembershipUser, DateTime, bool)', validate parameter 'usr' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsUniqueEmail(Sitecore.Data.ID,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="1255">In member 'SqlMembershipProviderBase.IsUniqueEmail(ID, string)', correct the casing of 'ID' in parameter name 'applicationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="1259">In method 'SqlMembershipProviderBase.IsUniqueEmail(ID, string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ResetPassword(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="enablePasswordReset" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="1116">Correct the spelling of the unrecognized token 'enablePasswordReset' in the literal '"This provider is not configured to allow password resets. To enable password res..."'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UnlockUser(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipProviderBase.cs" Line="1141">In member 'SqlMembershipProviderBase.UnlockUser(string)', change parameter name 'username' to 'userName' in order to match the identifier as it has been declared in 'MembershipProvider.UnlockUser(string)'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SqlMembershipProviderBase+MembershipConstants" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ProvideObsoleteAttributeMessage" Category="Microsoft.Design" CheckId="CA1041" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">Provide a message for the ObsoleteAttribute that marks 'SqlMembershipProviderBase.MembershipConstants'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SqlMembershipRole" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Sitecore.Data.ID,Sitecore.Data.ID,Sitecore.Data.Security.Accounts.SqlMembershipApi)" Kind="Method" Static="False" Accessibility="FamilyOrAssembly" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipRole.cs" Line="36">In member 'SqlMembershipRole.SqlMembershipRole(ID, ID, SqlMembershipApi)', correct the casing of 'ID' in parameter name 'applicationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_api" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SqlMembershipRole._api' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_applicationID" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SqlMembershipRole._applicationID' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_id" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SqlMembershipRole._id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ApplicationID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipRole.cs" Line="55">Correct the casing of 'ID' in member name 'SqlMembershipRole.ApplicationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipRole.cs" Line="67">Correct the casing of 'ID' in member name 'SqlMembershipRole.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SqlMembershipUser" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Sitecore.Data.ID,Sitecore.Data.ID,Sitecore.Data.Security.Accounts.SqlMembershipApi)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="39">In member 'SqlMembershipUser.SqlMembershipUser(ID, ID, SqlMembershipApi)', correct the casing of 'ID' in parameter name 'applicationID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_api" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SqlMembershipUser._api' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_applicationID" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SqlMembershipUser._applicationID' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_id" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SqlMembershipUser._id' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckPassword(System.String,System.Int32,System.Int32,System.Boolean,System.Boolean,System.String&amp;,System.Int32&amp;,Sitecore.Data.Security.Accounts.SqlMembershipUser+EncryptPassword)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="5#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="106">Consider a design that does not require that 'salt' be an out parameter.</Issue>
            </Message>
            <Message Id="6#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="106">Consider a design that does not require that 'passwordFormat' be an out parameter.</Issue>
            </Message>
            <Message Id="System.String.Equals(System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="118">'SqlMembershipUser.CheckPassword(string, int, int, bool, bool, out string, out int, SqlMembershipUser.EncryptPassword)' passes 'StringComparison.InvariantCulture' as the 'StringComparison' parameter to 'string.Equals(string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="106">In member 'SqlMembershipUser.CheckPassword(string, int, int, bool, bool, out string, out int, SqlMembershipUser.EncryptPassword)', replace the term 'Login' in parameter name 'updateLastLoginActivityDate' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCheckPasswordInfoExpression()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="679">Change 'SqlMembershipUser.GetCheckPasswordInfoExpression()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetEncodedPasswordAnswer(System.String,Sitecore.Data.Security.Accounts.SqlMembershipUser+EncryptPassword)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="720">In method 'SqlMembershipUser.GetEncodedPasswordAnswer(string, SqlMembershipUser.EncryptPassword)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMembershipInfoExpression()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="727">Change 'SqlMembershipUser.GetMembershipInfoExpression()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPasswordFromDB(System.String,System.Boolean,System.Int32,System.Int32,System.Int32&amp;,System.Int32&amp;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="4#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="750">Consider a design that does not require that 'passwordFormat' be an out parameter.</Issue>
            </Message>
            <Message Id="5#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="750">Consider a design that does not require that 'status' be an out parameter.</Issue>
            </Message>
            <Message Id="System.String.Compare(System.String,System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="791">'SqlMembershipUser.GetPasswordFromDB(string, bool, int, int, out int, out int)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPasswordFromDBExpression()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="836">Change 'SqlMembershipUser.GetPasswordFromDBExpression()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPasswordInfoExpression()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="849">Change 'SqlMembershipUser.GetPasswordInfoExpression()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPasswordWithFormat(System.Boolean,System.Int32&amp;,System.String&amp;,System.Int32&amp;,System.String&amp;,System.Int32&amp;,System.Int32&amp;,System.Boolean&amp;,System.DateTime&amp;,System.DateTime&amp;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="869">Consider a design that does not require that 'status' be an out parameter.</Issue>
            </Message>
            <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="869">Consider a design that does not require that 'password' be an out parameter.</Issue>
            </Message>
            <Message Id="3#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="869">Consider a design that does not require that 'passwordFormat' be an out parameter.</Issue>
            </Message>
            <Message Id="4#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="869">Consider a design that does not require that 'passwordSalt' be an out parameter.</Issue>
            </Message>
            <Message Id="5#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="869">Consider a design that does not require that 'failedPasswordAttemptCount' be an out parameter.</Issue>
            </Message>
            <Message Id="6#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="869">Consider a design that does not require that 'failedPasswordAnswerAttemptCount' be an out parameter.</Issue>
            </Message>
            <Message Id="7#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="869">Consider a design that does not require that 'isApproved' be an out parameter.</Issue>
            </Message>
            <Message Id="8#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="869">Consider a design that does not require that 'lastLoginDate' be an out parameter.</Issue>
            </Message>
            <Message Id="9#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="869">Consider a design that does not require that 'lastActivityDate' be an out parameter.</Issue>
            </Message>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="869">In member 'SqlMembershipUser.GetPasswordWithFormat(bool, out int, out string, out int, out string, out int, out int, out bool, out DateTime, out DateTime)', replace the term 'Login' in parameter name 'lastLoginDate' with the preferred alternate 'LogOn'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="869">In member 'SqlMembershipUser.GetPasswordWithFormat(bool, out int, out string, out int, out string, out int, out int, out bool, out DateTime, out DateTime)', replace the term 'Login' in parameter name 'updateLastLoginActivityDate' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPasswordWithFormatExpression()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="918">Change 'SqlMembershipUser.GetPasswordWithFormatExpression()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUnlockExpression()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="931">Change 'SqlMembershipUser.GetUnlockExpression()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUpdateMembershipRetrievalInfoExpression()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="944">Change 'SqlMembershipUser.GetUpdateMembershipRetrievalInfoExpression()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUpdatePasswordAttemptInfoExpression()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="957">Change 'SqlMembershipUser.GetUpdatePasswordAttemptInfoExpression()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUserCountWithEqualEmails(System.Object)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Convert.ToInt64(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="987">Because the behavior of 'Convert.ToInt64(object)' could vary based on the current user's locale settings, replace this call in 'SqlMembershipUser.GetUserCountWithEqualEmails(object)' with a call to 'Convert.ToInt64(object, IFormatProvider)'. If the result of 'Convert.ToInt64(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="79">Correct the casing of 'ID' in member name 'SqlMembershipUser.ID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ResetPassword(System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,Sitecore.Data.Security.Accounts.SqlMembershipUser+EncryptPassword,Sitecore.Data.Security.Accounts.SqlMembershipUser+OnValidatingPassword)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="376">In method 'SqlMembershipUser.ResetPassword(string, string, bool, int, int, int, int, SqlMembershipUser.EncryptPassword, SqlMembershipUser.OnValidatingPassword)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
            <Message Id="8" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="386">In externally visible method 'SqlMembershipUser.ResetPassword(string, string, bool, int, int, int, int, SqlMembershipUser.EncryptPassword, SqlMembershipUser.OnValidatingPassword)', validate parameter 'onValidatingPassword' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateLastLoginDate(System.DateTime)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="1027">Replace the term 'Login' in member name 'SqlMembershipUser.UpdateLastLoginDate(DateTime)' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateMembershipData(System.Object,System.String,System.String,System.Boolean,System.DateTime)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="1042">In member 'SqlMembershipUser.UpdateMembershipData(object, string, string, bool, DateTime)', replace the term 'Login' in parameter name 'lastLoginDate' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateMembershipInfo(System.Web.Security.MembershipUser,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="537">In method 'SqlMembershipUser.UpdateMembershipInfo(MembershipUser, bool)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="556">In method 'SqlMembershipUser.UpdateMembershipInfo(MembershipUser, bool)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="535">In externally visible method 'SqlMembershipUser.UpdateMembershipInfo(MembershipUser, bool)', validate parameter 'membershipInfo' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateProperties(System.String,System.String,System.Byte[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Convert.ToInt64(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlMembershipUser.cs" Line="579">Because the behavior of 'Convert.ToInt64(object)' could vary based on the current user's locale settings, replace this call in 'SqlMembershipUser.UpdateProperties(string, string, byte[])' with a call to 'Convert.ToInt64(object, IFormatProvider)'. If the result of 'Convert.ToInt64(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SqlMembershipUser+DecryptPassword" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'SqlMembershipUser.DecryptPassword'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SqlMembershipUser+EncryptPassword" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'SqlMembershipUser.EncryptPassword'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SqlMembershipUser+OnValidatingPassword" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'SqlMembershipUser.OnValidatingPassword'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SqlProfileProviderBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'SqlProfileProviderBase' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'ProfileProvider', 'SettingsProvider', 'ProviderBase'</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#_api" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SqlProfileProviderBase._api' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ApplicationName" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_ApplicationName(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="ApplicationName" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="58">Correct the spelling of the unrecognized token 'ApplicationName' in the literal '"ApplicationName exceeds "'.</Issue>
              </Message>
              <Message Id="System.String.Compare(System.String,System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
               <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="61">'SqlProfileProviderBase.ApplicationName.set(string)' passes 'StringComparison.InvariantCultureIgnoreCase' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
              </Message>
              <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="56">In externally visible method 'SqlProfileProviderBase.ApplicationName.set(string)', validate parameter 'value' before using it.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#DeleteProfiles(System.Web.Profile.ProfileInfoCollection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="103">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SqlProfileProviderBase.DeleteProfiles(ProfileInfoCollection)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="167">In method 'SqlProfileProviderBase.FindInactiveProfilesByUserName(ProfileAuthenticationOption, string, DateTime, int, int, out int)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="193">In method 'SqlProfileProviderBase.FindProfilesByUserName(ProfileAuthenticationOption, string, int, int, out int)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFindCommand()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="429">Change 'SqlProfileProviderBase.GetFindCommand()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetNumberOfInactiveProfilesExpression()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="444">Change 'SqlProfileProviderBase.GetNumberOfInactiveProfilesExpression()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="278">In member 'SqlProfileProviderBase.GetPropertyValues(SettingsContext, SettingsPropertyCollection)', change parameter name 'sc' to 'context' in order to match the identifier as it has been declared in 'SettingsProvider.GetPropertyValues(SettingsContext, SettingsPropertyCollection)'.</Issue>
            </Message>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="278">In member 'SqlProfileProviderBase.GetPropertyValues(SettingsContext, SettingsPropertyCollection)', change parameter name 'properties' to 'collection' in order to match the identifier as it has been declared in 'SettingsProvider.GetPropertyValues(SettingsContext, SettingsPropertyCollection)'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="284">In externally visible method 'SqlProfileProviderBase.GetPropertyValues(SettingsContext, SettingsPropertyCollection)', validate parameter 'sc' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="279">In externally visible method 'SqlProfileProviderBase.GetPropertyValues(SettingsContext, SettingsPropertyCollection)', validate parameter 'properties' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPropertyValuesExpression()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="457">Change 'SqlProfileProviderBase.GetPropertyValuesExpression()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPropertyValuesFromDatabase(System.String,System.Configuration.SettingsPropertyValueCollection)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="468">In member 'SqlProfileProviderBase.GetPropertyValuesFromDatabase(string, SettingsPropertyValueCollection)', the discrete term 'username' in parameter name 'username' should be expressed as a compound word, 'userName'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Initialize(System.String,System.Collections.Specialized.NameValueCollection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sitecore.Diagnostics.Assert.IsNotNull(System.Object,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="319">Method 'SqlProfileProviderBase.Initialize(string, NameValueCollection)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNull(object, string)'. Retrieve the following string(s) from a resource table instead: "config".</Issue>
            </Message>
            <Message Id="Sitecore.Diagnostics.Assert.IsNotNullOrEmpty(System.String,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="333">Method 'SqlProfileProviderBase.Initialize(string, NameValueCollection)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNullOrEmpty(string, string)'. Retrieve the following string(s) from a resource table instead: "connectionString".</Issue>
            </Message>
            <Message Id="ApplicationName" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="356">Correct the spelling of the unrecognized token 'ApplicationName' in the literal '"ApplicationName exceededs "'.</Issue>
            </Message>
            <Message Id="connectionString" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="333">Correct the spelling of the unrecognized token 'connectionString' in the literal '"connectionString"'.</Issue>
            </Message>
            <Message Id="exceededs" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="356">Correct the spelling of the unrecognized token 'exceededs' in the literal '"ApplicationName exceededs "'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="337">Replace the call to 'string.operator ==(string, string)' in 'SqlProfileProviderBase.Initialize(string, NameValueCollection)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="326">In externally visible method 'SqlProfileProviderBase.Initialize(string, NameValueCollection)', validate parameter 'config' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrepareDataForSaving(System.String&amp;,System.String&amp;,System.Byte[]&amp;,System.Boolean,System.Configuration.SettingsPropertyValueCollection,System.Boolean)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="570">In method 'SqlProfileProviderBase.PrepareDataForSaving(ref string, ref string, ref byte[], bool, SettingsPropertyValueCollection, bool)', call System.IDisposable.Dispose on object 'new MemoryStream()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Sitecore.Diagnostics.Assert.IsNotNull(System.Object,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="647">Method 'SqlProfileProviderBase.PrepareDataForSaving(ref string, ref string, ref byte[], bool, SettingsPropertyValueCollection, bool)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNull(object, string)'. Retrieve the following string(s) from a resource table instead: "data".</Issue>
            </Message>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="641">'sVal', a variable, is cast to type 'string' multiple times in method 'SqlProfileProviderBase.PrepareDataForSaving(ref string, ref string, ref byte[], bool, SettingsPropertyValueCollection, bool)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="380">In member 'SqlProfileProviderBase.SetPropertyValues(SettingsContext, SettingsPropertyValueCollection)', change parameter name 'sc' to 'context' in order to match the identifier as it has been declared in 'SettingsProvider.SetPropertyValues(SettingsContext, SettingsPropertyValueCollection)'.</Issue>
            </Message>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="380">In member 'SqlProfileProviderBase.SetPropertyValues(SettingsContext, SettingsPropertyValueCollection)', change parameter name 'properties' to 'collection' in order to match the identifier as it has been declared in 'SettingsProvider.SetPropertyValues(SettingsContext, SettingsPropertyValueCollection)'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="405">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SqlProfileProviderBase.SetPropertyValues(SettingsContext, SettingsPropertyValueCollection)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="380">In externally visible method 'SqlProfileProviderBase.SetPropertyValues(SettingsContext, SettingsPropertyValueCollection)', validate parameter 'sc' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlProfileProviderBase.cs" Line="382">In externally visible method 'SqlProfileProviderBase.SetPropertyValues(SettingsContext, SettingsPropertyValueCollection)', validate parameter 'properties' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SqlRoleProviderBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
           <Issue Certainty="90" Level="Error">'SqlRoleProviderBase' is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: 'RoleProvider', 'ProviderBase'</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#_api" Kind="Field" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SqlRoleProviderBase._api' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddUsersToRoles(System.String[],System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="79">In member 'SqlRoleProviderBase.AddUsersToRoles(string[], string[])', change parameter name 'rolenames' to 'roleNames' in order to match the identifier as it has been declared in 'RoleProvider.AddUsersToRoles(string[], string[])'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="96">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SqlRoleProviderBase.AddUsersToRoles(string[], string[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="111">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SqlRoleProviderBase.AddUsersToRoles(string[], string[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="120">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'SqlRoleProviderBase.AddUsersToRoles(string[], string[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ApplicationName" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_ApplicationName(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="ApplicationName" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="57">Correct the spelling of the unrecognized token 'ApplicationName' in the literal '"ApplicationName exceeds "'.</Issue>
              </Message>
              <Message Id="System.String.Compare(System.String,System.String,System.StringComparison)" TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
               <Issue Name="StringComparison" Certainty="75" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="60">'SqlRoleProviderBase.ApplicationName.set(string)' passes 'StringComparison.InvariantCulture' as the 'StringComparison' parameter to 'string.Compare(string, string, StringComparison)'. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Issue>
              </Message>
              <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="55">In externally visible method 'SqlRoleProviderBase.ApplicationName.set(string)', validate parameter 'value' before using it.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#CreateRole(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="149">In member 'SqlRoleProviderBase.CreateRole(string)', change parameter name 'rolename' to 'roleName' in order to match the identifier as it has been declared in 'RoleProvider.CreateRole(string)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeleteRole(System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="161">In member 'SqlRoleProviderBase.DeleteRole(string, bool)', change parameter name 'rolename' to 'roleName' in order to match the identifier as it has been declared in 'RoleProvider.DeleteRole(string, bool)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindUsersInRole(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="189">In member 'SqlRoleProviderBase.FindUsersInRole(string, string)', change parameter name 'rolename' to 'roleName' in order to match the identifier as it has been declared in 'RoleProvider.FindUsersInRole(string, string)'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="195">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SqlRoleProviderBase.FindUsersInRole(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="201">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SqlRoleProviderBase.FindUsersInRole(string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUsersInRole(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="294">In member 'SqlRoleProviderBase.GetUsersInRole(string)', change parameter name 'rolename' to 'roleName' in order to match the identifier as it has been declared in 'RoleProvider.GetUsersInRole(string)'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="298">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SqlRoleProviderBase.GetUsersInRole(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="304">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SqlRoleProviderBase.GetUsersInRole(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Initialize(System.String,System.Collections.Specialized.NameValueCollection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sitecore.Diagnostics.Assert.IsNotNull(System.Object,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="319">Method 'SqlRoleProviderBase.Initialize(string, NameValueCollection)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNull(object, string)'. Retrieve the following string(s) from a resource table instead: "config".</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="343">Replace the call to 'string.operator ==(string, string)' in 'SqlRoleProviderBase.Initialize(string, NameValueCollection)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="326">In externally visible method 'SqlRoleProviderBase.Initialize(string, NameValueCollection)', validate parameter 'config' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsUserInRole(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="358">In member 'SqlRoleProviderBase.IsUserInRole(string, string)', change parameter name 'rolename' to 'roleName' in order to match the identifier as it has been declared in 'RoleProvider.IsUserInRole(string, string)'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt64(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="387">Because the behavior of 'Convert.ToInt64(object)' could vary based on the current user's locale settings, replace this call in 'SqlRoleProviderBase.IsUserInRole(string, string)' with a call to 'Convert.ToInt64(object, IFormatProvider)'. If the result of 'Convert.ToInt64(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoveUsersFromRoles(System.String[],System.String[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="396">In member 'SqlRoleProviderBase.RemoveUsersFromRoles(string[], string[])', change parameter name 'rolenames' to 'roleNames' in order to match the identifier as it has been declared in 'RoleProvider.RemoveUsersFromRoles(string[], string[])'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="413">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SqlRoleProviderBase.RemoveUsersFromRoles(string[], string[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="424">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SqlRoleProviderBase.RemoveUsersFromRoles(string[], string[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="436">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'SqlRoleProviderBase.RemoveUsersFromRoles(string[], string[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RoleExists(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Security\Accounts" File="SqlRoleProviderBase.cs" Line="463">In member 'SqlRoleProviderBase.RoleExists(string)', change parameter name 'rolename' to 'roleName' in order to match the identifier as it has been declared in 'RoleProvider.RoleExists(string)'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Sitecore.Oracle">
       <Types>
        <Type Name="AllowBreakingChangeAttribute" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">Seal 'AllowBreakingChangeAttribute', if possible.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Sitecore.Oracle.Data.Analytics">
       <Types>
        <Type Name="OracleVisitorQuery" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'OracleVisitorQuery' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="OracleVisits" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'OracleVisits' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Sitecore.Oracle.Data.Connections">
       <Types>
        <Type Name="ConnectionPool" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'ConnectionPool' because it creates members of the following IDisposable types: 'Semaphore'. If 'ConnectionPool' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetConnection()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="ConnectionPool.cs" Line="131">Modify 'ConnectionPool.GetConnection()' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="ConnectionPool.cs" Line="107">Change 'ConnectionPool.GetConnection()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ConnectionPoolManager" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Because type 'ConnectionPoolManager' contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="ConnectionPoolManager.cs" Line="39">In method 'ConnectionPoolManager.ConnectionPoolManager()', call System.IDisposable.Dispose on object 'new Timer(new TimerCallback(ConnectionPoolManager.&lt;&gt;c.&lt;&gt;9, ConnectionPoolManager), null, TimeSpan.FromMinutes(1), TimeSpan.FromMinutes(1))' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Threading.Timer" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="ConnectionPoolManager.cs" Line="39">'ConnectionPoolManager.ConnectionPoolManager()' creates a new instance of 'Timer' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="ConnectionPoolManager.cs" Line="27">Initialize all static fields in 'ConnectionPoolManager' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ForAllPools(System.Action`1&lt;Sitecore.Oracle.Data.Connections.ConnectionPool&gt;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="Sitecore.Diagnostics.Log.Error(System.String,System.Object)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="ConnectionPoolManager.cs" Line="128">Method 'ConnectionPoolManager.ForAllPools(Action&lt;ConnectionPool&gt;)' passes a literal string as parameter 'message' of a call to 'Log.Error(string, object)'. Retrieve the following string(s) from a resource table instead: "Exception while cleaning the pool: ".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="ConnectionPoolManager.cs" Line="126">Modify 'ConnectionPoolManager.ForAllPools(Action&lt;ConnectionPool&gt;)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="ConnectionPoolManager.cs" Line="113">Modify 'ConnectionPoolManager.ForAllPools(Action&lt;ConnectionPool&gt;)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReturnConnection(System.String,Oracle.DataAccess.Client.OracleConnection)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="ConnectionPoolManager.cs" Line="84">'ConnectionPoolManager.ReturnConnection(string, OracleConnection)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PooledCommand" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#CommandText" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#set_CommandText(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
               <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="PooledCommand.cs" Line="139">The query string passed to 'IDbCommand.CommandText.set(string)' in 'PooledCommand.CommandText.set(string)' could contain the following variables 'value'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Connection" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#set_Connection(System.Data.IDbConnection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message Id="Sitecore.Diagnostics.Assert.IsNotNull(System.Object,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
               <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="PooledCommand.cs" Line="111">Method 'PooledCommand.Connection.set(IDbConnection)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNull(object, string)'. Retrieve the following string(s) from a resource table instead: "Only PooledConnection objects are supported".</Issue>
              </Message>
              <Message Id="PooledConnection" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="PooledCommand.cs" Line="111">Correct the spelling of the unrecognized token 'PooledConnection' in the literal '"Only PooledConnection objects are supported"'.</Issue>
              </Message>
              <Message Id="connection" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
               <Issue Name="Local" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="PooledCommand.cs" Line="110">'connection', a variable declared in 'PooledCommand.Connection.set(IDbConnection)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ConvertToRealCommand()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="PooledCommand.cs" Line="38">'PooledCommand.ConvertToRealCommand()' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="PooledCommand.cs" Line="42">The query string passed to 'OracleCommand.CommandText.set(string)' in 'PooledCommand.ConvertToRealCommand()' could contain the following variables 'base.CommandText'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Transaction" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#set_Transaction(System.Data.IDbTransaction)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message Id="Sitecore.Diagnostics.Assert.IsNotNull(System.Object,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
               <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="PooledCommand.cs" Line="127">Method 'PooledCommand.Transaction.set(IDbTransaction)' passes a literal string as parameter 'message' of a call to 'Assert.IsNotNull(object, string)'. Retrieve the following string(s) from a resource table instead: "Only PooledConnection.Transaction objects are supported".</Issue>
              </Message>
              <Message Id="PooledConnection" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
               <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="PooledCommand.cs" Line="127">Correct the spelling of the unrecognized token 'PooledConnection' in the literal '"Only PooledConnection.Transaction objects are supported"'.</Issue>
              </Message>
              <Message Id="transaction" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
               <Issue Name="Local" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="PooledCommand.cs" Line="126">'transaction', a variable declared in 'PooledCommand.Transaction.set(IDbTransaction)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="PooledConnection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'PooledConnection' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Database" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_Database()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="PooledConnection.cs" Line="85">'PooledConnection.Database.get()' creates an exception of type 'NotImplementedException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="NotCalled" Certainty="75" Level="CriticalWarning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="PooledConnection.cs" Line="177">Change 'PooledConnection.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="PooledConnection.cs" Line="177">Modify 'PooledConnection.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PooledConnection+Transaction" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="Sitecore.Diagnostics.Assert.IsTrue(System.Boolean,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="PooledConnection.cs" Line="270">Method 'PooledConnection.Transaction.Dispose()' passes a literal string as parameter 'message' of a call to 'Assert.IsTrue(bool, string)'. Retrieve the following string(s) from a resource table instead: "Unordered nested transactions".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SimpleCommand" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'SimpleCommand' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CreateParameter()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="SimpleCommand.cs" Line="77">In method 'SimpleCommand.CreateParameter()', call System.IDisposable.Dispose on object 'new OracleParameter()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
             <Issue Name="NotCalled" Certainty="75" Level="CriticalWarning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="SimpleCommand.cs" Line="127">Change 'SimpleCommand.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="SimpleCommand.cs" Line="127">Modify 'SimpleCommand.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SimpleDbParameterCollection" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#CopyTo(System.Array,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\BA\7b5a2a333b8d2055\code\Sitecore.Oracle\Data\Connections" File="SimpleDbParameterCollection.cs" Line="115">In externally visible method 'SimpleDbParameterCollection.CopyTo(Array, int)', validate parameter 'array' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Stimulsoft.Database">
       <Types>
        <Type Name="StiOracleMetadataProvider" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'StiOracleMetadataProvider' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Stimulsoft.Report.Dictionary">
       <Types>
        <Type Name="StiOracleAdapterService" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'StiOracleAdapterService' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="StiOracleDatabaseExt" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'StiOracleDatabaseExt' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="StiOracleSourceExt" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2017-07-19 06:02:28Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'StiOracleSourceExt' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AttributeStringLiteralsShouldParseCorrectly" Category="Microsoft.Usage" CheckId="CA2243">
   <Name>Attribute string literals should parse correctly</Name>
   <Description>Literal strings used as attribute parameters that represent URLs, version numbers, or GUIDs, should have the appropriate format.</Description>
   <Resolution Name="Default">In the constructor of {0}, change the value of argument {1}, which is currently "{2}", to something that can be correctly parsed as {3}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264490.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502">
   <Name>Avoid excessive complexity</Name>
   <Description>Method implementations that are exceedingly complex increase the challenge of understanding and maintaining code.</Description>
   <Resolution Name="Default">{0} has a cyclomatic complexity of {1}. Rewrite or refactor the method to reduce complexity to {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182212.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021">
   <Name>Avoid out parameters</Name>
   <Description>Using out parameters might indicate a design flaw. Although there are legitimate times to use out parameters, their use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be an out parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182131.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812">
   <Name>Avoid uninstantiated internal classes</Name>
   <Description>An internal class was detected that is apparently never instantiated. This rule does not attempt to detect late-bound creation and will generate false positives if instances of a type are only created in this way (for example, by means of Activator.CreateInstance or by passing the type as an argument to a TypeConverter constructor).</Description>
   <Resolution Name="Default">{0} is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182265.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813">
   <Name>Avoid unsealed attributes</Name>
   <Description>Seal attribute types for improved performance. Sealing attribute types speeds up performance during reflection on custom attributes.</Description>
   <Resolution Name="Default">Seal {0}, if possible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182267.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816">
   <Name>Call GC.SuppressFinalize correctly</Name>
   <Description>Call GC.SuppressFinalize to suppress finalization of your instance once Dispose has been called. Objects that implement IDisposable should call SuppressFinalize from the IDisposable.Dispose method to prevent the garbage collector from calling Object.Finalize on an object that does not require it.</Description>
   <Resolution Name="NotCalled">Change {0} to call {1}. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182269.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ComVisibleTypeBaseTypesShouldBeComVisible" Category="Microsoft.Interoperability" CheckId="CA1405">
   <Name>COM visible type base types should be COM visible</Name>
   <Description>COM visible types should have an object hierarchy that is uniformly COM visible.</Description>
   <Resolution Name="Default">{0} is marked ComVisible(true) but has the following ComVisible(false) types in its object hierarchy: {1}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182202.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="interoperabilityrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
   <Name>Compound words should be cased correctly</Name>
   <Description>Avoid creating compound words from terms which exist in the dictionary as discrete terms. Do not create a compound word such as 'StopWatch' or 'PopUp'. These terms are recognized in the dictionary and should be cased as 'Stopwatch' and 'Popup'.</Description>
   <Resolution Name="MemberParameterShouldBeCompoundWord">In member {0}, the discrete term '{1}' in parameter name {2} should be expressed as a compound word, '{3}'.</Resolution>
   <Resolution Name="TypeShouldBeCompoundWord">The discrete term '{0}' in type name {1} should be expressed as a compound word, '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264474.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>Do not dispose objects multiple times</Name>
   <Description>A correctly implemented Dispose method can be called multiple times without throwing an exception. However, this is not guaranteed and to avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.</Description>
   <Resolution Name="Default">Object {0} can be disposed more than once in method {1}. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 986</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800">
   <Name>Do not cast unnecessarily</Name>
   <Description>Avoid duplicate casts where possible, since there is a cost associated with them.</Description>
   <Resolution Name="Local">{0}, a variable, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Resolution Name="Parameter">{0}, a parameter, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182271.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104">
   <Name>Do not declare read only mutable reference types</Name>
   <Description>A read-only declaration for a mutable reference type does not prevent the field's instance data from being modified. For example, a read-only StringBuilder field declaration does not make sense, since the data encapsulated by the StringBuilder can be modified using the read-only reference.</Description>
   <Resolution Name="Default">Remove the read-only designation from {0} or change the field to one that is an immutable reference type. If the reference type {1} is, in fact, immutable, exclude this message.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182302.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="25">Error</MessageLevel>
   <File Name="securityrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>Do not expose generic lists</Name>
   <Description>Do not expose List&lt;T&gt; in object models. Use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt; instead. List&lt;T&gt; is meant to be used from implementation, not in object model API. List&lt;T&gt; is optimized for performance at the cost of long term versioning. For example, if you return List&lt;T&gt; to the client code, you will not ever be able to receive notifications when client code modifies the collection.</Description>
   <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
   <Name>Do not ignore method results</Name>
   <Description>The result of methods that return new instances of strings should be assigned to a variable and subsequently used. If the result of a method that creates a new object, such as String.ToLower(), is not assigned to a variable, the call is wasted.</Description>
   <Resolution Name="ObjectCreation">{0} creates a new instance of {1} which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Resolution>
   <Resolution Name="TryParse">{0} calls {1} but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182273.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045">
   <Name>Do not pass types by reference</Name>
   <Description>Although there are legitimate times to use reference parameters, such use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be a reference parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182146.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065">
   <Name>Do not raise exceptions in unexpected locations</Name>
   <Description>Do not explicitly raise exceptions from unexpected locations. There are some methods, such as Equals and GetHashCode, which users do not expect to raise exceptions. Therefore calls to these methods are not commonly wrapped in try catch blocks.</Description>
   <Resolution Name="PropertyGetter">{0} creates an exception of type {1}, an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386039.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error, Warning</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
   <Name>Do not raise reserved exception types</Name>
   <Description>User code should not create and raise exceptions of certain types that are reserved by the runtime or which are of a too general exception type. Exception types that are too general include Exception, SystemException, and ApplicationException. Exception types that are reserved by the runtime include ThreadAbortException, OutOfMemoryException, ExecutionEngineException, and IndexOutOfRangeException.</Description>
   <Resolution Name="TooGeneric">{0} creates an exception of type {1}, an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182338.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberAbbreviation">Correct the casing of '{0}' in member name {1} by changing it to '{2}'. '{2}' is an abbreviation and therefore is not subject to acronym casing guidelines.</Resolution>
   <Resolution Name="MemberParameterAbbreviation">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'. '{3}' is an abbreviation and therefore is not subject to acronym casing guidelines.</Resolution>
   <Resolution Name="TypeAbbreviation">Correct the casing of '{0}' in type name {1} by changing it to '{2}'. '{2}' is an abbreviation and therefore is not subject to acronym casing guidelines.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameterMoreMeaningfulName">In method {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
   <Name>Identifiers should not contain type names</Name>
   <Description>Avoid using language-specific types name in parameters and members and data type identifiers in parameters. Types names might not be intuitive for all developers. It is recommended that you select a generic name, such as 'value', instead. If this is not sufficient, be sure to use the type name as it is defined in the .NET Framework Library and avoid language-specific type names completely. Some examples of C#-specific type names are 'float' (use 'Single' if a generic name is not sufficient), and 'ulong' (use 'UInt64' if a generic name is not sufficient).</Description>
   <Resolution Name="LanguageIndependentMemberParameter">In member {0}, consider replacing the data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb531486.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="Member">Remove the underscores from member name {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711">
   <Name>Identifiers should not have incorrect suffix</Name>
   <Description>Types that do not extend certain base types should not use reserved name suffixes. Types and members should not use 'Ex' or 'New' to distinguish them from an earlier version of the same API, instead, use a numeric suffix such as '2' or provide a more meaningful suffix. Concrete type implementations and members should not end 'Impl'. Members instead, should either consider using the suggested alternate 'Core' in replacement of 'Impl' or avoid any suffix at all.</Description>
   <Resolution Name="TypeNoAlternate">Rename type name {0} so that it does not end in '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182247.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063">
   <Name>Implement IDisposable correctly</Name>
   <Description>All IDisposable types should implement the Dispose pattern correctly.</Description>
   <Resolution Name="DisposeImplementation">Modify {0} so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Resolution>
   <Resolution Name="ProvideDisposeBool">Provide an overridable implementation of Dispose(bool) on {0} or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms244737.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810">
   <Name>Initialize reference type static fields inline</Name>
   <Description>Static fields should be initialized when declared. Initializing static data in explicit static constructors results in less performant code.</Description>
   <Resolution Name="Default">Initialize all static fields in {0} when those fields are declared and remove the explicit static constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182275.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">CriticalWarning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithComVisible" Category="Microsoft.Design" CheckId="CA1017">
   <Name>Mark assemblies with ComVisibleAttribute</Name>
   <Description>The System.Runtime.InteropServices.ComVisible attribute indicates whether COM clients can use the library. Good design dictates that developers explicitly indicate COM visibility. The default value for this attribute is 'true'. However, the best design is to mark the assembly ComVisible false, and then mark types, interfaces, and individual members as ComVisible true, as appropriate.</Description>
   <Resolution Name="NoAttribute">Because {0} exposes externally visible types, mark it with ComVisible(false) at the assembly level and then mark all types within the assembly that should be exposed to COM clients with ComVisible(true).</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182157.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError, Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034">
   <Name>Nested types should not be visible</Name>
   <Description>Do not use public, protected or protected internal (Protected Friend) nested types as a way of grouping types. Use namespaces for this purpose. There are very limited scenarios where nested types are the best design. Also, nested type member accessibility is not clearly understood by all audiences. Enumerators are exempt from this rule.</Description>
   <Resolution Name="Default">Do not nest type {0}. Alternatively, change its accessibility so that it is not externally visible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182162.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308">
   <Name>Normalize strings to uppercase</Name>
   <Description>Strings should be normalized to upper-case.</Description>
   <Resolution Name="ToUpperInvariant">In method {0}, replace the call to {1} with String.ToUpperInvariant().</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725">
   <Name>Parameter names should match base declaration</Name>
   <Description>For usability reasons, parameter names in overridden methods should match those of the base declaration.</Description>
   <Resolution Name="Default">In member {0}, change parameter name {1} to {2} in order to match the identifier as it has been declared in {3}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182251.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ProvideObsoleteAttributeMessage" Category="Microsoft.Design" CheckId="CA1041">
   <Name>Provide ObsoleteAttribute message</Name>
   <Description>The ObsoleteAttribute.Message property provides the text message displayed when an obsolete type or member is compiled. This message should provide information on the replacement for the obsolete element.</Description>
   <Resolution Name="Default">Provide a message for the ObsoleteAttribute that marks {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182166.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>Remove unused locals</Name>
   <Description>Remove locals that are not used or are only assigned to in method implementations.</Description>
   <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100">
   <Name>Review SQL queries for security vulnerabilities</Name>
   <Description>A SQL command string built from user input is vulnerable to SQL injection attacks. Microsoft SQL Server and other database servers support stored procedures and parameterized SQL queries, which reduce the risk of injection attacks.</Description>
   <Resolution Name="WithNonLiterals">The query string passed to {0} in {1} could contain the following variables {2}. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182310.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053">
   <Name>Static holder types should not have constructors</Name>
   <Description>Instances of types that define only static members do not need to be created. Many compilers will automatically add a public default constructor if no constructor is specified. To prevent this, adding an empty private constructor may be required.</Description>
   <Resolution Name="Default">Because type {0} contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182169.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
   <Name>Test for empty strings using string length</Name>
   <Description>To test for empty strings, check if String.Length is equal to zero. Constructs such as "".Equals(someString) and String.Empty.Equals(someString) are less efficient than testing the string length. Replace these with checks for someString.Length == 0.</Description>
   <Resolution Name="IsNullOrEmpty">Replace the call to {0} in {1} with a call to 'String.IsNullOrEmpty'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182279.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>Types that own disposable fields should be disposable</Name>
   <Description>Types that declare disposable members should also implement IDisposable. If the type does not own any unmanaged resources, do not implement a finalizer on it.</Description>
   <Resolution Name="DependsOnFix">Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}. If {0} has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UseOrdinalStringComparison" Category="Microsoft.Globalization" CheckId="CA1309">
   <Name>Use ordinal StringComparison</Name>
   <Description>For non-linguistic comparisons, StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase should be used instead of the linguistically-sensitive StringComparison.InvariantCulture.</Description>
   <Resolution Name="StringComparer">{0} passes '{1}' as the 'StringComparer' parameter to {2}. To perform a non-linguistic comparison, specify 'StringComparer.Ordinal' or 'StringComparer.OrdinalIgnoreCase' instead.</Resolution>
   <Resolution Name="StringComparison">{0} passes '{1}' as the 'StringComparison' parameter to {2}. To perform a non-linguistic comparison, specify 'StringComparison.Ordinal' or 'StringComparison.OrdinalIgnoreCase' instead.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385972.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726">
   <Name>Use preferred terms</Name>
   <Description>Use preferred terms over deprecated alternates.</Description>
   <Resolution Name="Member">Replace the term '{0}' in member name {1} with the preferred alternate '{2}'.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, replace the term '{1}' in parameter name {2} with the preferred alternate '{3}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182258.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Resolution Name="Reassigned">In externally visible method {0}, validate local variable '{1}', which was reassigned from parameter '{2}', before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500">
   <Name>Variable names should not match field names</Name>
   <Description>Instance field and variable names should not be identical within the same scope.</Description>
   <Resolution Name="Local">{0}, a variable declared in {1}, has the same name as an instance field on the type. Change the name of one of these items.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182216.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="14.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
