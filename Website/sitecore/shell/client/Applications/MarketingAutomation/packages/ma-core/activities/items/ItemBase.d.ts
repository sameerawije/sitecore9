import IPlan from '../IPlan';
import Visual from './Visual';
import Position from './Position';
import Connector from '../Connector';
import InsertionPoint from '../InsertionPoint';
export default class ItemBase {
    protected _cssClass: string;
    visual: Visual;
    params: any;
    parent: ItemBase;
    root: IPlan;
    position: Position;
    children: Array<ItemBase>;
    canBeSelected: boolean;
    canBeDeleted: boolean;
    hasFinal: boolean;
    constructor(itemData: any, root: IPlan, parent?: ItemBase);
    id: string;
    readonly activityTypeId: string;
    initParams(itemData: any): void;
    initChildren(itemData: any): void;
    toJson(): any;
    readonly hasVisual: boolean;
    getVisual(): string;
    setVisual(domElement: HTMLElement): void;
    computeChildrenOffsets(): void;
    computeXY(parentX: number, parentY: number): void;
    getConnectors(resultArray: Array<Connector>): void;
    getInserts(resultArray: Array<InsertionPoint>): void;
    readonly hasFrame: boolean;
    getFrame(): any;
    readonly hasLabel: boolean;
    getLabel(): string;
    editorParams: any;
    readonly isDefined: boolean;
    readonly isFinal: boolean;
    private stringifyPropertyValues(object);
    readonly cssClass: string;
    readonly hasDecisionPoint: boolean;
}
